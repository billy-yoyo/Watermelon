// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_src_Mode
#define INCLUDED_src_Mode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(src,Mode)
namespace src{


class Mode_obj : public hx::EnumBase_obj
{
	typedef hx::EnumBase_obj super;
		typedef Mode_obj OBJ_;

	public:
		Mode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_HCSTRING("src.Mode","\x4d","\x8d","\x35","\x7b"); }
		::String __ToString() const { return HX_HCSTRING("Mode.","\x4b","\x93","\x85","\x9f") + _hx_tag; }

		static ::src::Mode AST;
		static inline ::src::Mode AST_dyn() { return AST; }
		static ::src::Mode Compile;
		static inline ::src::Mode Compile_dyn() { return Compile; }
		static ::src::Mode Exit;
		static inline ::src::Mode Exit_dyn() { return Exit; }
		static ::src::Mode Interpret;
		static inline ::src::Mode Interpret_dyn() { return Interpret; }
		static ::src::Mode Recon;
		static inline ::src::Mode Recon_dyn() { return Recon; }
		static ::src::Mode Run;
		static inline ::src::Mode Run_dyn() { return Run; }
};

} // end namespace src

#endif /* INCLUDED_src_Mode */ 
