// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_src_compiler_bytecode_Bytecode
#define INCLUDED_src_compiler_bytecode_Bytecode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(src,compiler,Scope)
HX_DECLARE_CLASS3(src,compiler,bytecode,Bytecode)
HX_DECLARE_CLASS3(src,compiler,bytecode,StringPool)
HX_DECLARE_CLASS3(src,compiler,commands,Command)

namespace src{
namespace compiler{
namespace bytecode{


class HXCPP_CLASS_ATTRIBUTES Bytecode_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Bytecode_obj OBJ_;
		Bytecode_obj();

	public:
		enum { _hx_ClassId = 0x5687c00d };

		void __construct(int code, ::haxe::io::Bytes data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.compiler.bytecode.Bytecode")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"src.compiler.bytecode.Bytecode"); }
		static hx::ObjectPtr< Bytecode_obj > __new(int code, ::haxe::io::Bytes data);
		static hx::ObjectPtr< Bytecode_obj > __alloc(hx::Ctx *_hx_ctx,int code, ::haxe::io::Bytes data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Bytecode_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Bytecode","\x55","\xb0","\x49","\x31"); }

		static void __boot();
		static  ::src::compiler::bytecode::StringPool currentStringPool;
		static  ::src::compiler::bytecode::Bytecode fromDynamic( ::Dynamic el, ::Dynamic code);
		static ::Dynamic fromDynamic_dyn();

		static  ::src::compiler::bytecode::Bytecode fromNull( ::Dynamic code);
		static ::Dynamic fromNull_dyn();

		static  ::src::compiler::bytecode::Bytecode fromCommand( ::src::compiler::commands::Command command);
		static ::Dynamic fromCommand_dyn();

		static  ::src::compiler::bytecode::Bytecode fromKeyword(::String keyword);
		static ::Dynamic fromKeyword_dyn();

		static  ::src::compiler::bytecode::Bytecode fromString(::String str, ::Dynamic code, ::Dynamic allowPool);
		static ::Dynamic fromString_dyn();

		static  ::src::compiler::bytecode::Bytecode fromInt(int x, ::Dynamic code);
		static ::Dynamic fromInt_dyn();

		static  ::src::compiler::bytecode::Bytecode fromVariable(int x, ::Dynamic code);
		static ::Dynamic fromVariable_dyn();

		static  ::src::compiler::bytecode::Bytecode fromFloat(Float x, ::Dynamic code, ::Dynamic _hx_double);
		static ::Dynamic fromFloat_dyn();

		static  ::src::compiler::bytecode::Bytecode fromBool(bool b, ::Dynamic code);
		static ::Dynamic fromBool_dyn();

		static  ::src::compiler::bytecode::Bytecode fromArray(::cpp::VirtualArray arr, ::Dynamic code);
		static ::Dynamic fromArray_dyn();

		static  ::src::compiler::bytecode::Bytecode fromStringPool( ::src::compiler::bytecode::StringPool pool, ::Dynamic code);
		static ::Dynamic fromStringPool_dyn();

		static  ::src::compiler::bytecode::Bytecode fromMap( ::haxe::ds::StringMap map, ::Dynamic code);
		static ::Dynamic fromMap_dyn();

		static  ::haxe::io::Bytes lengthToBytes(int length);
		static ::Dynamic lengthToBytes_dyn();

		static int bytesToLength( ::haxe::io::Bytes bytes,int index);
		static ::Dynamic bytesToLength_dyn();

		static int lengthOfLength(int length);
		static ::Dynamic lengthOfLength_dyn();

		static  ::src::compiler::bytecode::Bytecode join(int code,::Array< ::Dynamic> arr);
		static ::Dynamic join_dyn();

		static bool isKeyword(::String cmd);
		static ::Dynamic isKeyword_dyn();

		static ::Array< ::Dynamic> fromBytes( ::haxe::io::Bytes bytes, ::src::compiler::Scope scope);
		static ::Dynamic fromBytes_dyn();

		int code;
		 ::haxe::io::Bytes data;
		 ::haxe::io::Bytes lengthBytes;
		int getCode();
		::Dynamic getCode_dyn();

		 ::haxe::io::Bytes getData();
		::Dynamic getData_dyn();

		 ::haxe::io::Bytes getLengthBytes();
		::Dynamic getLengthBytes_dyn();

		 ::haxe::io::Bytes getByteData();
		::Dynamic getByteData_dyn();

		 ::Dynamic convert( ::src::compiler::Scope scope);
		::Dynamic convert_dyn();

};

} // end namespace src
} // end namespace compiler
} // end namespace bytecode

#endif /* INCLUDED_src_compiler_bytecode_Bytecode */ 
