// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#define INCLUDED_src_compiler_signals_ExitSignal

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_aff713a4c608204c_12_new)
HX_DECLARE_CLASS3(src,compiler,signals,ExitSignal)

namespace src{
namespace compiler{
namespace signals{


class HXCPP_CLASS_ATTRIBUTES ExitSignal_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ExitSignal_obj OBJ_;
		ExitSignal_obj();

	public:
		enum { _hx_ClassId = 0x1f7d2c12 };

		void __construct(::String msg);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.compiler.signals.ExitSignal")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"src.compiler.signals.ExitSignal"); }

		hx::ObjectPtr< ExitSignal_obj > __new(::String msg) {
			hx::ObjectPtr< ExitSignal_obj > __this = new ExitSignal_obj();
			__this->__construct(msg);
			return __this;
		}

		static hx::ObjectPtr< ExitSignal_obj > __alloc(hx::Ctx *_hx_ctx,::String msg) {
			ExitSignal_obj *__this = (ExitSignal_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ExitSignal_obj), true, "src.compiler.signals.ExitSignal"));
			*(void **)__this = ExitSignal_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_aff713a4c608204c_12_new)
HXDLIN(  12)		( ( ::src::compiler::signals::ExitSignal)(__this) )->msg = msg;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ExitSignal_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ExitSignal","\x46","\xc8","\xc0","\xeb"); }

		::String msg;
		virtual ::String getName();
		::Dynamic getName_dyn();

};

} // end namespace src
} // end namespace compiler
} // end namespace signals

#endif /* INCLUDED_src_compiler_signals_ExitSignal */ 
