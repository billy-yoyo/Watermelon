// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_src_compiler_object_builtin_coroutine_CoroutineLoop
#define INCLUDED_src_compiler_object_builtin_coroutine_CoroutineLoop

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(src,compiler,Scope)
HX_DECLARE_CLASS3(src,compiler,object,Object)
HX_DECLARE_CLASS3(src,compiler,object,ObjectType)
HX_DECLARE_CLASS5(src,compiler,object,builtin,coroutine,CoroutineLoop)
HX_DECLARE_CLASS5(src,compiler,object,builtin,coroutine,CoroutineObject)

namespace src{
namespace compiler{
namespace object{
namespace builtin{
namespace coroutine{


class HXCPP_CLASS_ATTRIBUTES CoroutineLoop_obj : public  ::src::compiler::object::Object_obj
{
	public:
		typedef  ::src::compiler::object::Object_obj super;
		typedef CoroutineLoop_obj OBJ_;
		CoroutineLoop_obj();

	public:
		enum { _hx_ClassId = 0x0beeffe9 };

		void __construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members,::Array< ::Dynamic> args);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.compiler.object.builtin.coroutine.CoroutineLoop")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"src.compiler.object.builtin.coroutine.CoroutineLoop"); }
		static hx::ObjectPtr< CoroutineLoop_obj > __new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members,::Array< ::Dynamic> args);
		static hx::ObjectPtr< CoroutineLoop_obj > __alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members,::Array< ::Dynamic> args);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CoroutineLoop_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CoroutineLoop","\x3c","\xa0","\x80","\x3d"); }

		::Array< ::Dynamic> queue;
		void init(::Array< ::Dynamic> args);

		void startTask( ::src::compiler::object::builtin::coroutine::CoroutineObject coro);
		::Dynamic startTask_dyn();

		void start();
		::Dynamic start_dyn();

		void startWithGlobalLock(Float lock);
		::Dynamic startWithGlobalLock_dyn();

};

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
} // end namespace coroutine

#endif /* INCLUDED_src_compiler_object_builtin_coroutine_CoroutineLoop */ 
