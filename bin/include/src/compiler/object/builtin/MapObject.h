// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_src_compiler_object_builtin_MapObject
#define INCLUDED_src_compiler_object_builtin_MapObject

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(src,compiler,Scope)
HX_DECLARE_CLASS3(src,compiler,object,Object)
HX_DECLARE_CLASS3(src,compiler,object,ObjectType)
HX_DECLARE_CLASS4(src,compiler,object,builtin,IntObject)
HX_DECLARE_CLASS4(src,compiler,object,builtin,MapObject)
HX_DECLARE_CLASS4(src,compiler,object,builtin,ValuedObject)

namespace src{
namespace compiler{
namespace object{
namespace builtin{


class HXCPP_CLASS_ATTRIBUTES MapObject_obj : public  ::src::compiler::object::Object_obj
{
	public:
		typedef  ::src::compiler::object::Object_obj super;
		typedef MapObject_obj OBJ_;
		MapObject_obj();

	public:
		enum { _hx_ClassId = 0x6610c45a };

		void __construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members,::Array< ::Dynamic> args);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.compiler.object.builtin.MapObject")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"src.compiler.object.builtin.MapObject"); }
		static hx::ObjectPtr< MapObject_obj > __new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members,::Array< ::Dynamic> args);
		static hx::ObjectPtr< MapObject_obj > __alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members,::Array< ::Dynamic> args);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MapObject_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MapObject","\x5b","\xba","\xf1","\x99"); }

		 ::haxe::ds::StringMap _map;
		 ::haxe::ds::StringMap hashMap;
		 ::src::compiler::object::Object get( ::src::compiler::object::Object key);

		void set( ::src::compiler::object::Object key, ::src::compiler::object::Object obj);

		void _hx_delete( ::src::compiler::object::Object key);

		 ::src::compiler::object::Object add( ::src::compiler::object::Object other);

		 ::src::compiler::object::builtin::IntObject len();

		 ::src::compiler::object::Object isin( ::src::compiler::object::Object other);

		 ::src::compiler::object::Object iter();

		 ::src::compiler::object::builtin::MapObject map();

		 ::haxe::ds::StringMap getMap();
		::Dynamic getMap_dyn();

};

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin

#endif /* INCLUDED_src_compiler_object_builtin_MapObject */ 
