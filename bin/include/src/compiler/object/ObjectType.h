// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_src_compiler_object_ObjectType
#define INCLUDED_src_compiler_object_ObjectType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(src,compiler,Scope)
HX_DECLARE_CLASS3(src,compiler,object,Object)
HX_DECLARE_CLASS3(src,compiler,object,ObjectType)

namespace src{
namespace compiler{
namespace object{


class HXCPP_CLASS_ATTRIBUTES ObjectType_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ObjectType_obj OBJ_;
		ObjectType_obj();

	public:
		enum { _hx_ClassId = 0x0269ecd7 };

		void __construct( ::src::compiler::Scope scope,::String name, ::haxe::ds::StringMap members,hx::Class objectClass,::Array< ::Dynamic> parentTypes);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.compiler.object.ObjectType")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"src.compiler.object.ObjectType"); }
		static hx::ObjectPtr< ObjectType_obj > __new( ::src::compiler::Scope scope,::String name, ::haxe::ds::StringMap members,hx::Class objectClass,::Array< ::Dynamic> parentTypes);
		static hx::ObjectPtr< ObjectType_obj > __alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope,::String name, ::haxe::ds::StringMap members,hx::Class objectClass,::Array< ::Dynamic> parentTypes);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ObjectType_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ObjectType","\x39","\x6d","\xf2","\xc5"); }

		::String name;
		 ::src::compiler::Scope scope;
		 ::haxe::ds::StringMap members;
		hx::Class objectClass;
		::Array< ::Dynamic> parentTypes;
		hx::Class getObjectClass();
		::Dynamic getObjectClass_dyn();

		bool isType(::String type);
		::Dynamic isType_dyn();

		bool inheritsType(::String type);
		::Dynamic inheritsType_dyn();

		 ::haxe::ds::StringMap getMembers();
		::Dynamic getMembers_dyn();

		void setMember(::String name, ::src::compiler::object::Object obj);
		::Dynamic setMember_dyn();

		 ::src::compiler::object::Object getMember(::String name);
		::Dynamic getMember_dyn();

		void deleteMember(::String name);
		::Dynamic deleteMember_dyn();

		bool hasMember(::String name);
		::Dynamic hasMember_dyn();

		 ::src::compiler::object::Object createObject(::Array< ::Dynamic> args);
		::Dynamic createObject_dyn();

		 ::src::compiler::object::Object createValue( ::Dynamic value,::Array< ::Dynamic> args);
		::Dynamic createValue_dyn();

		 ::src::compiler::Scope getScope();
		::Dynamic getScope_dyn();

		::String getName();
		::Dynamic getName_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace src
} // end namespace compiler
} // end namespace object

#endif /* INCLUDED_src_compiler_object_ObjectType */ 
