// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"?",
"C:\\HaxeToolkit\\haxe\\std/Map.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/EReg.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Std.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Sys.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Type.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/IntMap.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/ObjectMap.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/FileSystem.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/File.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/ds/BalancedTree.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/ds/EnumValueMap.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Eof.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/FPHelper.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Input.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Output.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Path.hx",
"src/Watermelon.hx",
"src/ast/GlobalProcessor.hx",
"src/ast/Token.hx",
"src/ast/TokenProcessor.hx",
"src/ast/base/AccessToken.hx",
"src/ast/base/BlockToken.hx",
"src/ast/base/BracketToken.hx",
"src/ast/base/CommaToken.hx",
"src/ast/base/EndLineToken.hx",
"src/ast/base/KwdToken.hx",
"src/ast/base/ListToken.hx",
"src/ast/base/RootToken.hx",
"src/ast/base/SpliceToken.hx",
"src/ast/base/StringToken.hx",
"src/ast/base/VariableToken.hx",
"src/ast/base/WhitespaceToken.hx",
"src/ast/base/WildcardToken.hx",
"src/ast/maths/BinaryOperatorToken.hx",
"src/ast/maths/FloatToken.hx",
"src/ast/maths/HexToken.hx",
"src/ast/maths/IntegerToken.hx",
"src/ast/maths/MathsOperatorToken.hx",
"src/ast/script/AssignmentToken.hx",
"src/ast/script/BooleanOperatorToken.hx",
"src/ast/script/EqualityOperatorToken.hx",
"src/ast/script/PipeReadToken.hx",
"src/ast/script/PipeWriteToken.hx",
"src/compiler/Core.hx",
"src/compiler/Scope.hx",
"src/compiler/VariableNamePool.hx",
"src/compiler/bytecode/Bytecode.hx",
"src/compiler/bytecode/BytecodeMap.hx",
"src/compiler/bytecode/StringPool.hx",
"src/compiler/commands/AssignmentCommand.hx",
"src/compiler/commands/BreakCommand.hx",
"src/compiler/commands/Command.hx",
"src/compiler/commands/ContinueCommand.hx",
"src/compiler/commands/DeleteCommand.hx",
"src/compiler/commands/ForLoopComand.hx",
"src/compiler/commands/FunctionArgumentCommand.hx",
"src/compiler/commands/FunctionCodeCommand.hx",
"src/compiler/commands/FunctionDefinitionCommand.hx",
"src/compiler/commands/IfCommand.hx",
"src/compiler/commands/ImportCommand.hx",
"src/compiler/commands/IteratorCommand.hx",
"src/compiler/commands/LoopCodeCommand.hx",
"src/compiler/commands/RaiseCommand.hx",
"src/compiler/commands/ReturnCommand.hx",
"src/compiler/commands/RootCommand.hx",
"src/compiler/commands/TryCatchCommand.hx",
"src/compiler/commands/TypeDefinitionCommand.hx",
"src/compiler/commands/WhileLoopCommand.hx",
"src/compiler/commands/coroutine/CoroutineCodeCommand.hx",
"src/compiler/commands/coroutine/CoroutineDefinitionCommand.hx",
"src/compiler/commands/coroutine/CoroutineForLoopCommand.hx",
"src/compiler/commands/coroutine/PipeReadCommand.hx",
"src/compiler/commands/coroutine/PipeWriteCommand.hx",
"src/compiler/commands/value/BinaryExpressionValueCommand.hx",
"src/compiler/commands/value/BoolExpressionValueCommand.hx",
"src/compiler/commands/value/ContainsValueCommand.hx",
"src/compiler/commands/value/EqualityValueCommand.hx",
"src/compiler/commands/value/FunctionCallValueCommand.hx",
"src/compiler/commands/value/ListValueCommand.hx",
"src/compiler/commands/value/LiteralValueCommand.hx",
"src/compiler/commands/value/MapValueCommand.hx",
"src/compiler/commands/value/MathsExpressionValueCommand.hx",
"src/compiler/commands/value/NegationValueCommand.hx",
"src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",
"src/compiler/commands/value/ObjectArrayAssignmentCommand.hx",
"src/compiler/commands/value/ObjectIndexPair.hx",
"src/compiler/commands/value/ObjectValueCommand.hx",
"src/compiler/commands/value/SpliceValueCommand.hx",
"src/compiler/commands/value/StringFormatValueCommand.hx",
"src/compiler/commands/value/TupleValueCommand.hx",
"src/compiler/commands/value/ValueCommand.hx",
"src/compiler/commands/value/VariableAccess.hx",
"src/compiler/commands/value/VariableValueCommand.hx",
"src/compiler/object/Object.hx",
"src/compiler/object/ObjectType.hx",
"src/compiler/object/builtin/BoolObject.hx",
"src/compiler/object/builtin/BuiltinFunction.hx",
"src/compiler/object/builtin/Builtins.hx",
"src/compiler/object/builtin/BytesObject.hx",
"src/compiler/object/builtin/FloatObject.hx",
"src/compiler/object/builtin/FunctionArgument.hx",
"src/compiler/object/builtin/FunctionCode.hx",
"src/compiler/object/builtin/FunctionObject.hx",
"src/compiler/object/builtin/IntObject.hx",
"src/compiler/object/builtin/IteratorObject.hx",
"src/compiler/object/builtin/ListObject.hx",
"src/compiler/object/builtin/MapObject.hx",
"src/compiler/object/builtin/ModuleObject.hx",
"src/compiler/object/builtin/NoneObject.hx",
"src/compiler/object/builtin/ObjectTypeObject.hx",
"src/compiler/object/builtin/PairObject.hx",
"src/compiler/object/builtin/RangeObject.hx",
"src/compiler/object/builtin/Signal.hx",
"src/compiler/object/builtin/SignalObject.hx",
"src/compiler/object/builtin/SpliceObject.hx",
"src/compiler/object/builtin/SpliceValue.hx",
"src/compiler/object/builtin/StringObject.hx",
"src/compiler/object/builtin/TupleObject.hx",
"src/compiler/object/builtin/ValuedObject.hx",
"src/compiler/object/builtin/coroutine/CoroutineFunctionObject.hx",
"src/compiler/object/builtin/coroutine/CoroutineLoop.hx",
"src/compiler/object/builtin/coroutine/CoroutineObject.hx",
"src/compiler/object/builtin/coroutine/CoroutinePacket.hx",
"src/compiler/object/builtin/coroutine/YieldObject.hx",
"src/compiler/signals/CoroutineEmptyReadSignal.hx",
"src/compiler/signals/CustomErrorSignal.hx",
"src/compiler/signals/ExitCodeSignal.hx",
"src/compiler/signals/ExitSignal.hx",
"src/compiler/signals/FunctionReturnSignal.hx",
"src/compiler/signals/ImportErrorSignal.hx",
"src/compiler/signals/IndexOutOfBoundsSignal.hx",
"src/compiler/signals/InvalidArgumentSignal.hx",
"src/compiler/signals/InvalidFieldAccessSignal.hx",
"src/compiler/signals/IteratorExitSignal.hx",
"src/compiler/signals/LoopBreakSignal.hx",
"src/compiler/signals/LoopContinueSignal.hx",
"src/compiler/signals/SyntaxErrorSignal.hx",
"src/compiler/signals/ValueErrorSignal.hx",
"src/compiler/signals/YieldSignal.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"C:\\Code\\haxe\\Watermelon\\?",
"C:\\HaxeToolkit\\haxe\\std\\Map.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\EReg.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Std.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Sys.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Type.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\IntMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\ObjectMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\FileSystem.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\File.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\BalancedTree.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\ds\\EnumValueMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Eof.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\FPHelper.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Input.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Path.hx",
"C:\\Code\\haxe\\Watermelon\\src\\Watermelon.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\GlobalProcessor.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\Token.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\TokenProcessor.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\AccessToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\BlockToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\BracketToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\CommaToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\EndLineToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\KwdToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\ListToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\RootToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\SpliceToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\StringToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\VariableToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\WhitespaceToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\base\\WildcardToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\maths\\BinaryOperatorToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\maths\\FloatToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\maths\\HexToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\maths\\IntegerToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\maths\\MathsOperatorToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\script\\AssignmentToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\script\\BooleanOperatorToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\script\\EqualityOperatorToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\script\\PipeReadToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\ast\\script\\PipeWriteToken.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\Core.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\Scope.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\VariableNamePool.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\bytecode\\Bytecode.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\bytecode\\BytecodeMap.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\bytecode\\StringPool.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\AssignmentCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\BreakCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\Command.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\ContinueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\DeleteCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\ForLoopComand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\FunctionArgumentCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\FunctionCodeCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\FunctionDefinitionCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\IfCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\ImportCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\IteratorCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\LoopCodeCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\RaiseCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\ReturnCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\RootCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\TryCatchCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\TypeDefinitionCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\WhileLoopCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\coroutine\\CoroutineCodeCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\coroutine\\CoroutineDefinitionCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\coroutine\\CoroutineForLoopCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\coroutine\\PipeReadCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\coroutine\\PipeWriteCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\BinaryExpressionValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\BoolExpressionValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ContainsValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\EqualityValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\FunctionCallValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ListValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\LiteralValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\MapValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\MathsExpressionValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\NegationValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ObjectArrayAccessValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ObjectArrayAssignmentCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ObjectIndexPair.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ObjectValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\SpliceValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\StringFormatValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\TupleValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\ValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\VariableAccess.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\commands\\value\\VariableValueCommand.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\Object.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\ObjectType.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\BoolObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\BuiltinFunction.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\Builtins.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\BytesObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\FloatObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\FunctionArgument.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\FunctionCode.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\FunctionObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\IntObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\IteratorObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\ListObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\MapObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\ModuleObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\NoneObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\ObjectTypeObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\PairObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\RangeObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\Signal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\SignalObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\SpliceObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\SpliceValue.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\StringObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\TupleObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\ValuedObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\coroutine\\CoroutineFunctionObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\coroutine\\CoroutineLoop.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\coroutine\\CoroutineObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\coroutine\\CoroutinePacket.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\object\\builtin\\coroutine\\YieldObject.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\CoroutineEmptyReadSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\CustomErrorSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\ExitCodeSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\ExitSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\FunctionReturnSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\ImportErrorSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\IndexOutOfBoundsSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\InvalidArgumentSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\InvalidFieldAccessSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\IteratorExitSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\LoopBreakSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\LoopContinueSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\SyntaxErrorSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\ValueErrorSignal.hx",
"C:\\Code\\haxe\\Watermelon\\src\\compiler\\signals\\YieldSignal.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"EReg",
"_Map.Map_Impl_",
"Reflect",
"Std",
"StringBuf",
"Sys",
"Type",
"haxe.CallStack",
"haxe.ds.BalancedTree",
"haxe.ds.TreeNode",
"haxe.ds.EnumValueMap",
"haxe.ds.IntMap",
"haxe.ds.ObjectMap",
"haxe.ds.StringMap",
"haxe.io.Bytes",
"haxe.io.BytesBuffer",
"haxe.io.Output",
"haxe.io.Eof",
"haxe.io.FPHelper",
"haxe.io.Input",
"haxe.io.Path",
"src.Watermelon",
"src.ast.TokenProcessor",
"src.ast.Token",
"src.ast.base.BlockToken",
"src.ast.base.BracketToken",
"src.ast.base.StringToken",
"src.ast.base.VariableToken",
"src.ast.base.WhitespaceToken",
"src.ast.base.EndLineToken",
"src.ast.script.AssignmentToken",
"src.ast.script.BooleanOperatorToken",
"src.ast.script.EqualityOperatorToken",
"src.ast.maths.IntegerToken",
"src.ast.maths.FloatToken",
"src.ast.maths.MathsOperatorToken",
"src.ast.base.KwdToken",
"src.ast.base.CommaToken",
"src.ast.base.ListToken",
"src.ast.base.AccessToken",
"src.ast.maths.HexToken",
"src.ast.maths.BinaryOperatorToken",
"src.ast.base.SpliceToken",
"src.ast.script.PipeWriteToken",
"src.ast.script.PipeReadToken",
"src.ast.base.WildcardToken",
"src.ast.GlobalProcessor",
"src.ast._TokenProcessor.TokenClass",
"src.ast.base.RootToken",
"src.compiler._Core.OperativeCapture",
"src.compiler.Core",
"src.compiler.Scope",
"src.compiler.VariableNamePool",
"src.compiler.bytecode.Bytecode",
"src.compiler.commands.Command",
"src.compiler.commands.value.ValueCommand",
"src.compiler.commands.value.BoolExpressionValueCommand",
"src.compiler.commands.value.ContainsValueCommand",
"src.compiler.commands.value.EqualityValueCommand",
"src.compiler.signals.ExitSignal",
"src.compiler.signals.SyntaxErrorSignal",
"src.compiler.commands.value.FunctionCallValueCommand",
"src.compiler.commands.value.ListValueCommand",
"src.compiler.commands.value.MapValueCommand",
"src.compiler.commands.value.ValueCommandPair",
"src.compiler.commands.value.MathsExpressionValueCommand",
"src.compiler.commands.value.ObjectArrayAccessValueCommand",
"src.compiler.commands.value.ObjectIndexPair",
"src.compiler.commands.value.ObjectArrayAssignmentCommand",
"src.compiler.commands.value.ObjectValueCommand",
"src.compiler.commands.value.TupleValueCommand",
"src.compiler.commands.value.VariableValueCommand",
"src.compiler.commands.AssignmentCommand",
"src.compiler.commands.BreakCommand",
"src.compiler.commands.ContinueCommand",
"src.compiler.commands.DeleteCommand",
"src.compiler.commands.ForLoopComand",
"src.compiler.commands.FunctionCodeCommand",
"src.compiler.commands.FunctionDefinitionCommand",
"src.compiler.object.builtin.Builtins",
"src.compiler.commands.IfCommand",
"src.compiler.commands.IteratorCommand",
"src.compiler.commands.LoopCodeCommand",
"src.compiler.commands.ReturnCommand",
"src.compiler.commands.RootCommand",
"src.compiler.commands.TypeDefinitionCommand",
"src.compiler.commands.WhileLoopCommand",
"src.compiler.commands.value.Argument",
"src.compiler.commands.CondAndExpr",
"src.compiler.commands.FunctionArgumentCommand",
"src.compiler.commands.value.VariableAccess",
"src.compiler.commands.value.BinaryExpressionValueCommand",
"src.compiler.commands.value.StringFormatValueCommand",
"src.compiler.commands.value.LiteralValueCommand",
"src.compiler.commands.value.NegationValueCommand",
"src.compiler.commands.value.SpliceValueCommand",
"src.compiler.commands.coroutine.PipeReadCommand",
"src.compiler.commands.coroutine.PipeWriteCommand",
"src.compiler.commands.coroutine.CoroutineDefinitionCommand",
"src.compiler.commands.coroutine.CoroutineCodeCommand",
"src.compiler.commands.coroutine.CoroutineForLoopCommand",
"src.compiler.commands.RaiseCommand",
"src.compiler.commands.TryCatchCommand",
"src.compiler.commands.CatchStatement",
"src.compiler.commands.ImportCommand",
"src.compiler.bytecode.BytecodeMap",
"src.compiler.bytecode.StringPool",
"src.compiler.bytecode.MatchFound",
"src.compiler.commands.StaticCatchStatement",
"src.compiler.object.Object",
"src.compiler.object.ObjectType",
"src.compiler.object.builtin.ValuedObject",
"src.compiler.object.builtin.BoolObject",
"src.compiler.object.builtin.BuiltinFunction",
"src.compiler.object.builtin.IntRangeObject",
"src.compiler.object.builtin.BytesObject",
"src.compiler.object.builtin.FloatObject",
"src.compiler.object.builtin.FunctionArgument",
"src.compiler.object.builtin.FunctionCode",
"src.compiler.object.builtin.FunctionObject",
"src.compiler.object.builtin.IntObject",
"src.compiler.object.builtin.IteratorObject",
"src.compiler.object.builtin.ListObject",
"src.compiler.object.builtin.MapObject",
"src.compiler.object.builtin.ModuleObject",
"src.compiler.object.builtin.NoneObject",
"src.compiler.object.builtin.ObjectTypeObject",
"src.compiler.object.builtin.PairObject",
"src.compiler.object.builtin._PairObject.Pair",
"src.compiler.object.builtin.RangeObject",
"src.compiler.object.builtin.Signal",
"src.compiler.object.builtin.SignalObject",
"src.compiler.object.builtin.SpliceObject",
"src.compiler.object.builtin.SpliceValue",
"src.compiler.object.builtin.StringObject",
"src.compiler.object.builtin.TupleObject",
"src.compiler.object.builtin.coroutine.CoroutineFunctionObject",
"src.compiler.object.builtin.coroutine.CoroutineLoop",
"src.compiler.object.builtin.coroutine.CoroutineObject",
"src.compiler.object.builtin.coroutine.CoroutinePacket",
"src.compiler.object.builtin.coroutine.YieldObject",
"src.compiler.signals.CoroutineEmptyReadSignal",
"src.compiler.signals.CustomErrorSignal",
"src.compiler.signals.ExitCodeSignal",
"src.compiler.signals.FunctionReturnSignal",
"src.compiler.signals.ImportErrorSignal",
"src.compiler.signals.IndexOutOfBoundsSignal",
"src.compiler.signals.InvalidArgumentSignal",
"src.compiler.signals.InvalidFieldAccessSignal",
"src.compiler.signals.IteratorExitSignal",
"src.compiler.signals.LoopBreakSignal",
"src.compiler.signals.LoopContinueSignal",
"src.compiler.signals.ValueErrorSignal",
"src.compiler.signals.YieldSignal",
"sys.FileSystem",
"sys.io.File",
"sys.io.FileInput",
"sys.io.FileOutput",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
