// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_ast_TokenPriority
#include <src/ast/TokenPriority.h>
#endif
#ifndef INCLUDED_src_Mode
#include <src/Mode.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_ValueType
#include <ValueType.h>
#endif
#ifndef INCLUDED_src_compiler_bytecode_BytecodeMap
#include <src/compiler/bytecode/BytecodeMap.h>
#endif
#ifndef INCLUDED_src_compiler_bytecode_Bytecode
#include <src/compiler/bytecode/Bytecode.h>
#endif
#ifndef INCLUDED_src_compiler_VariableNamePool
#include <src/compiler/VariableNamePool.h>
#endif
#ifndef INCLUDED_src_compiler_Core
#include <src/compiler/Core.h>
#endif
#ifndef INCLUDED_src_ast_GlobalProcessor
#include <src/ast/GlobalProcessor.h>
#endif
#ifndef INCLUDED_src_ast_maths_HexToken
#include <src/ast/maths/HexToken.h>
#endif
#ifndef INCLUDED_src_ast_base_KwdToken
#include <src/ast/base/KwdToken.h>
#endif
#ifndef INCLUDED_src_ast_maths_FloatToken
#include <src/ast/maths/FloatToken.h>
#endif
#ifndef INCLUDED_src_ast_maths_IntegerToken
#include <src/ast/maths/IntegerToken.h>
#endif
#ifndef INCLUDED_src_ast_base_WhitespaceToken
#include <src/ast/base/WhitespaceToken.h>
#endif
#ifndef INCLUDED_src_ast_base_VariableToken
#include <src/ast/base/VariableToken.h>
#endif
#ifndef INCLUDED_src_ast_base_StringToken
#include <src/ast/base/StringToken.h>
#endif
#ifndef INCLUDED_src_Main
#include <src/Main.h>
#endif
#ifndef INCLUDED_sys_io_FileOutput
#include <sys/io/FileOutput.h>
#endif
#ifndef INCLUDED_sys_io_FileInput
#include <sys/io/FileInput.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ValueErrorSignal
#include <src/compiler/signals/ValueErrorSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_LoopContinueSignal
#include <src/compiler/signals/LoopContinueSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_LoopBreakSignal
#include <src/compiler/signals/LoopBreakSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_IteratorExitSignal
#include <src/compiler/signals/IteratorExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_InvalidFieldAccessSignal
#include <src/compiler/signals/InvalidFieldAccessSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_InvalidArgumentSignal
#include <src/compiler/signals/InvalidArgumentSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_FunctionReturnSignal
#include <src/compiler/signals/FunctionReturnSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitCodeSignal
#include <src/compiler/signals/ExitCodeSignal.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_TupleObject
#include <src/compiler/object/builtin/TupleObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_StringObject
#include <src/compiler/object/builtin/StringObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin__PairObject_Pair
#include <src/compiler/object/builtin/_PairObject/Pair.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_PairObject
#include <src/compiler/object/builtin/PairObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ObjectTypeObject
#include <src/compiler/object/builtin/ObjectTypeObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_NoneObject
#include <src/compiler/object/builtin/NoneObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_MapObject
#include <src/compiler/object/builtin/MapObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ListObject
#include <src/compiler/object/builtin/ListObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IteratorObject
#include <src/compiler/object/builtin/IteratorObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntObject
#include <src/compiler/object/builtin/IntObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FunctionObject
#include <src/compiler/object/builtin/FunctionObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FunctionCode
#include <src/compiler/object/builtin/FunctionCode.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FunctionArgument
#include <src/compiler/object/builtin/FunctionArgument.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FloatObject
#include <src/compiler/object/builtin/FloatObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_RangeObject
#include <src/compiler/object/builtin/RangeObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntRangeObject
#include <src/compiler/object/builtin/IntRangeObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BuiltinFunction
#include <src/compiler/object/builtin/BuiltinFunction.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BoolObject
#include <src/compiler/object/builtin/BoolObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_LiteralValueCommand
#include <src/compiler/commands/value/LiteralValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_bytecode_MatchFound
#include <src/compiler/bytecode/MatchFound.h>
#endif
#ifndef INCLUDED_src_compiler_bytecode_StringPool
#include <src/compiler/bytecode/StringPool.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_BinaryExpressionValueCommand
#include <src/compiler/commands/value/BinaryExpressionValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_VariableAccess
#include <src/compiler/commands/value/VariableAccess.h>
#endif
#ifndef INCLUDED_src_compiler_commands_FunctionArgumentCommand
#include <src/compiler/commands/FunctionArgumentCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_CondAndExpr
#include <src/compiler/commands/CondAndExpr.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_Argument
#include <src/compiler/commands/value/Argument.h>
#endif
#ifndef INCLUDED_src_compiler_commands_WhileLoopCommand
#include <src/compiler/commands/WhileLoopCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_TypeDefinitionCommand
#include <src/compiler/commands/TypeDefinitionCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_RootCommand
#include <src/compiler/commands/RootCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_ReturnCommand
#include <src/compiler/commands/ReturnCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_LoopCodeCommand
#include <src/compiler/commands/LoopCodeCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_IteratorCommand
#include <src/compiler/commands/IteratorCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_IfCommand
#include <src/compiler/commands/IfCommand.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_Builtins
#include <src/compiler/object/builtin/Builtins.h>
#endif
#ifndef INCLUDED_src_compiler_commands_FunctionDefinitionCommand
#include <src/compiler/commands/FunctionDefinitionCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_FunctionCodeCommand
#include <src/compiler/commands/FunctionCodeCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_ForLoopComand
#include <src/compiler/commands/ForLoopComand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_DeleteCommand
#include <src/compiler/commands/DeleteCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_ContinueCommand
#include <src/compiler/commands/ContinueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_BreakCommand
#include <src/compiler/commands/BreakCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_AssignmentCommand
#include <src/compiler/commands/AssignmentCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_VariableValueCommand
#include <src/compiler/commands/value/VariableValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_TupleValueCommand
#include <src/compiler/commands/value/TupleValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ObjectValueCommand
#include <src/compiler/commands/value/ObjectValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ObjectIndexPair
#include <src/compiler/commands/value/ObjectIndexPair.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ObjectArrayAssignmentCommand
#include <src/compiler/commands/value/ObjectArrayAssignmentCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ObjectArrayAccessValueCommand
#include <src/compiler/commands/value/ObjectArrayAccessValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_MathsExpressionValueCommand
#include <src/compiler/commands/value/MathsExpressionValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ValueCommandPair
#include <src/compiler/commands/value/ValueCommandPair.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_MapValueCommand
#include <src/compiler/commands/value/MapValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ListValueCommand
#include <src/compiler/commands/value/ListValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_FunctionCallValueCommand
#include <src/compiler/commands/value/FunctionCallValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_signals_SyntaxErrorSignal
#include <src/compiler/signals/SyntaxErrorSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_EqualityValueCommand
#include <src/compiler/commands/value/EqualityValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ContainsValueCommand
#include <src/compiler/commands/value/ContainsValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_BoolExpressionValueCommand
#include <src/compiler/commands/value/BoolExpressionValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ValueCommand
#include <src/compiler/commands/value/ValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_Command
#include <src/compiler/commands/Command.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler__Core_OperativeCapture
#include <src/compiler/_Core/OperativeCapture.h>
#endif
#ifndef INCLUDED_src_ast_base_RootToken
#include <src/ast/base/RootToken.h>
#endif
#ifndef INCLUDED_src_ast__TokenProcessor_TokenClass
#include <src/ast/_TokenProcessor/TokenClass.h>
#endif
#ifndef INCLUDED_src_ast_maths_BinaryOperatorToken
#include <src/ast/maths/BinaryOperatorToken.h>
#endif
#ifndef INCLUDED_src_ast_base_AccessToken
#include <src/ast/base/AccessToken.h>
#endif
#ifndef INCLUDED_src_ast_base_ListToken
#include <src/ast/base/ListToken.h>
#endif
#ifndef INCLUDED_src_ast_base_CommaToken
#include <src/ast/base/CommaToken.h>
#endif
#ifndef INCLUDED_src_ast_maths_MathsOperatorToken
#include <src/ast/maths/MathsOperatorToken.h>
#endif
#ifndef INCLUDED_src_ast_script_EqualityOperatorToken
#include <src/ast/script/EqualityOperatorToken.h>
#endif
#ifndef INCLUDED_src_ast_script_BooleanOperatorToken
#include <src/ast/script/BooleanOperatorToken.h>
#endif
#ifndef INCLUDED_src_ast_script_AssignmentToken
#include <src/ast/script/AssignmentToken.h>
#endif
#ifndef INCLUDED_src_ast_base_EndLineToken
#include <src/ast/base/EndLineToken.h>
#endif
#ifndef INCLUDED_src_ast_base_BracketToken
#include <src/ast/base/BracketToken.h>
#endif
#ifndef INCLUDED_src_ast_base_BlockToken
#include <src/ast/base/BlockToken.h>
#endif
#ifndef INCLUDED_src_ast_Token
#include <src/ast/Token.h>
#endif
#ifndef INCLUDED_src_ast_TokenProcessor
#include <src/ast/TokenProcessor.h>
#endif
#ifndef INCLUDED_haxe_io_Path
#include <haxe/io/Path.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_FPHelper
#include <haxe/io/FPHelper.h>
#endif
#ifndef INCLUDED_haxe_io_Eof
#include <haxe/io/Eof.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_TreeNode
#include <haxe/ds/TreeNode.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED__Map_Map_Impl_
#include <_Map/Map_Impl_.h>
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif

void __files__boot();

void __boot_all()
{
__files__boot();
hx::RegisterResources( hx::GetResources() );
::src::ast::TokenPriority_obj::__register();
::src::Mode_obj::__register();
::haxe::io::Error_obj::__register();
::ValueType_obj::__register();
::src::compiler::bytecode::BytecodeMap_obj::__register();
::src::compiler::bytecode::Bytecode_obj::__register();
::src::compiler::VariableNamePool_obj::__register();
::src::compiler::Core_obj::__register();
::src::ast::GlobalProcessor_obj::__register();
::src::ast::maths::HexToken_obj::__register();
::src::ast::base::KwdToken_obj::__register();
::src::ast::maths::FloatToken_obj::__register();
::src::ast::maths::IntegerToken_obj::__register();
::src::ast::base::WhitespaceToken_obj::__register();
::src::ast::base::VariableToken_obj::__register();
::src::ast::base::StringToken_obj::__register();
::src::Main_obj::__register();
::sys::io::FileOutput_obj::__register();
::sys::io::FileInput_obj::__register();
::sys::io::File_obj::__register();
::sys::FileSystem_obj::__register();
::src::compiler::signals::ValueErrorSignal_obj::__register();
::src::compiler::signals::LoopContinueSignal_obj::__register();
::src::compiler::signals::LoopBreakSignal_obj::__register();
::src::compiler::signals::IteratorExitSignal_obj::__register();
::src::compiler::signals::InvalidFieldAccessSignal_obj::__register();
::src::compiler::signals::InvalidArgumentSignal_obj::__register();
::src::compiler::signals::FunctionReturnSignal_obj::__register();
::src::compiler::signals::ExitCodeSignal_obj::__register();
::src::compiler::object::builtin::TupleObject_obj::__register();
::src::compiler::object::builtin::StringObject_obj::__register();
::src::compiler::object::builtin::_PairObject::Pair_obj::__register();
::src::compiler::object::builtin::PairObject_obj::__register();
::src::compiler::object::builtin::ObjectTypeObject_obj::__register();
::src::compiler::object::builtin::NoneObject_obj::__register();
::src::compiler::object::builtin::MapObject_obj::__register();
::src::compiler::object::builtin::ListObject_obj::__register();
::src::compiler::object::builtin::IteratorObject_obj::__register();
::src::compiler::object::builtin::IntObject_obj::__register();
::src::compiler::object::builtin::FunctionObject_obj::__register();
::src::compiler::object::builtin::FunctionCode_obj::__register();
::src::compiler::object::builtin::FunctionArgument_obj::__register();
::src::compiler::object::builtin::FloatObject_obj::__register();
::src::compiler::object::builtin::RangeObject_obj::__register();
::src::compiler::object::builtin::IntRangeObject_obj::__register();
::src::compiler::object::builtin::BuiltinFunction_obj::__register();
::src::compiler::object::builtin::BoolObject_obj::__register();
::src::compiler::object::builtin::ValuedObject_obj::__register();
::src::compiler::object::ObjectType_obj::__register();
::src::compiler::object::Object_obj::__register();
::src::compiler::commands::value::LiteralValueCommand_obj::__register();
::src::compiler::bytecode::MatchFound_obj::__register();
::src::compiler::bytecode::StringPool_obj::__register();
::src::compiler::commands::value::BinaryExpressionValueCommand_obj::__register();
::src::compiler::commands::value::VariableAccess_obj::__register();
::src::compiler::commands::FunctionArgumentCommand_obj::__register();
::src::compiler::commands::CondAndExpr_obj::__register();
::src::compiler::commands::value::Argument_obj::__register();
::src::compiler::commands::WhileLoopCommand_obj::__register();
::src::compiler::commands::TypeDefinitionCommand_obj::__register();
::src::compiler::commands::RootCommand_obj::__register();
::src::compiler::commands::ReturnCommand_obj::__register();
::src::compiler::commands::LoopCodeCommand_obj::__register();
::src::compiler::commands::IteratorCommand_obj::__register();
::src::compiler::commands::IfCommand_obj::__register();
::src::compiler::object::builtin::Builtins_obj::__register();
::src::compiler::commands::FunctionDefinitionCommand_obj::__register();
::src::compiler::commands::FunctionCodeCommand_obj::__register();
::src::compiler::commands::ForLoopComand_obj::__register();
::src::compiler::commands::DeleteCommand_obj::__register();
::src::compiler::commands::ContinueCommand_obj::__register();
::src::compiler::commands::BreakCommand_obj::__register();
::src::compiler::commands::AssignmentCommand_obj::__register();
::src::compiler::commands::value::VariableValueCommand_obj::__register();
::src::compiler::commands::value::TupleValueCommand_obj::__register();
::src::compiler::commands::value::ObjectValueCommand_obj::__register();
::src::compiler::commands::value::ObjectIndexPair_obj::__register();
::src::compiler::commands::value::ObjectArrayAssignmentCommand_obj::__register();
::src::compiler::commands::value::ObjectArrayAccessValueCommand_obj::__register();
::src::compiler::commands::value::MathsExpressionValueCommand_obj::__register();
::src::compiler::commands::value::ValueCommandPair_obj::__register();
::src::compiler::commands::value::MapValueCommand_obj::__register();
::src::compiler::commands::value::ListValueCommand_obj::__register();
::src::compiler::commands::value::FunctionCallValueCommand_obj::__register();
::src::compiler::signals::SyntaxErrorSignal_obj::__register();
::src::compiler::signals::ExitSignal_obj::__register();
::src::compiler::commands::value::EqualityValueCommand_obj::__register();
::src::compiler::commands::value::ContainsValueCommand_obj::__register();
::src::compiler::commands::value::BoolExpressionValueCommand_obj::__register();
::src::compiler::commands::value::ValueCommand_obj::__register();
::src::compiler::commands::Command_obj::__register();
::src::compiler::Scope_obj::__register();
::src::compiler::_Core::OperativeCapture_obj::__register();
::src::ast::base::RootToken_obj::__register();
::src::ast::_TokenProcessor::TokenClass_obj::__register();
::src::ast::maths::BinaryOperatorToken_obj::__register();
::src::ast::base::AccessToken_obj::__register();
::src::ast::base::ListToken_obj::__register();
::src::ast::base::CommaToken_obj::__register();
::src::ast::maths::MathsOperatorToken_obj::__register();
::src::ast::script::EqualityOperatorToken_obj::__register();
::src::ast::script::BooleanOperatorToken_obj::__register();
::src::ast::script::AssignmentToken_obj::__register();
::src::ast::base::EndLineToken_obj::__register();
::src::ast::base::BracketToken_obj::__register();
::src::ast::base::BlockToken_obj::__register();
::src::ast::Token_obj::__register();
::src::ast::TokenProcessor_obj::__register();
::haxe::io::Path_obj::__register();
::haxe::io::Output_obj::__register();
::haxe::io::Input_obj::__register();
::haxe::io::FPHelper_obj::__register();
::haxe::io::Eof_obj::__register();
::haxe::io::BytesBuffer_obj::__register();
::haxe::io::Bytes_obj::__register();
::haxe::ds::StringMap_obj::__register();
::haxe::ds::ObjectMap_obj::__register();
::haxe::ds::IntMap_obj::__register();
::haxe::ds::EnumValueMap_obj::__register();
::haxe::ds::TreeNode_obj::__register();
::haxe::ds::BalancedTree_obj::__register();
::haxe::IMap_obj::__register();
::Type_obj::__register();
::Sys_obj::__register();
::Std_obj::__register();
::Reflect_obj::__register();
::_Map::Map_Impl__obj::__register();
::EReg_obj::__register();
::src::ast::TokenPriority_obj::__boot();
::src::Mode_obj::__boot();
::haxe::io::Error_obj::__boot();
::ValueType_obj::__boot();
::src::Main_obj::__boot();
::src::ast::base::StringToken_obj::__boot();
::src::ast::base::VariableToken_obj::__boot();
::src::ast::base::WhitespaceToken_obj::__boot();
::src::ast::maths::IntegerToken_obj::__boot();
::src::ast::maths::FloatToken_obj::__boot();
::src::ast::base::KwdToken_obj::__boot();
::src::ast::maths::HexToken_obj::__boot();
::src::ast::GlobalProcessor_obj::__boot();
::src::compiler::Core_obj::__boot();
::src::compiler::VariableNamePool_obj::__boot();
::src::compiler::bytecode::Bytecode_obj::__boot();
::src::compiler::bytecode::BytecodeMap_obj::__boot();
}

