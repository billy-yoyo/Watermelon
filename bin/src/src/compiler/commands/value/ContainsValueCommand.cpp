// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_ast_Token
#include <src/ast/Token.h>
#endif
#ifndef INCLUDED_src_ast_base_KwdToken
#include <src/ast/base/KwdToken.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_bytecode_Bytecode
#include <src/compiler/bytecode/Bytecode.h>
#endif
#ifndef INCLUDED_src_compiler_commands_Command
#include <src/compiler/commands/Command.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ContainsValueCommand
#include <src/compiler/commands/value/ContainsValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ValueCommand
#include <src/compiler/commands/value/ValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_34_new,"src.compiler.commands.value.ContainsValueCommand","new",0x6629cca9,"src.compiler.commands.value.ContainsValueCommand.new","src/compiler/commands/value/ContainsValueCommand.hx",34,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_42_copy,"src.compiler.commands.value.ContainsValueCommand","copy",0xf72b7f4c,"src.compiler.commands.value.ContainsValueCommand.copy","src/compiler/commands/value/ContainsValueCommand.hx",42,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_46_setScope,"src.compiler.commands.value.ContainsValueCommand","setScope",0xfc13b5a9,"src.compiler.commands.value.ContainsValueCommand.setScope","src/compiler/commands/value/ContainsValueCommand.hx",46,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_54_walk,"src.compiler.commands.value.ContainsValueCommand","walk",0x045920a0,"src.compiler.commands.value.ContainsValueCommand.walk","src/compiler/commands/value/ContainsValueCommand.hx",54,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_59_run,"src.compiler.commands.value.ContainsValueCommand","run",0x662ce394,"src.compiler.commands.value.ContainsValueCommand.run","src/compiler/commands/value/ContainsValueCommand.hx",59,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_64_getName,"src.compiler.commands.value.ContainsValueCommand","getName",0x924676ca,"src.compiler.commands.value.ContainsValueCommand.getName","src/compiler/commands/value/ContainsValueCommand.hx",64,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_69_getFriendlyName,"src.compiler.commands.value.ContainsValueCommand","getFriendlyName",0x60b857d5,"src.compiler.commands.value.ContainsValueCommand.getFriendlyName","src/compiler/commands/value/ContainsValueCommand.hx",69,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_74_getBytecode,"src.compiler.commands.value.ContainsValueCommand","getBytecode",0x0a94a434,"src.compiler.commands.value.ContainsValueCommand.getBytecode","src/compiler/commands/value/ContainsValueCommand.hx",74,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_79_reconstruct,"src.compiler.commands.value.ContainsValueCommand","reconstruct",0x1d23534d,"src.compiler.commands.value.ContainsValueCommand.reconstruct","src/compiler/commands/value/ContainsValueCommand.hx",79,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_17_fromTokens,"src.compiler.commands.value.ContainsValueCommand","fromTokens",0xfbaf2b3b,"src.compiler.commands.value.ContainsValueCommand.fromTokens","src/compiler/commands/value/ContainsValueCommand.hx",17,0xc29a7c45)
HX_LOCAL_STACK_FRAME(_hx_pos_5c9b8e64534e8e6b_28_fromBytecode,"src.compiler.commands.value.ContainsValueCommand","fromBytecode",0xd2758256,"src.compiler.commands.value.ContainsValueCommand.fromBytecode","src/compiler/commands/value/ContainsValueCommand.hx",28,0xc29a7c45)
namespace src{
namespace compiler{
namespace commands{
namespace value{

void ContainsValueCommand_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::commands::value::ValueCommand left, ::src::compiler::commands::value::ValueCommand right){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_34_new)
HXLINE(  35)		super::__construct(scope);
HXLINE(  36)		this->left = left;
HXLINE(  37)		this->right = right;
            	}

Dynamic ContainsValueCommand_obj::__CreateEmpty() { return new ContainsValueCommand_obj; }

void *ContainsValueCommand_obj::_hx_vtable = 0;

Dynamic ContainsValueCommand_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ContainsValueCommand_obj > _hx_result = new ContainsValueCommand_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool ContainsValueCommand_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x20538180) {
		if (inClassId<=(int)0x1020cfc0) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x1020cfc0;
		} else {
			return inClassId==(int)0x20538180;
		}
	} else {
		return inClassId==(int)0x417dfe7f;
	}
}

 ::src::compiler::commands::Command ContainsValueCommand_obj::copy( ::src::compiler::Scope scope){
            	HX_GC_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_42_copy)
HXDLIN(  42)		 ::src::compiler::commands::value::ValueCommand _hx_tmp = hx::TCast<  ::src::compiler::commands::value::ValueCommand >::cast(this->left->copy(scope));
HXDLIN(  42)		return  ::src::compiler::commands::value::ContainsValueCommand_obj::__alloc( HX_CTX ,scope,_hx_tmp,this->right->copy(scope));
            	}


void ContainsValueCommand_obj::setScope( ::src::compiler::Scope scope){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_46_setScope)
HXLINE(  47)		this->super::setScope(scope);
HXLINE(  48)		this->left->setScope(scope);
HXLINE(  49)		this->right->setScope(scope);
            	}


::Array< ::Dynamic> ContainsValueCommand_obj::walk(){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_54_walk)
HXDLIN(  54)		return ::Array_obj< ::Dynamic>::__new(2)->init(0,this->left)->init(1,this->right);
            	}


 ::src::compiler::object::Object ContainsValueCommand_obj::run(){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_59_run)
HXDLIN(  59)		 ::src::compiler::object::Object _hx_tmp = this->left->run();
HXDLIN(  59)		return _hx_tmp->isin(this->right->run());
            	}


::String ContainsValueCommand_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_64_getName)
HXDLIN(  64)		return HX_("ContainsValueCommand",b9,9e,cf,1c);
            	}


::String ContainsValueCommand_obj::getFriendlyName(){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_69_getFriendlyName)
HXDLIN(  69)		return HX_("contains expression",f9,a5,89,8c);
            	}


 ::src::compiler::bytecode::Bytecode ContainsValueCommand_obj::getBytecode(){
            	HX_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_74_getBytecode)
HXDLIN(  74)		::cpp::VirtualArray _hx_tmp = ::cpp::VirtualArray_obj::__new(2)->init(0,this->left)->init(1,this->right);
HXDLIN(  74)		return ::src::compiler::bytecode::Bytecode_obj::fromArray(_hx_tmp,this->getCodeID());
            	}


::Array< ::Dynamic> ContainsValueCommand_obj::reconstruct(){
            	HX_GC_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_79_reconstruct)
HXDLIN(  79)		::Array< ::Dynamic> _hx_tmp = this->left->reconstruct();
HXDLIN(  79)		 ::src::ast::base::KwdToken _hx_tmp1 =  ::src::ast::base::KwdToken_obj::__alloc( HX_CTX ,HX_("in",e5,5b,00,00));
HXDLIN(  79)		return ::src::ast::Token_obj::merge(::cpp::VirtualArray_obj::__new(3)->init(0,_hx_tmp)->init(1,_hx_tmp1)->init(2,this->right->reconstruct()));
            	}


 ::src::compiler::commands::value::ContainsValueCommand ContainsValueCommand_obj::fromTokens( ::src::compiler::Scope scope,::Array< ::Dynamic> tokens){
            	HX_GC_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_17_fromTokens)
HXLINE(  18)		::Array< ::Dynamic> spl = ::src::compiler::commands::value::ValueCommand_obj::splitTokens(scope,tokens,HX_("KwdToken",c1,aa,4a,b9),false,HX_("in",e5,5b,00,00));
HXLINE(  19)		if ((spl->length < (int)2)) {
HXLINE(  19)			HX_STACK_DO_THROW(HX_("Invalid contains expression",30,52,f7,b1));
            		}
            		else {
HXLINE(  20)			if ((spl->length > (int)2)) {
HXLINE(  20)				HX_STACK_DO_THROW(HX_("Too many in keywords in one expression",fd,e1,b1,55));
            			}
            			else {
HXLINE(  22)				return  ::src::compiler::commands::value::ContainsValueCommand_obj::__alloc( HX_CTX ,scope,spl->__get((int)0).StaticCast<  ::src::compiler::commands::value::ValueCommand >(),spl->__get((int)1).StaticCast<  ::src::compiler::commands::value::ValueCommand >());
            			}
            		}
HXLINE(  19)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ContainsValueCommand_obj,fromTokens,return )

 ::src::compiler::commands::value::ContainsValueCommand ContainsValueCommand_obj::fromBytecode( ::src::compiler::Scope scope,::Array< ::Dynamic> arr){
            	HX_GC_STACKFRAME(&_hx_pos_5c9b8e64534e8e6b_28_fromBytecode)
HXDLIN(  28)		 ::Dynamic _hx_tmp = arr->shift().StaticCast<  ::src::compiler::bytecode::Bytecode >()->convert(scope);
HXDLIN(  28)		return  ::src::compiler::commands::value::ContainsValueCommand_obj::__alloc( HX_CTX ,scope,_hx_tmp,arr->shift().StaticCast<  ::src::compiler::bytecode::Bytecode >()->convert(scope));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ContainsValueCommand_obj,fromBytecode,return )


hx::ObjectPtr< ContainsValueCommand_obj > ContainsValueCommand_obj::__new( ::src::compiler::Scope scope, ::src::compiler::commands::value::ValueCommand left, ::src::compiler::commands::value::ValueCommand right) {
	hx::ObjectPtr< ContainsValueCommand_obj > __this = new ContainsValueCommand_obj();
	__this->__construct(scope,left,right);
	return __this;
}

hx::ObjectPtr< ContainsValueCommand_obj > ContainsValueCommand_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::commands::value::ValueCommand left, ::src::compiler::commands::value::ValueCommand right) {
	ContainsValueCommand_obj *__this = (ContainsValueCommand_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ContainsValueCommand_obj), true, "src.compiler.commands.value.ContainsValueCommand"));
	*(void **)__this = ContainsValueCommand_obj::_hx_vtable;
	__this->__construct(scope,left,right);
	return __this;
}

ContainsValueCommand_obj::ContainsValueCommand_obj()
{
}

void ContainsValueCommand_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ContainsValueCommand);
	HX_MARK_MEMBER_NAME(left,"left");
	HX_MARK_MEMBER_NAME(right,"right");
	 ::src::compiler::commands::Command_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ContainsValueCommand_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(left,"left");
	HX_VISIT_MEMBER_NAME(right,"right");
	 ::src::compiler::commands::Command_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ContainsValueCommand_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"run") ) { return hx::Val( run_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { return hx::Val( left ); }
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		if (HX_FIELD_EQ(inName,"walk") ) { return hx::Val( walk_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { return hx::Val( right ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setScope") ) { return hx::Val( setScope_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getBytecode") ) { return hx::Val( getBytecode_dyn() ); }
		if (HX_FIELD_EQ(inName,"reconstruct") ) { return hx::Val( reconstruct_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getFriendlyName") ) { return hx::Val( getFriendlyName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ContainsValueCommand_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fromTokens") ) { outValue = fromTokens_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"fromBytecode") ) { outValue = fromBytecode_dyn(); return true; }
	}
	return false;
}

hx::Val ContainsValueCommand_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { left=inValue.Cast<  ::src::compiler::commands::value::ValueCommand >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { right=inValue.Cast<  ::src::compiler::commands::value::ValueCommand >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ContainsValueCommand_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("left","\x07","\x08","\xb0","\x47"));
	outFields->push(HX_HCSTRING("right","\xdc","\x0b","\x64","\xe9"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ContainsValueCommand_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::src::compiler::commands::value::ValueCommand*/ ,(int)offsetof(ContainsValueCommand_obj,left),HX_HCSTRING("left","\x07","\x08","\xb0","\x47")},
	{hx::fsObject /*::src::compiler::commands::value::ValueCommand*/ ,(int)offsetof(ContainsValueCommand_obj,right),HX_HCSTRING("right","\xdc","\x0b","\x64","\xe9")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ContainsValueCommand_obj_sStaticStorageInfo = 0;
#endif

static ::String ContainsValueCommand_obj_sMemberFields[] = {
	HX_HCSTRING("left","\x07","\x08","\xb0","\x47"),
	HX_HCSTRING("right","\xdc","\x0b","\x64","\xe9"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("setScope","\x92","\xda","\x0d","\x87"),
	HX_HCSTRING("walk","\x09","\x5d","\xf2","\x4e"),
	HX_HCSTRING("run","\x4b","\xe7","\x56","\x00"),
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	HX_HCSTRING("getFriendlyName","\x0c","\x92","\xf4","\xaf"),
	HX_HCSTRING("getBytecode","\xeb","\xb6","\x8b","\x7d"),
	HX_HCSTRING("reconstruct","\x04","\x66","\x1a","\x90"),
	::String(null()) };

static void ContainsValueCommand_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ContainsValueCommand_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ContainsValueCommand_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ContainsValueCommand_obj::__mClass,"__mClass");
};

#endif

hx::Class ContainsValueCommand_obj::__mClass;

static ::String ContainsValueCommand_obj_sStaticFields[] = {
	HX_HCSTRING("fromTokens","\x64","\x1c","\x2b","\xd5"),
	HX_HCSTRING("fromBytecode","\xbf","\xcf","\xae","\xf7"),
	::String(null())
};

void ContainsValueCommand_obj::__register()
{
	hx::Object *dummy = new ContainsValueCommand_obj;
	ContainsValueCommand_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.commands.value.ContainsValueCommand","\x37","\x44","\xf2","\x7b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ContainsValueCommand_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ContainsValueCommand_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ContainsValueCommand_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ContainsValueCommand_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ContainsValueCommand_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ContainsValueCommand_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ContainsValueCommand_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ContainsValueCommand_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace commands
} // end namespace value
