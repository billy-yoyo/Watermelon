// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_ast_Token
#include <src/ast/Token.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_bytecode_Bytecode
#include <src/compiler/bytecode/Bytecode.h>
#endif
#ifndef INCLUDED_src_compiler_commands_Command
#include <src/compiler/commands/Command.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ObjectArrayAccessValueCommand
#include <src/compiler/commands/value/ObjectArrayAccessValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ObjectIndexPair
#include <src/compiler/commands/value/ObjectIndexPair.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ValueCommand
#include <src/compiler/commands/value/ValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ea59960bd103c927_26_new,"src.compiler.commands.value.ObjectArrayAccessValueCommand","new",0x5bc8ff2c,"src.compiler.commands.value.ObjectArrayAccessValueCommand.new","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",26,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_33_copy,"src.compiler.commands.value.ObjectArrayAccessValueCommand","copy",0xecd87f69,"src.compiler.commands.value.ObjectArrayAccessValueCommand.copy","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",33,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_37_setScope,"src.compiler.commands.value.ObjectArrayAccessValueCommand","setScope",0x7edf8846,"src.compiler.commands.value.ObjectArrayAccessValueCommand.setScope","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",37,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_44_walk,"src.compiler.commands.value.ObjectArrayAccessValueCommand","walk",0xfa0620bd,"src.compiler.commands.value.ObjectArrayAccessValueCommand.walk","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",44,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_49_run,"src.compiler.commands.value.ObjectArrayAccessValueCommand","run",0x5bcc1617,"src.compiler.commands.value.ObjectArrayAccessValueCommand.run","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",49,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_54_getName,"src.compiler.commands.value.ObjectArrayAccessValueCommand","getName",0xb9e4a6cd,"src.compiler.commands.value.ObjectArrayAccessValueCommand.getName","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",54,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_59_getFriendlyName,"src.compiler.commands.value.ObjectArrayAccessValueCommand","getFriendlyName",0x12dac2d8,"src.compiler.commands.value.ObjectArrayAccessValueCommand.getFriendlyName","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",59,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_64_getBytecode,"src.compiler.commands.value.ObjectArrayAccessValueCommand","getBytecode",0x4f3e91b7,"src.compiler.commands.value.ObjectArrayAccessValueCommand.getBytecode","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",64,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_69_reconstruct,"src.compiler.commands.value.ObjectArrayAccessValueCommand","reconstruct",0x61cd40d0,"src.compiler.commands.value.ObjectArrayAccessValueCommand.reconstruct","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",69,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_16_fromTokens,"src.compiler.commands.value.ObjectArrayAccessValueCommand","fromTokens",0xa70a9f18,"src.compiler.commands.value.ObjectArrayAccessValueCommand.fromTokens","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",16,0x65bfaca6)
HX_LOCAL_STACK_FRAME(_hx_pos_ea59960bd103c927_21_fromBytecode,"src.compiler.commands.value.ObjectArrayAccessValueCommand","fromBytecode",0xa27b6773,"src.compiler.commands.value.ObjectArrayAccessValueCommand.fromBytecode","src/compiler/commands/value/ObjectArrayAccessValueCommand.hx",21,0x65bfaca6)
namespace src{
namespace compiler{
namespace commands{
namespace value{

void ObjectArrayAccessValueCommand_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::commands::value::ObjectIndexPair objectIndexPair){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_26_new)
HXLINE(  27)		super::__construct(scope);
HXLINE(  28)		this->objectIndexPair = objectIndexPair;
            	}

Dynamic ObjectArrayAccessValueCommand_obj::__CreateEmpty() { return new ObjectArrayAccessValueCommand_obj; }

void *ObjectArrayAccessValueCommand_obj::_hx_vtable = 0;

Dynamic ObjectArrayAccessValueCommand_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ObjectArrayAccessValueCommand_obj > _hx_result = new ObjectArrayAccessValueCommand_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ObjectArrayAccessValueCommand_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x20538180) {
		if (inClassId<=(int)0x1020cfc0) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x1020cfc0;
		} else {
			return inClassId==(int)0x20538180;
		}
	} else {
		return inClassId==(int)0x2e14e82a;
	}
}

 ::src::compiler::commands::Command ObjectArrayAccessValueCommand_obj::copy( ::src::compiler::Scope scope){
            	HX_GC_STACKFRAME(&_hx_pos_ea59960bd103c927_33_copy)
HXDLIN(  33)		return  ::src::compiler::commands::value::ObjectArrayAccessValueCommand_obj::__alloc( HX_CTX ,scope,this->objectIndexPair->copy(scope));
            	}


void ObjectArrayAccessValueCommand_obj::setScope( ::src::compiler::Scope scope){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_37_setScope)
HXLINE(  38)		this->super::setScope(scope);
HXLINE(  39)		this->objectIndexPair->setScope(scope);
            	}


::Array< ::Dynamic> ObjectArrayAccessValueCommand_obj::walk(){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_44_walk)
HXDLIN(  44)		return this->objectIndexPair->walk();
            	}


 ::src::compiler::object::Object ObjectArrayAccessValueCommand_obj::run(){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_49_run)
HXDLIN(  49)		 ::src::compiler::object::Object _hx_tmp = this->objectIndexPair->variable->run();
HXDLIN(  49)		return _hx_tmp->get(this->objectIndexPair->index->run());
            	}


::String ObjectArrayAccessValueCommand_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_54_getName)
HXDLIN(  54)		return HX_("ObjectArrayAccessValueCommand",78,7e,b7,a4);
            	}


::String ObjectArrayAccessValueCommand_obj::getFriendlyName(){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_59_getFriendlyName)
HXDLIN(  59)		return HX_("array index access",d9,2f,fd,e5);
            	}


 ::src::compiler::bytecode::Bytecode ObjectArrayAccessValueCommand_obj::getBytecode(){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_64_getBytecode)
HXDLIN(  64)		::cpp::VirtualArray _hx_tmp = ::cpp::VirtualArray_obj::__new(2)->init(0,this->objectIndexPair->variable)->init(1,this->objectIndexPair->index);
HXDLIN(  64)		return ::src::compiler::bytecode::Bytecode_obj::fromArray(_hx_tmp,this->getCodeID());
            	}


::Array< ::Dynamic> ObjectArrayAccessValueCommand_obj::reconstruct(){
            	HX_STACKFRAME(&_hx_pos_ea59960bd103c927_69_reconstruct)
HXDLIN(  69)		return this->objectIndexPair->reconstruct();
            	}


 ::src::compiler::commands::value::ObjectArrayAccessValueCommand ObjectArrayAccessValueCommand_obj::fromTokens( ::src::compiler::Scope scope,::Array< ::Dynamic> tokens){
            	HX_GC_STACKFRAME(&_hx_pos_ea59960bd103c927_16_fromTokens)
HXDLIN(  16)		return  ::src::compiler::commands::value::ObjectArrayAccessValueCommand_obj::__alloc( HX_CTX ,scope,::src::compiler::commands::value::ObjectIndexPair_obj::fromTokens(scope,tokens));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ObjectArrayAccessValueCommand_obj,fromTokens,return )

 ::src::compiler::commands::value::ObjectArrayAccessValueCommand ObjectArrayAccessValueCommand_obj::fromBytecode( ::src::compiler::Scope scope,::Array< ::Dynamic> arr){
            	HX_GC_STACKFRAME(&_hx_pos_ea59960bd103c927_21_fromBytecode)
HXDLIN(  21)		 ::Dynamic _hx_tmp = arr->shift().StaticCast<  ::src::compiler::bytecode::Bytecode >()->convert(scope);
HXDLIN(  21)		return  ::src::compiler::commands::value::ObjectArrayAccessValueCommand_obj::__alloc( HX_CTX ,scope, ::src::compiler::commands::value::ObjectIndexPair_obj::__alloc( HX_CTX ,scope,_hx_tmp,arr->shift().StaticCast<  ::src::compiler::bytecode::Bytecode >()->convert(scope)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ObjectArrayAccessValueCommand_obj,fromBytecode,return )


hx::ObjectPtr< ObjectArrayAccessValueCommand_obj > ObjectArrayAccessValueCommand_obj::__new( ::src::compiler::Scope scope, ::src::compiler::commands::value::ObjectIndexPair objectIndexPair) {
	hx::ObjectPtr< ObjectArrayAccessValueCommand_obj > __this = new ObjectArrayAccessValueCommand_obj();
	__this->__construct(scope,objectIndexPair);
	return __this;
}

hx::ObjectPtr< ObjectArrayAccessValueCommand_obj > ObjectArrayAccessValueCommand_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::commands::value::ObjectIndexPair objectIndexPair) {
	ObjectArrayAccessValueCommand_obj *__this = (ObjectArrayAccessValueCommand_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ObjectArrayAccessValueCommand_obj), true, "src.compiler.commands.value.ObjectArrayAccessValueCommand"));
	*(void **)__this = ObjectArrayAccessValueCommand_obj::_hx_vtable;
	__this->__construct(scope,objectIndexPair);
	return __this;
}

ObjectArrayAccessValueCommand_obj::ObjectArrayAccessValueCommand_obj()
{
}

void ObjectArrayAccessValueCommand_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ObjectArrayAccessValueCommand);
	HX_MARK_MEMBER_NAME(objectIndexPair,"objectIndexPair");
	 ::src::compiler::commands::Command_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ObjectArrayAccessValueCommand_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(objectIndexPair,"objectIndexPair");
	 ::src::compiler::commands::Command_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ObjectArrayAccessValueCommand_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"run") ) { return hx::Val( run_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		if (HX_FIELD_EQ(inName,"walk") ) { return hx::Val( walk_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setScope") ) { return hx::Val( setScope_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getBytecode") ) { return hx::Val( getBytecode_dyn() ); }
		if (HX_FIELD_EQ(inName,"reconstruct") ) { return hx::Val( reconstruct_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"objectIndexPair") ) { return hx::Val( objectIndexPair ); }
		if (HX_FIELD_EQ(inName,"getFriendlyName") ) { return hx::Val( getFriendlyName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ObjectArrayAccessValueCommand_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fromTokens") ) { outValue = fromTokens_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"fromBytecode") ) { outValue = fromBytecode_dyn(); return true; }
	}
	return false;
}

hx::Val ObjectArrayAccessValueCommand_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"objectIndexPair") ) { objectIndexPair=inValue.Cast<  ::src::compiler::commands::value::ObjectIndexPair >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ObjectArrayAccessValueCommand_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("objectIndexPair","\x8d","\xa5","\xa2","\x91"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ObjectArrayAccessValueCommand_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::src::compiler::commands::value::ObjectIndexPair*/ ,(int)offsetof(ObjectArrayAccessValueCommand_obj,objectIndexPair),HX_HCSTRING("objectIndexPair","\x8d","\xa5","\xa2","\x91")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ObjectArrayAccessValueCommand_obj_sStaticStorageInfo = 0;
#endif

static ::String ObjectArrayAccessValueCommand_obj_sMemberFields[] = {
	HX_HCSTRING("objectIndexPair","\x8d","\xa5","\xa2","\x91"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("setScope","\x92","\xda","\x0d","\x87"),
	HX_HCSTRING("walk","\x09","\x5d","\xf2","\x4e"),
	HX_HCSTRING("run","\x4b","\xe7","\x56","\x00"),
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	HX_HCSTRING("getFriendlyName","\x0c","\x92","\xf4","\xaf"),
	HX_HCSTRING("getBytecode","\xeb","\xb6","\x8b","\x7d"),
	HX_HCSTRING("reconstruct","\x04","\x66","\x1a","\x90"),
	::String(null()) };

static void ObjectArrayAccessValueCommand_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ObjectArrayAccessValueCommand_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ObjectArrayAccessValueCommand_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ObjectArrayAccessValueCommand_obj::__mClass,"__mClass");
};

#endif

hx::Class ObjectArrayAccessValueCommand_obj::__mClass;

static ::String ObjectArrayAccessValueCommand_obj_sStaticFields[] = {
	HX_HCSTRING("fromTokens","\x64","\x1c","\x2b","\xd5"),
	HX_HCSTRING("fromBytecode","\xbf","\xcf","\xae","\xf7"),
	::String(null())
};

void ObjectArrayAccessValueCommand_obj::__register()
{
	hx::Object *dummy = new ObjectArrayAccessValueCommand_obj;
	ObjectArrayAccessValueCommand_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.commands.value.ObjectArrayAccessValueCommand","\x3a","\x39","\x3f","\xf5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ObjectArrayAccessValueCommand_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ObjectArrayAccessValueCommand_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ObjectArrayAccessValueCommand_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ObjectArrayAccessValueCommand_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ObjectArrayAccessValueCommand_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ObjectArrayAccessValueCommand_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ObjectArrayAccessValueCommand_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ObjectArrayAccessValueCommand_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace commands
} // end namespace value
