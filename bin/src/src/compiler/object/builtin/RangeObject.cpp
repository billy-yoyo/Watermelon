// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BoolObject
#include <src/compiler/object/builtin/BoolObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FloatObject
#include <src/compiler/object/builtin/FloatObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_RangeObject
#include <src/compiler/object/builtin/RangeObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fe4607b762e17f62_14_new,"src.compiler.object.builtin.RangeObject","new",0x1112c319,"src.compiler.object.builtin.RangeObject.new","src/compiler/object/builtin/RangeObject.hx",14,0x6d58a719)
HX_LOCAL_STACK_FRAME(_hx_pos_fe4607b762e17f62_22_next,"src.compiler.object.builtin.RangeObject","next",0xdf57f41a,"src.compiler.object.builtin.RangeObject.next","src/compiler/object/builtin/RangeObject.hx",22,0x6d58a719)
HX_LOCAL_STACK_FRAME(_hx_pos_fe4607b762e17f62_30_hasNext,"src.compiler.object.builtin.RangeObject","hasNext",0xdd87e8a6,"src.compiler.object.builtin.RangeObject.hasNext","src/compiler/object/builtin/RangeObject.hx",30,0x6d58a719)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void RangeObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type,Float start,Float end,Float step){
            	HX_STACKFRAME(&_hx_pos_fe4607b762e17f62_14_new)
HXLINE(  15)		super::__construct(scope,type,null(),null());
HXLINE(  16)		this->start = start;
HXLINE(  17)		this->end = end;
HXLINE(  18)		this->step = step;
            	}

Dynamic RangeObject_obj::__CreateEmpty() { return new RangeObject_obj; }

void *RangeObject_obj::_hx_vtable = 0;

Dynamic RangeObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< RangeObject_obj > _hx_result = new RangeObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool RangeObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x15de4261) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
	} else {
		return inClassId==(int)0x75d22617;
	}
}

 ::src::compiler::object::Object RangeObject_obj::next(){
            	HX_STACKFRAME(&_hx_pos_fe4607b762e17f62_22_next)
HXLINE(  23)		Float last = this->progress;
HXLINE(  24)		this->progress = (this->progress + this->step);
HXLINE(  25)		return this->_float(last,null());
            	}


 ::src::compiler::object::builtin::BoolObject RangeObject_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_fe4607b762e17f62_30_hasNext)
HXDLIN(  30)		return this->_bool((this->progress < this->end),null());
            	}



hx::ObjectPtr< RangeObject_obj > RangeObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type,Float start,Float end,Float step) {
	hx::ObjectPtr< RangeObject_obj > __this = new RangeObject_obj();
	__this->__construct(scope,type,start,end,step);
	return __this;
}

hx::ObjectPtr< RangeObject_obj > RangeObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type,Float start,Float end,Float step) {
	RangeObject_obj *__this = (RangeObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(RangeObject_obj), true, "src.compiler.object.builtin.RangeObject"));
	*(void **)__this = RangeObject_obj::_hx_vtable;
	__this->__construct(scope,type,start,end,step);
	return __this;
}

RangeObject_obj::RangeObject_obj()
{
}

hx::Val RangeObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { return hx::Val( step ); }
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { return hx::Val( start ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { return hx::Val( progress ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val RangeObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { end=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { step=inValue.Cast< Float >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { start=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { progress=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void RangeObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("start","\x62","\x74","\x0b","\x84"));
	outFields->push(HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"));
	outFields->push(HX_HCSTRING("step","\x4c","\xe7","\x5b","\x4c"));
	outFields->push(HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo RangeObject_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(RangeObject_obj,start),HX_HCSTRING("start","\x62","\x74","\x0b","\x84")},
	{hx::fsFloat,(int)offsetof(RangeObject_obj,end),HX_HCSTRING("end","\xdb","\x03","\x4d","\x00")},
	{hx::fsFloat,(int)offsetof(RangeObject_obj,step),HX_HCSTRING("step","\x4c","\xe7","\x5b","\x4c")},
	{hx::fsFloat,(int)offsetof(RangeObject_obj,progress),HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *RangeObject_obj_sStaticStorageInfo = 0;
#endif

static ::String RangeObject_obj_sMemberFields[] = {
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"),
	HX_HCSTRING("step","\x4c","\xe7","\x5b","\x4c"),
	HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	HX_HCSTRING("hasNext","\x6d","\xa5","\x46","\x18"),
	::String(null()) };

static void RangeObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(RangeObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void RangeObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(RangeObject_obj::__mClass,"__mClass");
};

#endif

hx::Class RangeObject_obj::__mClass;

void RangeObject_obj::__register()
{
	hx::Object *dummy = new RangeObject_obj;
	RangeObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.RangeObject","\xa7","\x42","\xa3","\xca");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = RangeObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(RangeObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< RangeObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = RangeObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RangeObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RangeObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
