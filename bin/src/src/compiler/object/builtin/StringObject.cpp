// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_ast_GlobalProcessor
#include <src/ast/GlobalProcessor.h>
#endif
#ifndef INCLUDED_src_ast_Token
#include <src/ast/Token.h>
#endif
#ifndef INCLUDED_src_ast_base_RootToken
#include <src/ast/base/RootToken.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_commands_Command
#include <src/compiler/commands/Command.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ListValueCommand
#include <src/compiler/commands/value/ListValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_MapValueCommand
#include <src/compiler/commands/value/MapValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_TupleValueCommand
#include <src/compiler/commands/value/TupleValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_commands_value_ValueCommand
#include <src/compiler/commands/value/ValueCommand.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BoolObject
#include <src/compiler/object/builtin/BoolObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FloatObject
#include <src/compiler/object/builtin/FloatObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntObject
#include <src/compiler/object/builtin/IntObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ListObject
#include <src/compiler/object/builtin/ListObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_MapObject
#include <src/compiler/object/builtin/MapObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_StringObject
#include <src/compiler/object/builtin/StringObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_TupleObject
#include <src/compiler/object/builtin/TupleObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_da3b51da93407a2f_17_new,"src.compiler.object.builtin.StringObject","new",0x9bc9b937,"src.compiler.object.builtin.StringObject.new","src/compiler/object/builtin/StringObject.hx",17,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_23_setup,"src.compiler.object.builtin.StringObject","setup",0x4d92bb14,"src.compiler.object.builtin.StringObject.setup","src/compiler/object/builtin/StringObject.hx",23,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_28_getValue,"src.compiler.object.builtin.StringObject","getValue",0x106b3ac4,"src.compiler.object.builtin.StringObject.getValue","src/compiler/object/builtin/StringObject.hx",28,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_32_get,"src.compiler.object.builtin.StringObject","get",0x9bc4696d,"src.compiler.object.builtin.StringObject.get","src/compiler/object/builtin/StringObject.hx",32,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_38_bool,"src.compiler.object.builtin.StringObject","bool",0xacd15773,"src.compiler.object.builtin.StringObject.bool","src/compiler/object/builtin/StringObject.hx",38,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_46_float,"src.compiler.object.builtin.StringObject","float",0xd5f9d233,"src.compiler.object.builtin.StringObject.float","src/compiler/object/builtin/StringObject.hx",46,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_52_int,"src.compiler.object.builtin.StringObject","int",0x9bc5f5c6,"src.compiler.object.builtin.StringObject.int","src/compiler/object/builtin/StringObject.hx",52,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_58_list,"src.compiler.object.builtin.StringObject","list",0xb368efa7,"src.compiler.object.builtin.StringObject.list","src/compiler/object/builtin/StringObject.hx",58,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_66_tuple,"src.compiler.object.builtin.StringObject","tuple",0xeb89a89f,"src.compiler.object.builtin.StringObject.tuple","src/compiler/object/builtin/StringObject.hx",66,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_74_map,"src.compiler.object.builtin.StringObject","map",0x9bc8f373,"src.compiler.object.builtin.StringObject.map","src/compiler/object/builtin/StringObject.hx",74,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_82_len,"src.compiler.object.builtin.StringObject","len",0x9bc834ac,"src.compiler.object.builtin.StringObject.len","src/compiler/object/builtin/StringObject.hx",82,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_88_eq,"src.compiler.object.builtin.StringObject","eq",0xd1a19775,"src.compiler.object.builtin.StringObject.eq","src/compiler/object/builtin/StringObject.hx",88,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_94_neq,"src.compiler.object.builtin.StringObject","neq",0x9bc9b931,"src.compiler.object.builtin.StringObject.neq","src/compiler/object/builtin/StringObject.hx",94,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_100_add,"src.compiler.object.builtin.StringObject","add",0x9bbfdaf8,"src.compiler.object.builtin.StringObject.add","src/compiler/object/builtin/StringObject.hx",100,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_107_mult,"src.compiler.object.builtin.StringObject","mult",0xb41b3b39,"src.compiler.object.builtin.StringObject.mult","src/compiler/object/builtin/StringObject.hx",107,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_119_div,"src.compiler.object.builtin.StringObject","div",0x9bc22628,"src.compiler.object.builtin.StringObject.div","src/compiler/object/builtin/StringObject.hx",119,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_133_str,"src.compiler.object.builtin.StringObject","str",0x9bcd9188,"src.compiler.object.builtin.StringObject.str","src/compiler/object/builtin/StringObject.hx",133,0x00cce337)
HX_LOCAL_STACK_FRAME(_hx_pos_da3b51da93407a2f_140_getHash,"src.compiler.object.builtin.StringObject","getHash",0xd33b7fdb,"src.compiler.object.builtin.StringObject.getHash","src/compiler/object/builtin/StringObject.hx",140,0x00cce337)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void StringObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_17_new)
HXDLIN(  17)		super::__construct(scope,type,members,value,args);
            	}

Dynamic StringObject_obj::__CreateEmpty() { return new StringObject_obj; }

void *StringObject_obj::_hx_vtable = 0;

Dynamic StringObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StringObject_obj > _hx_result = new StringObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool StringObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x616459f1) {
		if (inClassId<=(int)0x15de4261) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
		} else {
			return inClassId==(int)0x616459f1;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

void StringObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_23_setup)
HXDLIN(  23)		this->value = ( (::String)(value) );
            	}


::String StringObject_obj::getValue(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_28_getValue)
HXDLIN(  28)		return this->value;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StringObject_obj,getValue,return )

 ::src::compiler::object::Object StringObject_obj::get( ::src::compiler::object::Object index){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_32_get)
HXLINE(  33)		if (this->hasMember(HX_("__get__",16,fe,be,fb))) {
HXLINE(  33)			return this->callMember(HX_("__get__",16,fe,be,fb),::Array_obj< ::Dynamic>::__new(1)->init(0,index));
            		}
HXLINE(  34)		::String _hx_tmp = this->value;
HXDLIN(  34)		return this->_str(_hx_tmp.charAt(index->rawInt()),null());
            	}


 ::src::compiler::object::builtin::BoolObject StringObject_obj::_hx_bool(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_38_bool)
HXLINE(  39)		if (this->hasMember(HX_("__bool__",ea,20,54,0a))) {
HXLINE(  39)			return hx::TCast<  ::src::compiler::object::builtin::BoolObject >::cast(this->callMember(HX_("__bool__",ea,20,54,0a),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  40)		bool b;
HXDLIN(  40)		if ((this->value == HX_("true",4e,a7,03,4d))) {
HXLINE(  40)			b = true;
            		}
            		else {
HXLINE(  40)			b = false;
            		}
HXLINE(  41)		bool _hx_tmp;
HXDLIN(  41)		if (!(b)) {
HXLINE(  41)			_hx_tmp = (this->value != HX_("false",a3,35,4f,fb));
            		}
            		else {
HXLINE(  41)			_hx_tmp = false;
            		}
HXDLIN(  41)		if (_hx_tmp) {
HXLINE(  41)			HX_STACK_DO_THROW(HX_("String doesn't represent a bool",6e,a3,39,56));
            		}
HXLINE(  42)		return this->_bool(b,null());
            	}


 ::src::compiler::object::builtin::FloatObject StringObject_obj::_hx_float(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_46_float)
HXLINE(  47)		if (this->hasMember(HX_("__float__",9c,08,57,6b))) {
HXLINE(  47)			return hx::TCast<  ::src::compiler::object::builtin::FloatObject >::cast(this->callMember(HX_("__float__",9c,08,57,6b),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  48)		return this->_float(::Std_obj::parseFloat(this->value),null());
            	}


 ::src::compiler::object::builtin::IntObject StringObject_obj::_hx_int(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_52_int)
HXLINE(  53)		if (this->hasMember(HX_("__int__",af,12,7f,28))) {
HXLINE(  53)			return hx::TCast<  ::src::compiler::object::builtin::IntObject >::cast(this->callMember(HX_("__int__",af,12,7f,28),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  54)		return this->_int(::Std_obj::parseInt(this->value),null());
            	}


 ::src::compiler::object::builtin::ListObject StringObject_obj::list(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_58_list)
HXLINE(  59)		if (this->hasMember(HX_("__list__",1e,2e,29,98))) {
HXLINE(  59)			return hx::TCast<  ::src::compiler::object::builtin::ListObject >::cast(this->callMember(HX_("__list__",1e,2e,29,98),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  60)		::Array< ::Dynamic> tokens = ( (::Array< ::Dynamic>)(::src::ast::GlobalProcessor_obj::process(this->value)->content) );
HXLINE(  61)		 ::src::compiler::commands::value::ListValueCommand listCmd = ::src::compiler::commands::value::ListValueCommand_obj::fromTokens(this->scope,tokens);
HXLINE(  62)		return hx::TCast<  ::src::compiler::object::builtin::ListObject >::cast(listCmd->run());
            	}


 ::src::compiler::object::builtin::TupleObject StringObject_obj::tuple(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_66_tuple)
HXLINE(  67)		if (this->hasMember(HX_("__tuple__",08,52,5a,e5))) {
HXLINE(  67)			return hx::TCast<  ::src::compiler::object::builtin::TupleObject >::cast(this->callMember(HX_("__tuple__",08,52,5a,e5),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  68)		::Array< ::Dynamic> tokens = ( (::Array< ::Dynamic>)(::src::ast::GlobalProcessor_obj::process(this->value)->content) );
HXLINE(  69)		 ::src::compiler::commands::value::TupleValueCommand listCmd = ::src::compiler::commands::value::TupleValueCommand_obj::fromTokens(this->scope,tokens);
HXLINE(  70)		return hx::TCast<  ::src::compiler::object::builtin::TupleObject >::cast(listCmd->run());
            	}


 ::src::compiler::object::builtin::MapObject StringObject_obj::map(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_74_map)
HXLINE(  75)		if (this->hasMember(HX_("__map__",9c,95,7e,6d))) {
HXLINE(  75)			return hx::TCast<  ::src::compiler::object::builtin::MapObject >::cast(this->callMember(HX_("__map__",9c,95,7e,6d),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  76)		::Array< ::Dynamic> tokens = ( (::Array< ::Dynamic>)(::src::ast::GlobalProcessor_obj::process(this->value)->content) );
HXLINE(  77)		 ::src::compiler::commands::value::MapValueCommand listCmd = ::src::compiler::commands::value::MapValueCommand_obj::fromTokens(this->scope,tokens);
HXLINE(  78)		return hx::TCast<  ::src::compiler::object::builtin::MapObject >::cast(listCmd->run());
            	}


 ::src::compiler::object::builtin::IntObject StringObject_obj::len(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_82_len)
HXLINE(  83)		if (this->hasMember(HX_("__len__",15,57,bb,dc))) {
HXLINE(  83)			return hx::TCast<  ::src::compiler::object::builtin::IntObject >::cast(this->callMember(HX_("__len__",15,57,bb,dc),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  84)		return this->_int(this->value.length,null());
            	}


 ::src::compiler::object::Object StringObject_obj::eq( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_88_eq)
HXLINE(  89)		if (this->hasMember(HX_("__eq__",ac,01,11,f2))) {
HXLINE(  89)			return this->callMember(HX_("__eq__",ac,01,11,f2),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  90)		::String _hx_tmp = other->rawString();
HXDLIN(  90)		return this->_bool((_hx_tmp == this->rawString()),null());
            	}


 ::src::compiler::object::Object StringObject_obj::neq( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_94_neq)
HXLINE(  95)		if (this->hasMember(HX_("__neq__",da,c6,8a,03))) {
HXLINE(  95)			return this->callMember(HX_("__neq__",da,c6,8a,03),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  96)		::String _hx_tmp = other->rawString();
HXDLIN(  96)		return this->_bool((_hx_tmp != this->rawString()),null());
            	}


 ::src::compiler::object::Object StringObject_obj::add( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_100_add)
HXLINE( 101)		if (this->hasMember(HX_("__add__",61,28,a2,86))) {
HXLINE( 101)			return this->callMember(HX_("__add__",61,28,a2,86),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 102)		if (!(other->hasMember(HX_("__add__",61,28,a2,86)))) {
HXLINE( 102)			::String _hx_tmp = this->rawString();
HXDLIN( 102)			return this->_str((_hx_tmp + other->rawString()),null());
            		}
            		else {
HXLINE( 103)			return other->add(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 102)		return null();
            	}


 ::src::compiler::object::Object StringObject_obj::mult( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_107_mult)
HXLINE( 108)		if (this->hasMember(HX_("__mult__",30,02,b3,e2))) {
HXLINE( 108)			return this->callMember(HX_("__mult__",30,02,b3,e2),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 109)		if (other->hasMember(HX_("__mult__",30,02,b3,e2))) {
HXLINE( 109)			other->mult(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 110)		::String s = this->rawString();
HXLINE( 111)		::String result = HX_("",00,00,00,00);
HXLINE( 112)		{
HXLINE( 112)			int _g1 = (int)0;
HXDLIN( 112)			int _g = other->rawInt();
HXDLIN( 112)			while((_g1 < _g)){
HXLINE( 112)				_g1 = (_g1 + (int)1);
HXDLIN( 112)				int i = (_g1 - (int)1);
HXLINE( 113)				result = (result + s);
            			}
            		}
HXLINE( 115)		return this->_str(result,null());
            	}


 ::src::compiler::object::Object StringObject_obj::div( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_119_div)
HXLINE( 120)		if (this->hasMember(HX_("__div__",91,9f,31,44))) {
HXLINE( 120)			return this->callMember(HX_("__div__",91,9f,31,44),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 121)		if (other->hasMember(HX_("__rdiv__",1f,d4,b1,16))) {
HXLINE( 121)			return other->rdiv(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 122)		::String s = this->rawString();
HXLINE( 123)		int div = other->rawInt();
HXLINE( 124)		 ::src::compiler::object::builtin::ListObject result = hx::TCast<  ::src::compiler::object::builtin::ListObject >::cast(this->scope->getType(HX_("ListType",58,7e,af,06),null())->createObject(null()));
HXLINE( 125)		::Array< ::Dynamic> arr = result->getArray();
HXLINE( 126)		{
HXLINE( 126)			int _g1 = (int)0;
HXDLIN( 126)			int _g = ::Math_obj::ceil(((Float)s.length / (Float)div));
HXDLIN( 126)			while((_g1 < _g)){
HXLINE( 126)				_g1 = (_g1 + (int)1);
HXDLIN( 126)				int i = (_g1 - (int)1);
HXLINE( 127)				arr->push(this->_str(s.substr((i * div),div),null()));
            			}
            		}
HXLINE( 129)		return result;
            	}


 ::src::compiler::object::builtin::StringObject StringObject_obj::str(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_133_str)
HXLINE( 134)		if (this->hasMember(HX_("__str__",f1,a2,76,ee))) {
HXLINE( 134)			return hx::TCast<  ::src::compiler::object::builtin::StringObject >::cast(this->callMember(HX_("__str__",f1,a2,76,ee),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 135)		return hx::ObjectPtr<OBJ_>(this);
            	}


::String StringObject_obj::getHash(){
            	HX_STACKFRAME(&_hx_pos_da3b51da93407a2f_140_getHash)
HXDLIN( 140)		return this->value;
            	}



hx::ObjectPtr< StringObject_obj > StringObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< StringObject_obj > __this = new StringObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< StringObject_obj > StringObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	StringObject_obj *__this = (StringObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(StringObject_obj), true, "src.compiler.object.builtin.StringObject"));
	*(void **)__this = StringObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

StringObject_obj::StringObject_obj()
{
}

void StringObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StringObject);
	HX_MARK_MEMBER_NAME(value,"value");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void StringObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(value,"value");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val StringObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"eq") ) { return hx::Val( eq_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"int") ) { return hx::Val( _hx_int_dyn() ); }
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map_dyn() ); }
		if (HX_FIELD_EQ(inName,"len") ) { return hx::Val( len_dyn() ); }
		if (HX_FIELD_EQ(inName,"neq") ) { return hx::Val( neq_dyn() ); }
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"div") ) { return hx::Val( div_dyn() ); }
		if (HX_FIELD_EQ(inName,"str") ) { return hx::Val( str_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"bool") ) { return hx::Val( _hx_bool_dyn() ); }
		if (HX_FIELD_EQ(inName,"list") ) { return hx::Val( list_dyn() ); }
		if (HX_FIELD_EQ(inName,"mult") ) { return hx::Val( mult_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		if (HX_FIELD_EQ(inName,"float") ) { return hx::Val( _hx_float_dyn() ); }
		if (HX_FIELD_EQ(inName,"tuple") ) { return hx::Val( tuple_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getHash") ) { return hx::Val( getHash_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getValue") ) { return hx::Val( getValue_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val StringObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StringObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo StringObject_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(StringObject_obj,value),HX_HCSTRING("value","\x71","\x7f","\xb8","\x31")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *StringObject_obj_sStaticStorageInfo = 0;
#endif

static ::String StringObject_obj_sMemberFields[] = {
	HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	HX_HCSTRING("getValue","\xfb","\x8e","\x8f","\x91"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("bool","\x2a","\x84","\x1b","\x41"),
	HX_HCSTRING("float","\x9c","\xc5","\x96","\x02"),
	HX_HCSTRING("int","\xef","\x0c","\x50","\x00"),
	HX_HCSTRING("list","\x5e","\x1c","\xb3","\x47"),
	HX_HCSTRING("tuple","\x08","\x9c","\x26","\x18"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("len","\xd5","\x4b","\x52","\x00"),
	HX_HCSTRING("eq","\x6c","\x58","\x00","\x00"),
	HX_HCSTRING("neq","\x5a","\xd0","\x53","\x00"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("mult","\xf0","\x67","\x65","\x48"),
	HX_HCSTRING("div","\x51","\x3d","\x4c","\x00"),
	HX_HCSTRING("str","\xb1","\xa8","\x57","\x00"),
	HX_HCSTRING("getHash","\x84","\xdf","\x8a","\x17"),
	::String(null()) };

static void StringObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StringObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StringObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StringObject_obj::__mClass,"__mClass");
};

#endif

hx::Class StringObject_obj::__mClass;

void StringObject_obj::__register()
{
	hx::Object *dummy = new StringObject_obj;
	StringObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.StringObject","\xc5","\x51","\xa1","\xb5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StringObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(StringObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< StringObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StringObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
