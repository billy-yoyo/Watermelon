// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BoolObject
#include <src/compiler/object/builtin/BoolObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntObject
#include <src/compiler/object/builtin/IntObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntRangeObject
#include <src/compiler/object/builtin/IntRangeObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_006b1e82d473a4ba_129_new,"src.compiler.object.builtin.IntRangeObject","new",0x619ed434,"src.compiler.object.builtin.IntRangeObject.new","src/compiler/object/builtin/Builtins.hx",129,0xe9817cb7)
HX_LOCAL_STACK_FRAME(_hx_pos_006b1e82d473a4ba_138_next,"src.compiler.object.builtin.IntRangeObject","next",0x095ada9f,"src.compiler.object.builtin.IntRangeObject.next","src/compiler/object/builtin/Builtins.hx",138,0xe9817cb7)
HX_LOCAL_STACK_FRAME(_hx_pos_006b1e82d473a4ba_146_hasNext,"src.compiler.object.builtin.IntRangeObject","hasNext",0xbfc22341,"src.compiler.object.builtin.IntRangeObject.hasNext","src/compiler/object/builtin/Builtins.hx",146,0xe9817cb7)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void IntRangeObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type,int start,int end,int step){
            	HX_STACKFRAME(&_hx_pos_006b1e82d473a4ba_129_new)
HXLINE( 130)		super::__construct(scope,type,null(),null());
HXLINE( 131)		this->start = start;
HXLINE( 132)		this->end = end;
HXLINE( 133)		this->step = step;
HXLINE( 134)		this->progress = start;
            	}

Dynamic IntRangeObject_obj::__CreateEmpty() { return new IntRangeObject_obj; }

void *IntRangeObject_obj::_hx_vtable = 0;

Dynamic IntRangeObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntRangeObject_obj > _hx_result = new IntRangeObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool IntRangeObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x15de4261) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
	} else {
		return inClassId==(int)0x7fd921c6;
	}
}

 ::src::compiler::object::Object IntRangeObject_obj::next(){
            	HX_STACKFRAME(&_hx_pos_006b1e82d473a4ba_138_next)
HXLINE( 139)		int last = this->progress;
HXLINE( 140)		this->progress = (this->progress + this->step);
HXLINE( 141)		return this->_int(last,null());
            	}


 ::src::compiler::object::builtin::BoolObject IntRangeObject_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_006b1e82d473a4ba_146_hasNext)
HXDLIN( 146)		return this->_bool((this->progress < this->end),null());
            	}



hx::ObjectPtr< IntRangeObject_obj > IntRangeObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type,int start,int end,int step) {
	hx::ObjectPtr< IntRangeObject_obj > __this = new IntRangeObject_obj();
	__this->__construct(scope,type,start,end,step);
	return __this;
}

hx::ObjectPtr< IntRangeObject_obj > IntRangeObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type,int start,int end,int step) {
	IntRangeObject_obj *__this = (IntRangeObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IntRangeObject_obj), true, "src.compiler.object.builtin.IntRangeObject"));
	*(void **)__this = IntRangeObject_obj::_hx_vtable;
	__this->__construct(scope,type,start,end,step);
	return __this;
}

IntRangeObject_obj::IntRangeObject_obj()
{
}

hx::Val IntRangeObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { return hx::Val( step ); }
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { return hx::Val( start ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { return hx::Val( progress ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val IntRangeObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { end=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { step=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { start=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { progress=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IntRangeObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("start","\x62","\x74","\x0b","\x84"));
	outFields->push(HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"));
	outFields->push(HX_HCSTRING("step","\x4c","\xe7","\x5b","\x4c"));
	outFields->push(HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo IntRangeObject_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(IntRangeObject_obj,start),HX_HCSTRING("start","\x62","\x74","\x0b","\x84")},
	{hx::fsInt,(int)offsetof(IntRangeObject_obj,end),HX_HCSTRING("end","\xdb","\x03","\x4d","\x00")},
	{hx::fsInt,(int)offsetof(IntRangeObject_obj,step),HX_HCSTRING("step","\x4c","\xe7","\x5b","\x4c")},
	{hx::fsInt,(int)offsetof(IntRangeObject_obj,progress),HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IntRangeObject_obj_sStaticStorageInfo = 0;
#endif

static ::String IntRangeObject_obj_sMemberFields[] = {
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"),
	HX_HCSTRING("step","\x4c","\xe7","\x5b","\x4c"),
	HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	HX_HCSTRING("hasNext","\x6d","\xa5","\x46","\x18"),
	::String(null()) };

static void IntRangeObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntRangeObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntRangeObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntRangeObject_obj::__mClass,"__mClass");
};

#endif

hx::Class IntRangeObject_obj::__mClass;

void IntRangeObject_obj::__register()
{
	hx::Object *dummy = new IntRangeObject_obj;
	IntRangeObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.IntRangeObject","\x42","\xea","\x33","\x69");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IntRangeObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntRangeObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntRangeObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntRangeObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntRangeObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntRangeObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
