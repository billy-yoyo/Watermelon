// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_Signal
#include <src/compiler/object/builtin/Signal.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_SignalObject
#include <src/compiler/object/builtin/SignalObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_StringObject
#include <src/compiler/object/builtin/StringObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_10c2440f1a863843_8_new,"src.compiler.object.builtin.SignalObject","new",0x61e9418e,"src.compiler.object.builtin.SignalObject.new","src/compiler/object/builtin/SignalObject.hx",8,0x22faf2c0)
HX_LOCAL_STACK_FRAME(_hx_pos_10c2440f1a863843_13_setup,"src.compiler.object.builtin.SignalObject","setup",0x80e6472b,"src.compiler.object.builtin.SignalObject.setup","src/compiler/object/builtin/SignalObject.hx",13,0x22faf2c0)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void SignalObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_10c2440f1a863843_8_new)
HXDLIN(   8)		super::__construct(scope,type,members,value,args);
            	}

Dynamic SignalObject_obj::__CreateEmpty() { return new SignalObject_obj; }

void *SignalObject_obj::_hx_vtable = 0;

Dynamic SignalObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SignalObject_obj > _hx_result = new SignalObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool SignalObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x15de4261) {
		if (inClassId<=(int)0x0dca412c) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x0dca412c;
		} else {
			return inClassId==(int)0x15de4261;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

void SignalObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_10c2440f1a863843_13_setup)
HXLINE(  14)		this->signal = ( ( ::src::compiler::object::builtin::Signal)(value) );
HXLINE(  15)		this->setMember(HX_("type",ba,f2,08,4d),this->_str(this->signal->type,null()));
HXLINE(  16)		this->setMember(HX_("value",71,7f,b8,31),this->signal->value);
            	}



hx::ObjectPtr< SignalObject_obj > SignalObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< SignalObject_obj > __this = new SignalObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< SignalObject_obj > SignalObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	SignalObject_obj *__this = (SignalObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SignalObject_obj), true, "src.compiler.object.builtin.SignalObject"));
	*(void **)__this = SignalObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

SignalObject_obj::SignalObject_obj()
{
}

void SignalObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(SignalObject);
	HX_MARK_MEMBER_NAME(signal,"signal");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void SignalObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(signal,"signal");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val SignalObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"signal") ) { return hx::Val( signal ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val SignalObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"signal") ) { signal=inValue.Cast<  ::src::compiler::object::builtin::Signal >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void SignalObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("signal","\x68","\x2e","\x86","\xb4"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo SignalObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::src::compiler::object::builtin::Signal*/ ,(int)offsetof(SignalObject_obj,signal),HX_HCSTRING("signal","\x68","\x2e","\x86","\xb4")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *SignalObject_obj_sStaticStorageInfo = 0;
#endif

static ::String SignalObject_obj_sMemberFields[] = {
	HX_HCSTRING("signal","\x68","\x2e","\x86","\xb4"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	::String(null()) };

static void SignalObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SignalObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SignalObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SignalObject_obj::__mClass,"__mClass");
};

#endif

hx::Class SignalObject_obj::__mClass;

void SignalObject_obj::__register()
{
	hx::Object *dummy = new SignalObject_obj;
	SignalObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.SignalObject","\x9c","\x22","\xf2","\xef");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SignalObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SignalObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SignalObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SignalObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SignalObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SignalObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
