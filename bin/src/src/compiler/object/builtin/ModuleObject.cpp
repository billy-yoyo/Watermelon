// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ModuleObject
#include <src/compiler/object/builtin/ModuleObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_InvalidFieldAccessSignal
#include <src/compiler/signals/InvalidFieldAccessSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_afb9b686f57541ee_10_new,"src.compiler.object.builtin.ModuleObject","new",0x220e44d2,"src.compiler.object.builtin.ModuleObject.new","src/compiler/object/builtin/ModuleObject.hx",10,0x77a503fc)
HX_LOCAL_STACK_FRAME(_hx_pos_afb9b686f57541ee_14_getMember,"src.compiler.object.builtin.ModuleObject","getMember",0xe8a4c182,"src.compiler.object.builtin.ModuleObject.getMember","src/compiler/object/builtin/ModuleObject.hx",14,0x77a503fc)
HX_LOCAL_STACK_FRAME(_hx_pos_afb9b686f57541ee_21_getMembers,"src.compiler.object.builtin.ModuleObject","getMembers",0xa78490b1,"src.compiler.object.builtin.ModuleObject.getMembers","src/compiler/object/builtin/ModuleObject.hx",21,0x77a503fc)
HX_LOCAL_STACK_FRAME(_hx_pos_afb9b686f57541ee_34_hasMember,"src.compiler.object.builtin.ModuleObject","hasMember",0xad36eb46,"src.compiler.object.builtin.ModuleObject.hasMember","src/compiler/object/builtin/ModuleObject.hx",34,0x77a503fc)
HX_LOCAL_STACK_FRAME(_hx_pos_afb9b686f57541ee_40_setup,"src.compiler.object.builtin.ModuleObject","setup",0x56c5a36f,"src.compiler.object.builtin.ModuleObject.setup","src/compiler/object/builtin/ModuleObject.hx",40,0x77a503fc)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void ModuleObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_afb9b686f57541ee_10_new)
HXDLIN(  10)		super::__construct(scope,type,members,value,args);
            	}

Dynamic ModuleObject_obj::__CreateEmpty() { return new ModuleObject_obj; }

void *ModuleObject_obj::_hx_vtable = 0;

Dynamic ModuleObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ModuleObject_obj > _hx_result = new ModuleObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool ModuleObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5e535270) {
		if (inClassId<=(int)0x15de4261) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
		} else {
			return inClassId==(int)0x5e535270;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

 ::src::compiler::object::Object ModuleObject_obj::getMember(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_afb9b686f57541ee_14_getMember)
HXLINE(  15)		if (this->members->exists(name)) {
HXLINE(  15)			return this->super::getMember(name);
            		}
HXLINE(  16)		if (this->moduleScope->hasVariable(name)) {
HXLINE(  16)			return this->moduleScope->getVariable(name);
            		}
HXLINE(  17)		HX_STACK_DO_THROW( ::src::compiler::signals::InvalidFieldAccessSignal_obj::__alloc( HX_CTX ,(HX_("Module has no field ",8b,11,78,7b) + name)));
HXDLIN(  17)		return null();
            	}


 ::haxe::ds::StringMap ModuleObject_obj::getMembers(){
            	HX_GC_STACKFRAME(&_hx_pos_afb9b686f57541ee_21_getMembers)
HXLINE(  22)		 ::haxe::ds::StringMap result =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  23)		 ::haxe::ds::StringMap members = this->super::getMembers();
HXLINE(  24)		 ::haxe::ds::StringMap vars = this->moduleScope->getVariables();
HXLINE(  25)		 ::haxe::ds::StringMap types = this->moduleScope->getTypes();
HXLINE(  26)		{
HXLINE(  26)			 ::Dynamic name = members->keys();
HXDLIN(  26)			while(( (bool)(name->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  26)				::String name1 = ( (::String)(name->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXDLIN(  26)				result->set(name1,members->get(name1).StaticCast<  ::src::compiler::object::Object >());
            			}
            		}
HXLINE(  27)		{
HXLINE(  27)			 ::Dynamic name2 = vars->keys();
HXDLIN(  27)			while(( (bool)(name2->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  27)				::String name3 = ( (::String)(name2->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXDLIN(  27)				result->set(name3,vars->get(name3).StaticCast<  ::src::compiler::object::Object >());
            			}
            		}
HXLINE(  28)		{
HXLINE(  28)			 ::Dynamic name4 = types->keys();
HXDLIN(  28)			while(( (bool)(name4->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE(  28)				::String name5 = ( (::String)(name4->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXDLIN(  28)				result->set(name5,types->get(name5).StaticCast<  ::src::compiler::object::Object >());
            			}
            		}
HXLINE(  29)		return result;
            	}


bool ModuleObject_obj::hasMember(::String name){
            	HX_STACKFRAME(&_hx_pos_afb9b686f57541ee_34_hasMember)
HXDLIN(  34)		if (!(this->members->exists(name))) {
HXDLIN(  34)			return this->moduleScope->hasVariable(name);
            		}
            		else {
HXDLIN(  34)			return true;
            		}
HXDLIN(  34)		return false;
            	}


void ModuleObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_afb9b686f57541ee_40_setup)
HXDLIN(  40)		this->moduleScope = ( ( ::src::compiler::Scope)(value) );
            	}



hx::ObjectPtr< ModuleObject_obj > ModuleObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< ModuleObject_obj > __this = new ModuleObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< ModuleObject_obj > ModuleObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	ModuleObject_obj *__this = (ModuleObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ModuleObject_obj), true, "src.compiler.object.builtin.ModuleObject"));
	*(void **)__this = ModuleObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

ModuleObject_obj::ModuleObject_obj()
{
}

void ModuleObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ModuleObject);
	HX_MARK_MEMBER_NAME(moduleScope,"moduleScope");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ModuleObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(moduleScope,"moduleScope");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ModuleObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getMember") ) { return hx::Val( getMember_dyn() ); }
		if (HX_FIELD_EQ(inName,"hasMember") ) { return hx::Val( hasMember_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMembers") ) { return hx::Val( getMembers_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"moduleScope") ) { return hx::Val( moduleScope ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ModuleObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"moduleScope") ) { moduleScope=inValue.Cast<  ::src::compiler::Scope >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ModuleObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("moduleScope","\x48","\x3d","\x79","\xc2"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ModuleObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::src::compiler::Scope*/ ,(int)offsetof(ModuleObject_obj,moduleScope),HX_HCSTRING("moduleScope","\x48","\x3d","\x79","\xc2")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ModuleObject_obj_sStaticStorageInfo = 0;
#endif

static ::String ModuleObject_obj_sMemberFields[] = {
	HX_HCSTRING("getMember","\x90","\x6b","\x0c","\x81"),
	HX_HCSTRING("getMembers","\xe3","\xb2","\xd1","\x69"),
	HX_HCSTRING("hasMember","\x54","\x95","\x9e","\x45"),
	HX_HCSTRING("moduleScope","\x48","\x3d","\x79","\xc2"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	::String(null()) };

static void ModuleObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ModuleObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ModuleObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ModuleObject_obj::__mClass,"__mClass");
};

#endif

hx::Class ModuleObject_obj::__mClass;

void ModuleObject_obj::__register()
{
	hx::Object *dummy = new ModuleObject_obj;
	ModuleObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.ModuleObject","\xe0","\x33","\x7b","\x40");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ModuleObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ModuleObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ModuleObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ModuleObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ModuleObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ModuleObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
