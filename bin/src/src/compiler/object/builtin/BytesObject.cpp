// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BytesObject
#include <src/compiler/object/builtin/BytesObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FloatObject
#include <src/compiler/object/builtin/FloatObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntObject
#include <src/compiler/object/builtin/IntObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ListObject
#include <src/compiler/object/builtin/ListObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_SpliceObject
#include <src/compiler/object/builtin/SpliceObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_SpliceValue
#include <src/compiler/object/builtin/SpliceValue.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_StringObject
#include <src/compiler/object/builtin/StringObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_TupleObject
#include <src/compiler/object/builtin/TupleObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_IndexOutOfBoundsSignal
#include <src/compiler/signals/IndexOutOfBoundsSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_InvalidFieldAccessSignal
#include <src/compiler/signals/InvalidFieldAccessSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ValueErrorSignal
#include <src/compiler/signals/ValueErrorSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_31bddf3d07640fad_17_new,"src.compiler.object.builtin.BytesObject","new",0x2cc68b47,"src.compiler.object.builtin.BytesObject.new","src/compiler/object/builtin/BytesObject.hx",17,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_23_setup,"src.compiler.object.builtin.BytesObject","setup",0xb4f43124,"src.compiler.object.builtin.BytesObject.setup","src/compiler/object/builtin/BytesObject.hx",23,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_27__index,"src.compiler.object.builtin.BytesObject","_index",0xeb29b1cc,"src.compiler.object.builtin.BytesObject._index","src/compiler/object/builtin/BytesObject.hx",27,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_33_get,"src.compiler.object.builtin.BytesObject","get",0x2cc13b7d,"src.compiler.object.builtin.BytesObject.get","src/compiler/object/builtin/BytesObject.hx",33,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_54_set,"src.compiler.object.builtin.BytesObject","set",0x2cca5689,"src.compiler.object.builtin.BytesObject.set","src/compiler/object/builtin/BytesObject.hx",54,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_61_delete,"src.compiler.object.builtin.BytesObject","delete",0x9c068fa4,"src.compiler.object.builtin.BytesObject.delete","src/compiler/object/builtin/BytesObject.hx",61,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_68_len,"src.compiler.object.builtin.BytesObject","len",0x2cc506bc,"src.compiler.object.builtin.BytesObject.len","src/compiler/object/builtin/BytesObject.hx",68,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_74_str,"src.compiler.object.builtin.BytesObject","str",0x2cca6398,"src.compiler.object.builtin.BytesObject.str","src/compiler/object/builtin/BytesObject.hx",74,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_80_int,"src.compiler.object.builtin.BytesObject","int",0x2cc2c7d6,"src.compiler.object.builtin.BytesObject.int","src/compiler/object/builtin/BytesObject.hx",80,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_92_float,"src.compiler.object.builtin.BytesObject","float",0x3d5b4843,"src.compiler.object.builtin.BytesObject.float","src/compiler/object/builtin/BytesObject.hx",92,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_102_add,"src.compiler.object.builtin.BytesObject","add",0x2cbcad08,"src.compiler.object.builtin.BytesObject.add","src/compiler/object/builtin/BytesObject.hx",102,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_120_bytes,"src.compiler.object.builtin.BytesObject","bytes",0xf85c8b12,"src.compiler.object.builtin.BytesObject.bytes","src/compiler/object/builtin/BytesObject.hx",120,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_126_list,"src.compiler.object.builtin.BytesObject","list",0xffa3eb97,"src.compiler.object.builtin.BytesObject.list","src/compiler/object/builtin/BytesObject.hx",126,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_134_tuple,"src.compiler.object.builtin.BytesObject","tuple",0x52eb1eaf,"src.compiler.object.builtin.BytesObject.tuple","src/compiler/object/builtin/BytesObject.hx",134,0xd9617eab)
HX_LOCAL_STACK_FRAME(_hx_pos_31bddf3d07640fad_142_getHash,"src.compiler.object.builtin.BytesObject","getHash",0xee7299eb,"src.compiler.object.builtin.BytesObject.getHash","src/compiler/object/builtin/BytesObject.hx",142,0xd9617eab)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void BytesObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_17_new)
HXDLIN(  17)		super::__construct(scope,type,members,value,args);
            	}

Dynamic BytesObject_obj::__CreateEmpty() { return new BytesObject_obj; }

void *BytesObject_obj::_hx_vtable = 0;

Dynamic BytesObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BytesObject_obj > _hx_result = new BytesObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool BytesObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3456bf45) {
		if (inClassId<=(int)0x15de4261) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
		} else {
			return inClassId==(int)0x3456bf45;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

void BytesObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_23_setup)
HXDLIN(  23)		this->value = ( ( ::haxe::io::Bytes)(value) );
            	}


int BytesObject_obj::_index(int i){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_27__index)
HXLINE(  28)		if ((i < (int)0)) {
HXLINE(  28)			return (i + this->value->length);
            		}
HXLINE(  29)		return i;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BytesObject_obj,_index,return )

 ::src::compiler::object::Object BytesObject_obj::get( ::src::compiler::object::Object index){
            	HX_GC_STACKFRAME(&_hx_pos_31bddf3d07640fad_33_get)
HXLINE(  34)		if (this->hasMember(HX_("__get__",16,fe,be,fb))) {
HXLINE(  34)			return this->callMember(HX_("__get__",16,fe,be,fb),::Array_obj< ::Dynamic>::__new(1)->init(0,index));
            		}
HXLINE(  35)		if (index->isInstance(HX_("SpliceType",76,16,08,c6))) {
HXLINE(  36)			 ::src::compiler::object::builtin::SpliceValue splice = hx::TCast<  ::src::compiler::object::builtin::SpliceObject >::cast(index)->getValue(this->value->length);
HXLINE(  37)			 ::haxe::io::BytesBuffer buffer =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXLINE(  38)			int i = splice->start;
HXLINE(  39)			while((i < splice->end)){
HXLINE(  40)				buffer->b->push(this->value->b->__get(i));
HXLINE(  41)				i = (i + splice->step);
            			}
HXLINE(  43)			return this->_bytes(buffer->getBytes(),null());
            		}
HXLINE(  45)		int i1 = this->_index(index->rawInt());
HXLINE(  46)		bool _hx_tmp;
HXDLIN(  46)		if ((i1 >= (int)0)) {
HXLINE(  46)			_hx_tmp = (i1 < this->value->length);
            		}
            		else {
HXLINE(  46)			_hx_tmp = false;
            		}
HXDLIN(  46)		if (_hx_tmp) {
HXLINE(  47)			return this->_int(this->value->b->__get(i1),null());
            		}
            		else {
HXLINE(  49)			HX_STACK_DO_THROW( ::src::compiler::signals::IndexOutOfBoundsSignal_obj::__alloc( HX_CTX ,(((HX_("Index ",ee,88,87,c8) + i1) + HX_(" is out of bounds, should be between 0 and ",eb,88,ef,1e)) + this->value->length)));
            		}
HXLINE(  46)		return null();
            	}


void BytesObject_obj::set( ::src::compiler::object::Object index, ::src::compiler::object::Object obj){
            	HX_GC_STACKFRAME(&_hx_pos_31bddf3d07640fad_54_set)
HXLINE(  55)		if (this->hasMember(HX_("__set__",22,f4,8d,e4))) {
HXLINE(  55)			this->callMember(HX_("__set__",22,f4,8d,e4),::Array_obj< ::Dynamic>::__new(1)->init(0,index));
HXDLIN(  55)			return;
            		}
HXLINE(  56)		HX_STACK_DO_THROW( ::src::compiler::signals::InvalidFieldAccessSignal_obj::__alloc( HX_CTX ,HX_("Bytes is immutable (cannot set index of tuple)",6a,61,5c,ff)));
            	}


void BytesObject_obj::_hx_delete( ::src::compiler::object::Object index){
            	HX_GC_STACKFRAME(&_hx_pos_31bddf3d07640fad_61_delete)
HXLINE(  62)		if (this->hasMember(HX_("__delete__",2b,27,e2,05))) {
HXLINE(  62)			this->callMember(HX_("__delete__",2b,27,e2,05),::Array_obj< ::Dynamic>::__new(1)->init(0,index));
HXDLIN(  62)			return;
            		}
HXLINE(  63)		HX_STACK_DO_THROW( ::src::compiler::signals::InvalidFieldAccessSignal_obj::__alloc( HX_CTX ,HX_("Bytes is immutable (cannot delete index of tuple)",9b,60,37,b5)));
            	}


 ::src::compiler::object::builtin::IntObject BytesObject_obj::len(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_68_len)
HXLINE(  69)		if (this->hasMember(HX_("__len__",15,57,bb,dc))) {
HXLINE(  69)			return hx::TCast<  ::src::compiler::object::builtin::IntObject >::cast(this->callMember(HX_("__len__",15,57,bb,dc),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  70)		return this->_int(this->value->length,null());
            	}


 ::src::compiler::object::builtin::StringObject BytesObject_obj::str(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_74_str)
HXLINE(  75)		if (this->hasMember(HX_("__str__",f1,a2,76,ee))) {
HXLINE(  75)			return hx::TCast<  ::src::compiler::object::builtin::StringObject >::cast(this->callMember(HX_("__str__",f1,a2,76,ee),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  76)		return this->_str(this->value->getString((int)0,this->value->length),null());
            	}


 ::src::compiler::object::builtin::IntObject BytesObject_obj::_hx_int(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_80_int)
HXLINE(  81)		if (this->hasMember(HX_("__int__",af,12,7f,28))) {
HXLINE(  81)			return hx::TCast<  ::src::compiler::object::builtin::IntObject >::cast(this->callMember(HX_("__int__",af,12,7f,28),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  82)		int n = (int)0;
HXLINE(  83)		int offset = (int)0;
HXLINE(  84)		{
HXLINE(  84)			int _g1 = (int)0;
HXDLIN(  84)			int _g = this->value->length;
HXDLIN(  84)			while((_g1 < _g)){
HXLINE(  84)				_g1 = (_g1 + (int)1);
HXDLIN(  84)				int index = (_g1 - (int)1);
HXLINE(  85)				n = (n + ((int)this->value->b->__get(index) >> (int)offset));
HXLINE(  86)				offset = (offset + (int)8);
            			}
            		}
HXLINE(  88)		return this->_int(n,null());
            	}


 ::src::compiler::object::builtin::FloatObject BytesObject_obj::_hx_float(){
            	HX_GC_STACKFRAME(&_hx_pos_31bddf3d07640fad_92_float)
HXLINE(  93)		if (this->hasMember(HX_("__float__",9c,08,57,6b))) {
HXLINE(  93)			return hx::TCast<  ::src::compiler::object::builtin::FloatObject >::cast(this->callMember(HX_("__float__",9c,08,57,6b),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  94)		if ((this->value->length == (int)4)) {
HXLINE(  95)			 ::haxe::io::Bytes _this = this->value;
HXDLIN(  95)			if (((int)4 > _this->length)) {
HXLINE(  95)				HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            			}
HXDLIN(  95)			return this->_float(::__hxcpp_memory_get_float(_this->b,(int)0),null());
            		}
            		else {
HXLINE(  96)			if ((this->value->length == (int)8)) {
HXLINE(  97)				 ::haxe::io::Bytes _this1 = this->value;
HXDLIN(  97)				if (((int)8 > _this1->length)) {
HXLINE(  97)					HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            				}
HXDLIN(  97)				return this->_float(::__hxcpp_memory_get_double(_this1->b,(int)0),null());
            			}
            			else {
HXLINE(  98)				HX_STACK_DO_THROW( ::src::compiler::signals::ValueErrorSignal_obj::__alloc( HX_CTX ,HX_("Bytes must be 32bit or 64bit to convert to float",28,b0,52,fb)));
            			}
            		}
HXLINE(  94)		return null();
            	}


 ::src::compiler::object::Object BytesObject_obj::add( ::src::compiler::object::Object other){
            	HX_GC_STACKFRAME(&_hx_pos_31bddf3d07640fad_102_add)
HXLINE( 103)		if (this->hasMember(HX_("__add__",61,28,a2,86))) {
HXLINE( 103)			return this->callMember(HX_("__add__",61,28,a2,86),::Array_obj< ::Dynamic>::__new(0));
            		}
HXLINE( 104)		if (other->isInstance(HX_("BytesType",a5,18,d1,13))) {
HXLINE( 105)			 ::haxe::io::BytesBuffer buffer =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXLINE( 106)			{
HXLINE( 106)				 ::haxe::io::Bytes src1 = this->value;
HXDLIN( 106)				::Array< unsigned char > b1 = buffer->b;
HXDLIN( 106)				::Array< unsigned char > b2 = src1->b;
HXDLIN( 106)				{
HXLINE( 106)					int _g1 = (int)0;
HXDLIN( 106)					int _g = src1->length;
HXDLIN( 106)					while((_g1 < _g)){
HXLINE( 106)						_g1 = (_g1 + (int)1);
HXDLIN( 106)						int i = (_g1 - (int)1);
HXDLIN( 106)						::Array< unsigned char > buffer1 = buffer->b;
HXDLIN( 106)						buffer1->push(b2->__get(i));
            					}
            				}
            			}
HXLINE( 107)			{
HXLINE( 107)				 ::haxe::io::Bytes src2 = hx::TCast<  ::src::compiler::object::builtin::BytesObject >::cast(other)->value;
HXDLIN( 107)				::Array< unsigned char > b11 = buffer->b;
HXDLIN( 107)				::Array< unsigned char > b21 = src2->b;
HXDLIN( 107)				{
HXLINE( 107)					int _g11 = (int)0;
HXDLIN( 107)					int _g2 = src2->length;
HXDLIN( 107)					while((_g11 < _g2)){
HXLINE( 107)						_g11 = (_g11 + (int)1);
HXDLIN( 107)						int i1 = (_g11 - (int)1);
HXDLIN( 107)						::Array< unsigned char > buffer2 = buffer->b;
HXDLIN( 107)						buffer2->push(b21->__get(i1));
            					}
            				}
            			}
HXLINE( 108)			return this->_bytes(buffer->getBytes(),null());
            		}
            		else {
HXLINE( 109)			if (other->hasMember(HX_("__bytes__",2b,dd,49,db))) {
HXLINE( 110)				 ::haxe::io::Bytes bytes = other->rawBytes();
HXLINE( 111)				if (hx::IsNull( bytes )) {
HXLINE( 111)					return other->add(hx::ObjectPtr<OBJ_>(this));
            				}
HXLINE( 112)				 ::haxe::io::BytesBuffer buffer3 =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXLINE( 113)				{
HXLINE( 113)					 ::haxe::io::Bytes src3 = this->value;
HXDLIN( 113)					::Array< unsigned char > b12 = buffer3->b;
HXDLIN( 113)					::Array< unsigned char > b22 = src3->b;
HXDLIN( 113)					{
HXLINE( 113)						int _g12 = (int)0;
HXDLIN( 113)						int _g3 = src3->length;
HXDLIN( 113)						while((_g12 < _g3)){
HXLINE( 113)							_g12 = (_g12 + (int)1);
HXDLIN( 113)							int i2 = (_g12 - (int)1);
HXDLIN( 113)							::Array< unsigned char > buffer4 = buffer3->b;
HXDLIN( 113)							buffer4->push(b22->__get(i2));
            						}
            					}
            				}
HXLINE( 114)				{
HXLINE( 114)					::Array< unsigned char > b13 = buffer3->b;
HXDLIN( 114)					::Array< unsigned char > b23 = bytes->b;
HXDLIN( 114)					{
HXLINE( 114)						int _g13 = (int)0;
HXDLIN( 114)						int _g4 = bytes->length;
HXDLIN( 114)						while((_g13 < _g4)){
HXLINE( 114)							_g13 = (_g13 + (int)1);
HXDLIN( 114)							int i3 = (_g13 - (int)1);
HXDLIN( 114)							::Array< unsigned char > buffer5 = buffer3->b;
HXDLIN( 114)							buffer5->push(b23->__get(i3));
            						}
            					}
            				}
HXLINE( 115)				return this->_bytes(buffer3->getBytes(),null());
            			}
            			else {
HXLINE( 116)				return other->add(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 104)		return null();
            	}


 ::src::compiler::object::builtin::BytesObject BytesObject_obj::bytes(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_120_bytes)
HXLINE( 121)		if (this->hasMember(HX_("__bytes__",2b,dd,49,db))) {
HXLINE( 121)			return hx::TCast<  ::src::compiler::object::builtin::BytesObject >::cast(this->callMember(HX_("__bytes__",2b,dd,49,db),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 122)		return hx::ObjectPtr<OBJ_>(this);
            	}


 ::src::compiler::object::builtin::ListObject BytesObject_obj::list(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_126_list)
HXLINE( 127)		if (this->hasMember(HX_("__list__",1e,2e,29,98))) {
HXLINE( 127)			return hx::TCast<  ::src::compiler::object::builtin::ListObject >::cast(this->callMember(HX_("__list__",1e,2e,29,98),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 128)		::Array< ::Dynamic> arr = ::Array_obj< ::Dynamic>::__new();
HXLINE( 129)		{
HXLINE( 129)			int _g1 = (int)0;
HXDLIN( 129)			int _g = this->value->length;
HXDLIN( 129)			while((_g1 < _g)){
HXLINE( 129)				_g1 = (_g1 + (int)1);
HXDLIN( 129)				int i = (_g1 - (int)1);
HXDLIN( 129)				arr->push(this->_int(this->value->b->__get(i),null()));
            			}
            		}
HXLINE( 130)		return this->_list(arr,null());
            	}


 ::src::compiler::object::builtin::TupleObject BytesObject_obj::tuple(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_134_tuple)
HXLINE( 135)		if (this->hasMember(HX_("__tuple__",08,52,5a,e5))) {
HXLINE( 135)			return hx::TCast<  ::src::compiler::object::builtin::TupleObject >::cast(this->callMember(HX_("__tuple__",08,52,5a,e5),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 136)		::Array< ::Dynamic> arr = ::Array_obj< ::Dynamic>::__new();
HXLINE( 137)		{
HXLINE( 137)			int _g1 = (int)0;
HXDLIN( 137)			int _g = this->value->length;
HXDLIN( 137)			while((_g1 < _g)){
HXLINE( 137)				_g1 = (_g1 + (int)1);
HXDLIN( 137)				int i = (_g1 - (int)1);
HXDLIN( 137)				arr->push(this->_int(this->value->b->__get(i),null()));
            			}
            		}
HXLINE( 138)		return this->_tuple(arr,null());
            	}


int BytesObject_obj::getHash(){
            	HX_STACKFRAME(&_hx_pos_31bddf3d07640fad_142_getHash)
HXLINE( 143)		int n = (int)0;
HXLINE( 144)		int offset = (int)0;
HXLINE( 145)		{
HXLINE( 145)			int _g1 = (int)0;
HXDLIN( 145)			int _g = this->value->length;
HXDLIN( 145)			while((_g1 < _g)){
HXLINE( 145)				_g1 = (_g1 + (int)1);
HXDLIN( 145)				int index = (_g1 - (int)1);
HXLINE( 146)				n = (n + ((int)this->value->b->__get(index) >> (int)offset));
HXLINE( 147)				offset = (offset + (int)8);
            			}
            		}
HXLINE( 149)		return n;
            	}



hx::ObjectPtr< BytesObject_obj > BytesObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< BytesObject_obj > __this = new BytesObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< BytesObject_obj > BytesObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	BytesObject_obj *__this = (BytesObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BytesObject_obj), true, "src.compiler.object.builtin.BytesObject"));
	*(void **)__this = BytesObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

BytesObject_obj::BytesObject_obj()
{
}

void BytesObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BytesObject);
	HX_MARK_MEMBER_NAME(value,"value");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void BytesObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(value,"value");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val BytesObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"len") ) { return hx::Val( len_dyn() ); }
		if (HX_FIELD_EQ(inName,"str") ) { return hx::Val( str_dyn() ); }
		if (HX_FIELD_EQ(inName,"int") ) { return hx::Val( _hx_int_dyn() ); }
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { return hx::Val( list_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		if (HX_FIELD_EQ(inName,"float") ) { return hx::Val( _hx_float_dyn() ); }
		if (HX_FIELD_EQ(inName,"bytes") ) { return hx::Val( bytes_dyn() ); }
		if (HX_FIELD_EQ(inName,"tuple") ) { return hx::Val( tuple_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_index") ) { return hx::Val( _index_dyn() ); }
		if (HX_FIELD_EQ(inName,"delete") ) { return hx::Val( _hx_delete_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getHash") ) { return hx::Val( getHash_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BytesObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast<  ::haxe::io::Bytes >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BytesObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo BytesObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::io::Bytes*/ ,(int)offsetof(BytesObject_obj,value),HX_HCSTRING("value","\x71","\x7f","\xb8","\x31")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BytesObject_obj_sStaticStorageInfo = 0;
#endif

static ::String BytesObject_obj_sMemberFields[] = {
	HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	HX_HCSTRING("_index","\x53","\xe2","\xfb","\xb9"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("delete","\x2b","\xc0","\xd8","\x6a"),
	HX_HCSTRING("len","\xd5","\x4b","\x52","\x00"),
	HX_HCSTRING("str","\xb1","\xa8","\x57","\x00"),
	HX_HCSTRING("int","\xef","\x0c","\x50","\x00"),
	HX_HCSTRING("float","\x9c","\xc5","\x96","\x02"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("bytes","\x6b","\x08","\x98","\xbd"),
	HX_HCSTRING("list","\x5e","\x1c","\xb3","\x47"),
	HX_HCSTRING("tuple","\x08","\x9c","\x26","\x18"),
	HX_HCSTRING("getHash","\x84","\xdf","\x8a","\x17"),
	::String(null()) };

static void BytesObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BytesObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BytesObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BytesObject_obj::__mClass,"__mClass");
};

#endif

hx::Class BytesObject_obj::__mClass;

void BytesObject_obj::__register()
{
	hx::Object *dummy = new BytesObject_obj;
	BytesObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.BytesObject","\xd5","\xdb","\x27","\x89");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BytesObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BytesObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BytesObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BytesObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BytesObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BytesObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
