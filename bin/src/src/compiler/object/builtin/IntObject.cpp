// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BoolObject
#include <src/compiler/object/builtin/BoolObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BytesObject
#include <src/compiler/object/builtin/BytesObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FloatObject
#include <src/compiler/object/builtin/FloatObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IntObject
#include <src/compiler/object/builtin/IntObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_StringObject
#include <src/compiler/object/builtin/StringObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_13_new,"src.compiler.object.builtin.IntObject","new",0xccdac40b,"src.compiler.object.builtin.IntObject.new","src/compiler/object/builtin/IntObject.hx",13,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_19_setup,"src.compiler.object.builtin.IntObject","setup",0xad1b22e8,"src.compiler.object.builtin.IntObject.setup","src/compiler/object/builtin/IntObject.hx",19,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_24_getValue,"src.compiler.object.builtin.IntObject","getValue",0xb6fe6f70,"src.compiler.object.builtin.IntObject.getValue","src/compiler/object/builtin/IntObject.hx",24,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_28_add,"src.compiler.object.builtin.IntObject","add",0xccd0e5cc,"src.compiler.object.builtin.IntObject.add","src/compiler/object/builtin/IntObject.hx",28,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_36_sub,"src.compiler.object.builtin.IntObject","sub",0xccde9d2b,"src.compiler.object.builtin.IntObject.sub","src/compiler/object/builtin/IntObject.hx",36,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_44_rsub,"src.compiler.object.builtin.IntObject","rsub",0x75403e43,"src.compiler.object.builtin.IntObject.rsub","src/compiler/object/builtin/IntObject.hx",44,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_53_mult,"src.compiler.object.builtin.IntObject","mult",0x71f3a9e5,"src.compiler.object.builtin.IntObject.mult","src/compiler/object/builtin/IntObject.hx",53,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_60_div,"src.compiler.object.builtin.IntObject","div",0xccd330fc,"src.compiler.object.builtin.IntObject.div","src/compiler/object/builtin/IntObject.hx",60,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_68_rdiv,"src.compiler.object.builtin.IntObject","rdiv",0x7534d214,"src.compiler.object.builtin.IntObject.rdiv","src/compiler/object/builtin/IntObject.hx",68,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_76_intdiv,"src.compiler.object.builtin.IntObject","intdiv",0xf9a018f7,"src.compiler.object.builtin.IntObject.intdiv","src/compiler/object/builtin/IntObject.hx",76,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_84_rintdiv,"src.compiler.object.builtin.IntObject","rintdiv",0x7f1636df,"src.compiler.object.builtin.IntObject.rintdiv","src/compiler/object/builtin/IntObject.hx",84,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_104_pow,"src.compiler.object.builtin.IntObject","pow",0xccdc5143,"src.compiler.object.builtin.IntObject.pow","src/compiler/object/builtin/IntObject.hx",104,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_116_rpow,"src.compiler.object.builtin.IntObject","rpow",0x753df25b,"src.compiler.object.builtin.IntObject.rpow","src/compiler/object/builtin/IntObject.hx",116,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_128_mod,"src.compiler.object.builtin.IntObject","mod",0xccda0a6d,"src.compiler.object.builtin.IntObject.mod","src/compiler/object/builtin/IntObject.hx",128,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_136_rmod,"src.compiler.object.builtin.IntObject","rmod",0x753bab85,"src.compiler.object.builtin.IntObject.rmod","src/compiler/object/builtin/IntObject.hx",136,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_144_eq,"src.compiler.object.builtin.IntObject","eq",0x6716c321,"src.compiler.object.builtin.IntObject.eq","src/compiler/object/builtin/IntObject.hx",144,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_151_neq,"src.compiler.object.builtin.IntObject","neq",0xccdac405,"src.compiler.object.builtin.IntObject.neq","src/compiler/object/builtin/IntObject.hx",151,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_158_ls,"src.compiler.object.builtin.IntObject","ls",0x6716c93c,"src.compiler.object.builtin.IntObject.ls","src/compiler/object/builtin/IntObject.hx",158,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_165_lseq,"src.compiler.object.builtin.IntObject","lseq",0x7148e8a8,"src.compiler.object.builtin.IntObject.lseq","src/compiler/object/builtin/IntObject.hx",165,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_172_gr,"src.compiler.object.builtin.IntObject","gr",0x6716c4e0,"src.compiler.object.builtin.IntObject.gr","src/compiler/object/builtin/IntObject.hx",172,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_179_greq,"src.compiler.object.builtin.IntObject","greq",0x6dfa154c,"src.compiler.object.builtin.IntObject.greq","src/compiler/object/builtin/IntObject.hx",179,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_186_and,"src.compiler.object.builtin.IntObject","and",0xccd0ee82,"src.compiler.object.builtin.IntObject.and","src/compiler/object/builtin/IntObject.hx",186,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_193_or,"src.compiler.object.builtin.IntObject","or",0x6716cbd8,"src.compiler.object.builtin.IntObject.or","src/compiler/object/builtin/IntObject.hx",193,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_200_xor,"src.compiler.object.builtin.IntObject","xor",0xcce26346,"src.compiler.object.builtin.IntObject.xor","src/compiler/object/builtin/IntObject.hx",200,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_207_shiftleft,"src.compiler.object.builtin.IntObject","shiftleft",0x8365e374,"src.compiler.object.builtin.IntObject.shiftleft","src/compiler/object/builtin/IntObject.hx",207,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_214_rshiftleft,"src.compiler.object.builtin.IntObject","rshiftleft",0x1039668c,"src.compiler.object.builtin.IntObject.rshiftleft","src/compiler/object/builtin/IntObject.hx",214,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_221_shiftright,"src.compiler.object.builtin.IntObject","shiftright",0xecce2fcf,"src.compiler.object.builtin.IntObject.shiftright","src/compiler/object/builtin/IntObject.hx",221,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_228_rshiftright,"src.compiler.object.builtin.IntObject","rshiftright",0x990d61b7,"src.compiler.object.builtin.IntObject.rshiftright","src/compiler/object/builtin/IntObject.hx",228,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_235_complement,"src.compiler.object.builtin.IntObject","complement",0x84f3ea9b,"src.compiler.object.builtin.IntObject.complement","src/compiler/object/builtin/IntObject.hx",235,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_241_int,"src.compiler.object.builtin.IntObject","int",0xccd7009a,"src.compiler.object.builtin.IntObject.int","src/compiler/object/builtin/IntObject.hx",241,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_247_float,"src.compiler.object.builtin.IntObject","float",0x35823a07,"src.compiler.object.builtin.IntObject.float","src/compiler/object/builtin/IntObject.hx",247,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_253_str,"src.compiler.object.builtin.IntObject","str",0xccde9c5c,"src.compiler.object.builtin.IntObject.str","src/compiler/object/builtin/IntObject.hx",253,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_259_bool,"src.compiler.object.builtin.IntObject","bool",0x6aa9c61f,"src.compiler.object.builtin.IntObject.bool","src/compiler/object/builtin/IntObject.hx",259,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_265_negate,"src.compiler.object.builtin.IntObject","negate",0xc233aaf7,"src.compiler.object.builtin.IntObject.negate","src/compiler/object/builtin/IntObject.hx",265,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_271_bytes,"src.compiler.object.builtin.IntObject","bytes",0xf0837cd6,"src.compiler.object.builtin.IntObject.bytes","src/compiler/object/builtin/IntObject.hx",271,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_282_getHash,"src.compiler.object.builtin.IntObject","getHash",0x738c84af,"src.compiler.object.builtin.IntObject.getHash","src/compiler/object/builtin/IntObject.hx",282,0x8e4fbde7)
HX_LOCAL_STACK_FRAME(_hx_pos_4a144d7dd0585e2f_92_intPower,"src.compiler.object.builtin.IntObject","intPower",0x34864d0b,"src.compiler.object.builtin.IntObject.intPower","src/compiler/object/builtin/IntObject.hx",92,0x8e4fbde7)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void IntObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_13_new)
HXDLIN(  13)		super::__construct(scope,type,members,value,args);
            	}

Dynamic IntObject_obj::__CreateEmpty() { return new IntObject_obj; }

void *IntObject_obj::_hx_vtable = 0;

Dynamic IntObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntObject_obj > _hx_result = new IntObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool IntObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x22398a09) {
		if (inClassId<=(int)0x15de4261) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
		} else {
			return inClassId==(int)0x22398a09;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

void IntObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_19_setup)
HXDLIN(  19)		this->value = ( (int)(value) );
            	}


int IntObject_obj::getValue(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_24_getValue)
HXDLIN(  24)		return this->value;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntObject_obj,getValue,return )

 ::src::compiler::object::Object IntObject_obj::add( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_28_add)
HXLINE(  29)		if (this->hasMember(HX_("__add__",61,28,a2,86))) {
HXLINE(  29)			return this->callMember(HX_("__add__",61,28,a2,86),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  30)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  30)			int _hx_tmp = this->rawInt();
HXDLIN(  30)			return this->_float((_hx_tmp + other->rawFloat()),null());
            		}
            		else {
HXLINE(  31)			bool _hx_tmp1;
HXDLIN(  31)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  31)				_hx_tmp1 = !(other->hasMember(HX_("add",21,f2,49,00)));
            			}
            			else {
HXLINE(  31)				_hx_tmp1 = true;
            			}
HXDLIN(  31)			if (_hx_tmp1) {
HXLINE(  31)				int _hx_tmp2 = this->rawInt();
HXDLIN(  31)				return this->_int((_hx_tmp2 + other->rawInt()),null());
            			}
            			else {
HXLINE(  32)				return other->add(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  30)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::sub( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_36_sub)
HXLINE(  37)		if (this->hasMember(HX_("__sub__",80,b5,13,ef))) {
HXLINE(  37)			return this->callMember(HX_("__sub__",80,b5,13,ef),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  38)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  38)			int _hx_tmp = this->rawInt();
HXDLIN(  38)			return this->_float((_hx_tmp - other->rawFloat()),null());
            		}
            		else {
HXLINE(  39)			bool _hx_tmp1;
HXDLIN(  39)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  39)				_hx_tmp1 = !(other->hasMember(HX_("rsub",4e,fc,b1,4b)));
            			}
            			else {
HXLINE(  39)				_hx_tmp1 = true;
            			}
HXDLIN(  39)			if (_hx_tmp1) {
HXLINE(  39)				int _hx_tmp2 = this->rawInt();
HXDLIN(  39)				return this->_int((_hx_tmp2 - other->rawInt()),null());
            			}
            			else {
HXLINE(  40)				return other->rsub(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  38)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rsub( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_44_rsub)
HXLINE(  45)		if (this->hasMember(HX_("__rsub__",0e,ea,93,c1))) {
HXLINE(  45)			return this->callMember(HX_("__rsub__",0e,ea,93,c1),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  46)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  46)			Float _hx_tmp = other->rawFloat();
HXDLIN(  46)			return this->_float((_hx_tmp - this->rawInt()),null());
            		}
            		else {
HXLINE(  47)			bool _hx_tmp1;
HXDLIN(  47)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  47)				_hx_tmp1 = !(other->hasMember(HX_("sub",80,a9,57,00)));
            			}
            			else {
HXLINE(  47)				_hx_tmp1 = true;
            			}
HXDLIN(  47)			if (_hx_tmp1) {
HXLINE(  47)				int _hx_tmp2 = other->rawInt();
HXDLIN(  47)				return this->_int((_hx_tmp2 - this->rawInt()),null());
            			}
            			else {
HXLINE(  48)				return other->sub(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  46)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::mult( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_53_mult)
HXDLIN(  53)		if (this->hasMember(HX_("__mult__",30,02,b3,e2))) {
HXDLIN(  53)			return this->callMember(HX_("__mult__",30,02,b3,e2),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
            		else {
HXLINE(  54)			if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  54)				int _hx_tmp = this->rawInt();
HXDLIN(  54)				return this->_float((_hx_tmp * other->rawFloat()),null());
            			}
            			else {
HXLINE(  55)				bool _hx_tmp1;
HXDLIN(  55)				if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  55)					_hx_tmp1 = !(other->hasMember(HX_("mult",f0,67,65,48)));
            				}
            				else {
HXLINE(  55)					_hx_tmp1 = true;
            				}
HXDLIN(  55)				if (_hx_tmp1) {
HXLINE(  55)					int _hx_tmp2 = this->rawInt();
HXDLIN(  55)					return this->_int((_hx_tmp2 * other->rawInt()),null());
            				}
            				else {
HXLINE(  56)					return other->mult(hx::ObjectPtr<OBJ_>(this));
            				}
            			}
            		}
HXLINE(  53)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::div( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_60_div)
HXLINE(  61)		if (this->hasMember(HX_("__div__",91,9f,31,44))) {
HXLINE(  61)			return this->callMember(HX_("__div__",91,9f,31,44),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  62)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  62)			int _hx_tmp = this->rawInt();
HXDLIN(  62)			return this->_float(((Float)_hx_tmp / (Float)other->rawFloat()),null());
            		}
            		else {
HXLINE(  63)			bool _hx_tmp1;
HXDLIN(  63)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  63)				_hx_tmp1 = !(other->hasMember(HX_("rdiv",1f,90,a6,4b)));
            			}
            			else {
HXLINE(  63)				_hx_tmp1 = true;
            			}
HXDLIN(  63)			if (_hx_tmp1) {
HXLINE(  63)				int _hx_tmp2 = this->rawInt();
HXDLIN(  63)				return this->_float(((Float)_hx_tmp2 / (Float)other->rawInt()),null());
            			}
            			else {
HXLINE(  64)				return other->rdiv(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  62)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rdiv( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_68_rdiv)
HXLINE(  69)		if (this->hasMember(HX_("__rdiv__",1f,d4,b1,16))) {
HXLINE(  69)			return this->callMember(HX_("__rdiv__",1f,d4,b1,16),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  70)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  70)			Float _hx_tmp = other->rawFloat();
HXDLIN(  70)			return this->_float(((Float)_hx_tmp / (Float)this->rawInt()),null());
            		}
            		else {
HXLINE(  71)			bool _hx_tmp1;
HXDLIN(  71)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  71)				_hx_tmp1 = !(other->hasMember(HX_("div",51,3d,4c,00)));
            			}
            			else {
HXLINE(  71)				_hx_tmp1 = true;
            			}
HXDLIN(  71)			if (_hx_tmp1) {
HXLINE(  71)				int _hx_tmp2 = other->rawInt();
HXDLIN(  71)				return this->_float(((Float)_hx_tmp2 / (Float)this->rawInt()),null());
            			}
            			else {
HXLINE(  72)				return other->div(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  70)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::intdiv( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_76_intdiv)
HXLINE(  77)		if (this->hasMember(HX_("__intdiv__",82,6a,5b,32))) {
HXLINE(  77)			return this->callMember(HX_("__intdiv__",82,6a,5b,32),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  78)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  78)			int _hx_tmp = this->rawInt();
HXDLIN(  78)			return this->_int(::Math_obj::floor(((Float)_hx_tmp / (Float)other->rawFloat())),null());
            		}
            		else {
HXLINE(  79)			bool _hx_tmp1;
HXDLIN(  79)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  79)				_hx_tmp1 = !(other->hasMember(HX_("rintdiv",b4,91,14,23)));
            			}
            			else {
HXLINE(  79)				_hx_tmp1 = true;
            			}
HXDLIN(  79)			if (_hx_tmp1) {
HXLINE(  79)				int _hx_tmp2 = this->rawInt();
HXDLIN(  79)				return this->_int(::Math_obj::floor(((Float)_hx_tmp2 / (Float)other->rawInt())),null());
            			}
            			else {
HXLINE(  80)				return other->rintdiv(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  78)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rintdiv( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_84_rintdiv)
HXLINE(  85)		if (this->hasMember(HX_("__rintdiv__",b4,02,d0,ac))) {
HXLINE(  85)			return this->callMember(HX_("__rintdiv__",b4,02,d0,ac),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE(  86)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE(  86)			Float _hx_tmp = other->rawFloat();
HXDLIN(  86)			return this->_int(::Math_obj::floor(((Float)_hx_tmp / (Float)this->rawInt())),null());
            		}
            		else {
HXLINE(  87)			bool _hx_tmp1;
HXDLIN(  87)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE(  87)				_hx_tmp1 = !(other->hasMember(HX_("intdiv",c2,af,85,9e)));
            			}
            			else {
HXLINE(  87)				_hx_tmp1 = true;
            			}
HXDLIN(  87)			if (_hx_tmp1) {
HXLINE(  87)				int _hx_tmp2 = other->rawInt();
HXDLIN(  87)				return this->_int(::Math_obj::floor(((Float)_hx_tmp2 / (Float)this->rawInt())),null());
            			}
            			else {
HXLINE(  88)				return other->intdiv(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE(  86)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::pow( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_104_pow)
HXLINE( 105)		if (this->hasMember(HX_("__pow__",98,9f,f8,30))) {
HXLINE( 105)			return this->callMember(HX_("__pow__",98,9f,f8,30),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 106)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 106)			int _hx_tmp = this->rawInt();
HXDLIN( 106)			return this->_float(::Math_obj::pow(_hx_tmp,other->rawFloat()),null());
            		}
            		else {
HXLINE( 107)			bool _hx_tmp1;
HXDLIN( 107)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 107)				_hx_tmp1 = !(other->hasMember(HX_("rpow",66,b0,af,4b)));
            			}
            			else {
HXLINE( 107)				_hx_tmp1 = true;
            			}
HXDLIN( 107)			if (_hx_tmp1) {
HXLINE( 108)				int power = other->rawInt();
HXLINE( 109)				if ((power >= (int)0)) {
HXLINE( 109)					return this->_int(::src::compiler::object::builtin::IntObject_obj::intPower(this->rawInt(),power),null());
            				}
            				else {
HXLINE( 110)					return this->_float(::Math_obj::pow(this->rawInt(),power),null());
            				}
            			}
            			else {
HXLINE( 112)				return other->rpow(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 106)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rpow( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_116_rpow)
HXLINE( 117)		if (this->hasMember(HX_("__rpow__",26,d4,78,03))) {
HXLINE( 117)			return this->callMember(HX_("__rpow__",26,d4,78,03),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 118)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 118)			Float _hx_tmp = other->rawFloat();
HXDLIN( 118)			return this->_float(::Math_obj::pow(_hx_tmp,this->rawInt()),null());
            		}
            		else {
HXLINE( 119)			bool _hx_tmp1;
HXDLIN( 119)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 119)				_hx_tmp1 = !(other->hasMember(HX_("pow",98,5d,55,00)));
            			}
            			else {
HXLINE( 119)				_hx_tmp1 = true;
            			}
HXDLIN( 119)			if (_hx_tmp1) {
HXLINE( 120)				int power = this->rawInt();
HXLINE( 121)				if ((power >= (int)0)) {
HXLINE( 121)					return this->_int(::src::compiler::object::builtin::IntObject_obj::intPower(other->rawInt(),power),null());
            				}
            				else {
HXLINE( 122)					return this->_float(::Math_obj::pow(other->rawInt(),power),null());
            				}
            			}
            			else {
HXLINE( 124)				return other->pow(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 118)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::mod( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_128_mod)
HXLINE( 129)		if (this->hasMember(HX_("__mod__",42,77,b6,76))) {
HXLINE( 129)			return this->callMember(HX_("__mod__",42,77,b6,76),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 130)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 130)			int _hx_tmp = this->rawInt();
HXDLIN( 130)			return this->_float(hx::Mod(_hx_tmp,other->rawFloat()),null());
            		}
            		else {
HXLINE( 131)			bool _hx_tmp1;
HXDLIN( 131)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 131)				_hx_tmp1 = !(other->hasMember(HX_("rmod",90,69,ad,4b)));
            			}
            			else {
HXLINE( 131)				_hx_tmp1 = true;
            			}
HXDLIN( 131)			if (_hx_tmp1) {
HXLINE( 131)				int _hx_tmp2 = this->rawInt();
HXDLIN( 131)				return this->_int(hx::Mod(_hx_tmp2,other->rawInt()),null());
            			}
            			else {
HXLINE( 132)				return other->rmod(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 130)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rmod( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_136_rmod)
HXLINE( 137)		if (this->hasMember(HX_("__rmod__",d0,ab,36,49))) {
HXLINE( 137)			return this->callMember(HX_("__rmod__",d0,ab,36,49),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 138)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 138)			Float _hx_tmp = other->rawFloat();
HXDLIN( 138)			return this->_float(hx::Mod(_hx_tmp,this->rawInt()),null());
            		}
            		else {
HXLINE( 139)			bool _hx_tmp1;
HXDLIN( 139)			if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 139)				_hx_tmp1 = !(other->hasMember(HX_("mod",c2,16,53,00)));
            			}
            			else {
HXLINE( 139)				_hx_tmp1 = true;
            			}
HXDLIN( 139)			if (_hx_tmp1) {
HXLINE( 139)				int _hx_tmp2 = other->rawInt();
HXDLIN( 139)				return this->_int(hx::Mod(_hx_tmp2,this->rawInt()),null());
            			}
            			else {
HXLINE( 140)				return other->mod(hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 138)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::eq( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_144_eq)
HXLINE( 145)		if (this->hasMember(HX_("__eq__",ac,01,11,f2))) {
HXLINE( 145)			return this->callMember(HX_("__eq__",ac,01,11,f2),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 146)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 146)			Float _hx_tmp = this->rawFloat();
HXDLIN( 146)			return this->_bool((_hx_tmp == other->rawFloat()),null());
            		}
            		else {
HXLINE( 147)			int _hx_tmp1 = this->rawInt();
HXDLIN( 147)			return this->_bool((_hx_tmp1 == other->rawInt()),null());
            		}
HXLINE( 146)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::neq( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_151_neq)
HXLINE( 152)		if (this->hasMember(HX_("__neq__",da,c6,8a,03))) {
HXLINE( 152)			return this->callMember(HX_("__neq__",da,c6,8a,03),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 153)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 153)			Float _hx_tmp = this->rawFloat();
HXDLIN( 153)			return this->_bool((_hx_tmp != other->rawFloat()),null());
            		}
            		else {
HXLINE( 154)			int _hx_tmp1 = this->rawInt();
HXDLIN( 154)			return this->_bool((_hx_tmp1 != other->rawInt()),null());
            		}
HXLINE( 153)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::ls( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_158_ls)
HXLINE( 159)		if (this->hasMember(HX_("__ls__",87,04,b3,f6))) {
HXLINE( 159)			return this->callMember(HX_("__ls__",87,04,b3,f6),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 160)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 160)			Float _hx_tmp = this->rawFloat();
HXDLIN( 160)			return this->_bool((_hx_tmp < other->rawFloat()),null());
            		}
            		else {
HXLINE( 161)			int _hx_tmp1 = this->rawInt();
HXDLIN( 161)			return this->_bool((_hx_tmp1 < other->rawInt()),null());
            		}
HXLINE( 160)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::lseq( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_165_lseq)
HXLINE( 166)		if (this->hasMember(HX_("__lseq__",b3,b7,e7,50))) {
HXLINE( 166)			return this->callMember(HX_("__lseq__",b3,b7,e7,50),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 167)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 167)			Float _hx_tmp = this->rawFloat();
HXDLIN( 167)			return this->_bool((_hx_tmp <= other->rawFloat()),null());
            		}
            		else {
HXLINE( 168)			int _hx_tmp1 = this->rawInt();
HXDLIN( 168)			return this->_bool((_hx_tmp1 <= other->rawInt()),null());
            		}
HXLINE( 167)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::gr( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_172_gr)
HXLINE( 173)		if (this->hasMember(HX_("__gr__",2b,31,64,f3))) {
HXLINE( 173)			return this->callMember(HX_("__gr__",2b,31,64,f3),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 174)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 174)			Float _hx_tmp = this->rawFloat();
HXDLIN( 174)			return this->_bool((_hx_tmp > other->rawFloat()),null());
            		}
            		else {
HXLINE( 175)			int _hx_tmp1 = this->rawInt();
HXDLIN( 175)			return this->_bool((_hx_tmp1 > other->rawInt()),null());
            		}
HXLINE( 174)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::greq( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_179_greq)
HXLINE( 180)		if (this->hasMember(HX_("__greq__",57,55,b8,bd))) {
HXLINE( 180)			return this->callMember(HX_("__greq__",57,55,b8,bd),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 181)		if (other->isInstance(HX_("FloatType",56,c2,14,a2))) {
HXLINE( 181)			Float _hx_tmp = this->rawFloat();
HXDLIN( 181)			return this->_bool((_hx_tmp >= other->rawFloat()),null());
            		}
            		else {
HXLINE( 182)			int _hx_tmp1 = this->rawInt();
HXDLIN( 182)			return this->_bool((_hx_tmp1 >= other->rawInt()),null());
            		}
HXLINE( 181)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::_hx_and( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_186_and)
HXLINE( 187)		if (this->hasMember(HX_("__and__",97,4a,3e,8d))) {
HXLINE( 187)			return this->callMember(HX_("__and__",97,4a,3e,8d),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 188)		bool _hx_tmp;
HXDLIN( 188)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 188)			_hx_tmp = !(other->hasMember(HX_("and",d7,fa,49,00)));
            		}
            		else {
HXLINE( 188)			_hx_tmp = true;
            		}
HXDLIN( 188)		if (_hx_tmp) {
HXLINE( 188)			int _hx_tmp1 = this->rawInt();
HXDLIN( 188)			return this->_int(((int)_hx_tmp1 & (int)other->rawInt()),null());
            		}
            		else {
HXLINE( 189)			return other->_hx_and(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 188)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::_hx_or( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_193_or)
HXLINE( 194)		if (this->hasMember(HX_("__or__",23,e6,ad,f8))) {
HXLINE( 194)			return this->callMember(HX_("__or__",23,e6,ad,f8),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 195)		bool _hx_tmp;
HXDLIN( 195)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 195)			_hx_tmp = !(other->hasMember(HX_("or",23,61,00,00)));
            		}
            		else {
HXLINE( 195)			_hx_tmp = true;
            		}
HXDLIN( 195)		if (_hx_tmp) {
HXLINE( 195)			int _hx_tmp1 = this->rawInt();
HXDLIN( 195)			return this->_int(((int)_hx_tmp1 | (int)other->rawInt()),null());
            		}
            		else {
HXLINE( 196)			return other->_hx_or(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 195)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::_hx_xor( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_200_xor)
HXLINE( 201)		if (this->hasMember(HX_("__xor__",5b,78,29,cc))) {
HXLINE( 201)			return this->callMember(HX_("__xor__",5b,78,29,cc),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 202)		bool _hx_tmp;
HXDLIN( 202)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 202)			_hx_tmp = !(other->hasMember(HX_("xor",9b,6f,5b,00)));
            		}
            		else {
HXLINE( 202)			_hx_tmp = true;
            		}
HXDLIN( 202)		if (_hx_tmp) {
HXLINE( 202)			int _hx_tmp1 = this->rawInt();
HXDLIN( 202)			return this->_int(((int)_hx_tmp1 ^ (int)other->rawInt()),null());
            		}
            		else {
HXLINE( 203)			return other->_hx_xor(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 202)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::shiftleft( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_207_shiftleft)
HXLINE( 208)		if (this->hasMember(HX_("__shiftleft__",c9,25,42,0b))) {
HXLINE( 208)			return this->callMember(HX_("__shiftleft__",c9,25,42,0b),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 209)		bool _hx_tmp;
HXDLIN( 209)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 209)			_hx_tmp = !(other->hasMember(HX_("rshiftleft",d7,be,f9,88)));
            		}
            		else {
HXLINE( 209)			_hx_tmp = true;
            		}
HXDLIN( 209)		if (_hx_tmp) {
HXLINE( 209)			int _hx_tmp1 = this->rawInt();
HXDLIN( 209)			return this->_int(((int)_hx_tmp1 << (int)other->rawInt()),null());
            		}
            		else {
HXLINE( 210)			return other->rshiftleft(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 209)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rshiftleft( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_214_rshiftleft)
HXLINE( 215)		if (this->hasMember(HX_("__rshiftleft__",d7,38,c9,2a))) {
HXLINE( 215)			return this->callMember(HX_("__rshiftleft__",d7,38,c9,2a),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 216)		bool _hx_tmp;
HXDLIN( 216)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 216)			_hx_tmp = !(other->hasMember(HX_("shiftleft",89,5d,d0,e7)));
            		}
            		else {
HXLINE( 216)			_hx_tmp = true;
            		}
HXDLIN( 216)		if (_hx_tmp) {
HXLINE( 216)			int _hx_tmp1 = other->rawInt();
HXDLIN( 216)			return this->_int(((int)_hx_tmp1 << (int)this->rawInt()),null());
            		}
            		else {
HXLINE( 217)			return other->shiftleft(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 216)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::shiftright( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_221_shiftright)
HXLINE( 222)		if (this->hasMember(HX_("__shiftright__",da,18,15,ed))) {
HXLINE( 222)			return this->callMember(HX_("__shiftright__",da,18,15,ed),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 223)		bool _hx_tmp;
HXDLIN( 223)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 223)			_hx_tmp = !(other->hasMember(HX_("rshiftright",0c,4b,9a,c8)));
            		}
            		else {
HXLINE( 223)			_hx_tmp = true;
            		}
HXDLIN( 223)		if (_hx_tmp) {
HXLINE( 223)			int _hx_tmp1 = this->rawInt();
HXDLIN( 223)			return this->_int(((int)_hx_tmp1 >> (int)other->rawInt()),null());
            		}
            		else {
HXLINE( 224)			return other->rshiftright(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 223)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::rshiftright( ::src::compiler::object::Object other){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_228_rshiftright)
HXLINE( 229)		if (this->hasMember(HX_("__rshiftright__",0c,b2,be,63))) {
HXLINE( 229)			return this->callMember(HX_("__rshiftright__",0c,b2,be,63),::Array_obj< ::Dynamic>::__new(1)->init(0,other));
            		}
HXLINE( 230)		bool _hx_tmp;
HXDLIN( 230)		if (!(other->isInstance(HX_("IntType",29,f7,3d,d9)))) {
HXLINE( 230)			_hx_tmp = !(other->hasMember(HX_("shiftright",1a,88,8e,65)));
            		}
            		else {
HXLINE( 230)			_hx_tmp = true;
            		}
HXDLIN( 230)		if (_hx_tmp) {
HXLINE( 230)			int _hx_tmp1 = other->rawInt();
HXDLIN( 230)			return this->_int(((int)_hx_tmp1 >> (int)this->rawInt()),null());
            		}
            		else {
HXLINE( 231)			return other->shiftright(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 230)		return null();
            	}


 ::src::compiler::object::Object IntObject_obj::complement(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_235_complement)
HXLINE( 236)		if (this->hasMember(HX_("__compl__",bd,b1,bf,04))) {
HXLINE( 236)			return this->callMember(HX_("__compl__",bd,b1,bf,04),::Array_obj< ::Dynamic>::__new(0));
            		}
HXLINE( 237)		return this->_int(~(this->rawInt()),null());
            	}


 ::src::compiler::object::builtin::IntObject IntObject_obj::_hx_int(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_241_int)
HXLINE( 242)		if (this->hasMember(HX_("__int__",af,12,7f,28))) {
HXLINE( 242)			return hx::TCast<  ::src::compiler::object::builtin::IntObject >::cast(this->callMember(HX_("__int__",af,12,7f,28),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 243)		return hx::ObjectPtr<OBJ_>(this);
            	}


 ::src::compiler::object::builtin::FloatObject IntObject_obj::_hx_float(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_247_float)
HXLINE( 248)		if (this->hasMember(HX_("__float__",9c,08,57,6b))) {
HXLINE( 248)			return hx::TCast<  ::src::compiler::object::builtin::FloatObject >::cast(this->callMember(HX_("__float__",9c,08,57,6b),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 249)		return this->_float(this->value,null());
            	}


 ::src::compiler::object::builtin::StringObject IntObject_obj::str(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_253_str)
HXLINE( 254)		if (this->hasMember(HX_("__str__",f1,a2,76,ee))) {
HXLINE( 254)			return hx::TCast<  ::src::compiler::object::builtin::StringObject >::cast(this->callMember(HX_("__str__",f1,a2,76,ee),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 255)		return this->_str(::Std_obj::string(this->value),null());
            	}


 ::src::compiler::object::builtin::BoolObject IntObject_obj::_hx_bool(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_259_bool)
HXLINE( 260)		if (this->hasMember(HX_("__bool__",ea,20,54,0a))) {
HXLINE( 260)			return hx::TCast<  ::src::compiler::object::builtin::BoolObject >::cast(this->callMember(HX_("__bool__",ea,20,54,0a),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 261)		return this->_bool((this->value != (int)0),null());
            	}


 ::src::compiler::object::Object IntObject_obj::negate(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_265_negate)
HXLINE( 266)		if (this->hasMember(HX_("__negate__",82,7c,77,f4))) {
HXLINE( 266)			return this->callMember(HX_("__negate__",82,7c,77,f4),::Array_obj< ::Dynamic>::__new(0));
            		}
HXLINE( 267)		return this->_int(-(this->value),null());
            	}


 ::src::compiler::object::builtin::BytesObject IntObject_obj::bytes(){
            	HX_GC_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_271_bytes)
HXLINE( 272)		if (this->hasMember(HX_("__bytes__",2b,dd,49,db))) {
HXLINE( 272)			return hx::TCast<  ::src::compiler::object::builtin::BytesObject >::cast(this->callMember(HX_("__bytes__",2b,dd,49,db),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE( 273)		 ::haxe::io::BytesBuffer buffer =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXLINE( 274)		if ((this->value < (int)255)) {
HXLINE( 274)			buffer->b->push(this->value);
            		}
            		else {
HXLINE( 275)			if ((this->value < (int)1)) {
HXLINE( 275)				buffer->addInt32(this->value);
            			}
            			else {
HXLINE( 276)				buffer->addInt64(( ::cpp::Int64Struct(this->value)));
            			}
            		}
HXLINE( 277)		return this->_bytes(buffer->getBytes(),null());
            	}


int IntObject_obj::getHash(){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_282_getHash)
HXDLIN( 282)		return this->value;
            	}


int IntObject_obj::intPower(int x,int power){
            	HX_STACKFRAME(&_hx_pos_4a144d7dd0585e2f_92_intPower)
HXLINE(  93)		int result = (int)1;
HXLINE(  94)		while((power > (int)0)){
HXLINE(  96)			if ((((int)power & (int)(int)1) == (int)1)) {
HXLINE(  96)				result = (result * x);
            			}
HXLINE(  97)			power = ((int)power >> (int)(int)1);
HXLINE(  98)			x = (x * x);
            		}
HXLINE( 100)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IntObject_obj,intPower,return )


hx::ObjectPtr< IntObject_obj > IntObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< IntObject_obj > __this = new IntObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< IntObject_obj > IntObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	IntObject_obj *__this = (IntObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IntObject_obj), true, "src.compiler.object.builtin.IntObject"));
	*(void **)__this = IntObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

IntObject_obj::IntObject_obj()
{
}

hx::Val IntObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"eq") ) { return hx::Val( eq_dyn() ); }
		if (HX_FIELD_EQ(inName,"ls") ) { return hx::Val( ls_dyn() ); }
		if (HX_FIELD_EQ(inName,"gr") ) { return hx::Val( gr_dyn() ); }
		if (HX_FIELD_EQ(inName,"or") ) { return hx::Val( _hx_or_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"sub") ) { return hx::Val( sub_dyn() ); }
		if (HX_FIELD_EQ(inName,"div") ) { return hx::Val( div_dyn() ); }
		if (HX_FIELD_EQ(inName,"pow") ) { return hx::Val( pow_dyn() ); }
		if (HX_FIELD_EQ(inName,"mod") ) { return hx::Val( mod_dyn() ); }
		if (HX_FIELD_EQ(inName,"neq") ) { return hx::Val( neq_dyn() ); }
		if (HX_FIELD_EQ(inName,"and") ) { return hx::Val( _hx_and_dyn() ); }
		if (HX_FIELD_EQ(inName,"xor") ) { return hx::Val( _hx_xor_dyn() ); }
		if (HX_FIELD_EQ(inName,"int") ) { return hx::Val( _hx_int_dyn() ); }
		if (HX_FIELD_EQ(inName,"str") ) { return hx::Val( str_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"rsub") ) { return hx::Val( rsub_dyn() ); }
		if (HX_FIELD_EQ(inName,"mult") ) { return hx::Val( mult_dyn() ); }
		if (HX_FIELD_EQ(inName,"rdiv") ) { return hx::Val( rdiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"rpow") ) { return hx::Val( rpow_dyn() ); }
		if (HX_FIELD_EQ(inName,"rmod") ) { return hx::Val( rmod_dyn() ); }
		if (HX_FIELD_EQ(inName,"lseq") ) { return hx::Val( lseq_dyn() ); }
		if (HX_FIELD_EQ(inName,"greq") ) { return hx::Val( greq_dyn() ); }
		if (HX_FIELD_EQ(inName,"bool") ) { return hx::Val( _hx_bool_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		if (HX_FIELD_EQ(inName,"float") ) { return hx::Val( _hx_float_dyn() ); }
		if (HX_FIELD_EQ(inName,"bytes") ) { return hx::Val( bytes_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"intdiv") ) { return hx::Val( intdiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"negate") ) { return hx::Val( negate_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rintdiv") ) { return hx::Val( rintdiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getHash") ) { return hx::Val( getHash_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getValue") ) { return hx::Val( getValue_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"shiftleft") ) { return hx::Val( shiftleft_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"rshiftleft") ) { return hx::Val( rshiftleft_dyn() ); }
		if (HX_FIELD_EQ(inName,"shiftright") ) { return hx::Val( shiftright_dyn() ); }
		if (HX_FIELD_EQ(inName,"complement") ) { return hx::Val( complement_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"rshiftright") ) { return hx::Val( rshiftright_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool IntObject_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"intPower") ) { outValue = intPower_dyn(); return true; }
	}
	return false;
}

hx::Val IntObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IntObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo IntObject_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(IntObject_obj,value),HX_HCSTRING("value","\x71","\x7f","\xb8","\x31")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IntObject_obj_sStaticStorageInfo = 0;
#endif

static ::String IntObject_obj_sMemberFields[] = {
	HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	HX_HCSTRING("getValue","\xfb","\x8e","\x8f","\x91"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("sub","\x80","\xa9","\x57","\x00"),
	HX_HCSTRING("rsub","\x4e","\xfc","\xb1","\x4b"),
	HX_HCSTRING("mult","\xf0","\x67","\x65","\x48"),
	HX_HCSTRING("div","\x51","\x3d","\x4c","\x00"),
	HX_HCSTRING("rdiv","\x1f","\x90","\xa6","\x4b"),
	HX_HCSTRING("intdiv","\xc2","\xaf","\x85","\x9e"),
	HX_HCSTRING("rintdiv","\xb4","\x91","\x14","\x23"),
	HX_HCSTRING("pow","\x98","\x5d","\x55","\x00"),
	HX_HCSTRING("rpow","\x66","\xb0","\xaf","\x4b"),
	HX_HCSTRING("mod","\xc2","\x16","\x53","\x00"),
	HX_HCSTRING("rmod","\x90","\x69","\xad","\x4b"),
	HX_HCSTRING("eq","\x6c","\x58","\x00","\x00"),
	HX_HCSTRING("neq","\x5a","\xd0","\x53","\x00"),
	HX_HCSTRING("ls","\x87","\x5e","\x00","\x00"),
	HX_HCSTRING("lseq","\xb3","\xa6","\xba","\x47"),
	HX_HCSTRING("gr","\x2b","\x5a","\x00","\x00"),
	HX_HCSTRING("greq","\x57","\xd3","\x6b","\x44"),
	HX_HCSTRING("and","\xd7","\xfa","\x49","\x00"),
	HX_HCSTRING("or","\x23","\x61","\x00","\x00"),
	HX_HCSTRING("xor","\x9b","\x6f","\x5b","\x00"),
	HX_HCSTRING("shiftleft","\x89","\x5d","\xd0","\xe7"),
	HX_HCSTRING("rshiftleft","\xd7","\xbe","\xf9","\x88"),
	HX_HCSTRING("shiftright","\x1a","\x88","\x8e","\x65"),
	HX_HCSTRING("rshiftright","\x0c","\x4b","\x9a","\xc8"),
	HX_HCSTRING("complement","\xe6","\x42","\xb4","\xfd"),
	HX_HCSTRING("int","\xef","\x0c","\x50","\x00"),
	HX_HCSTRING("float","\x9c","\xc5","\x96","\x02"),
	HX_HCSTRING("str","\xb1","\xa8","\x57","\x00"),
	HX_HCSTRING("bool","\x2a","\x84","\x1b","\x41"),
	HX_HCSTRING("negate","\xc2","\x41","\x19","\x67"),
	HX_HCSTRING("bytes","\x6b","\x08","\x98","\xbd"),
	HX_HCSTRING("getHash","\x84","\xdf","\x8a","\x17"),
	::String(null()) };

static void IntObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntObject_obj::__mClass,"__mClass");
};

#endif

hx::Class IntObject_obj::__mClass;

static ::String IntObject_obj_sStaticFields[] = {
	HX_HCSTRING("intPower","\x96","\x6c","\x17","\x0f"),
	::String(null())
};

void IntObject_obj::__register()
{
	hx::Object *dummy = new IntObject_obj;
	IntObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.IntObject","\x99","\x62","\x77","\xc9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &IntObject_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IntObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(IntObject_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
