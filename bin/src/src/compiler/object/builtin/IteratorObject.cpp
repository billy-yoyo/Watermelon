// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_BoolObject
#include <src/compiler/object/builtin/BoolObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_IteratorObject
#include <src/compiler/object/builtin/IteratorObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_335e7f8f9fe851c2_8_new,"src.compiler.object.builtin.IteratorObject","new",0xa2c11fd4,"src.compiler.object.builtin.IteratorObject.new","src/compiler/object/builtin/IteratorObject.hx",8,0x530902ba)
HX_LOCAL_STACK_FRAME(_hx_pos_335e7f8f9fe851c2_14_setup,"src.compiler.object.builtin.IteratorObject","setup",0x8e26c2f1,"src.compiler.object.builtin.IteratorObject.setup","src/compiler/object/builtin/IteratorObject.hx",14,0x530902ba)
HX_LOCAL_STACK_FRAME(_hx_pos_335e7f8f9fe851c2_20_hasNext,"src.compiler.object.builtin.IteratorObject","hasNext",0x6782bee1,"src.compiler.object.builtin.IteratorObject.hasNext","src/compiler/object/builtin/IteratorObject.hx",20,0x530902ba)
HX_LOCAL_STACK_FRAME(_hx_pos_335e7f8f9fe851c2_26_next,"src.compiler.object.builtin.IteratorObject","next",0xc63abaff,"src.compiler.object.builtin.IteratorObject.next","src/compiler/object/builtin/IteratorObject.hx",26,0x530902ba)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void IteratorObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_335e7f8f9fe851c2_8_new)
HXDLIN(   8)		super::__construct(scope,type,members,value,args);
            	}

Dynamic IteratorObject_obj::__CreateEmpty() { return new IteratorObject_obj; }

void *IteratorObject_obj::_hx_vtable = 0;

Dynamic IteratorObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IteratorObject_obj > _hx_result = new IteratorObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool IteratorObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x727b3fd6) {
		if (inClassId<=(int)0x15de4261) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
		} else {
			return inClassId==(int)0x727b3fd6;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

void IteratorObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_335e7f8f9fe851c2_14_setup)
HXLINE(  15)		this->nextIndex = (int)0;
HXLINE(  16)		this->iterator = ( (::Array< ::Dynamic>)(value) );
            	}


 ::src::compiler::object::builtin::BoolObject IteratorObject_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_335e7f8f9fe851c2_20_hasNext)
HXLINE(  21)		if (this->hasMember(HX_("__hasnext__",8d,c2,e4,ac))) {
HXLINE(  21)			return hx::TCast<  ::src::compiler::object::builtin::BoolObject >::cast(this->callMember(HX_("__hasnext__",8d,c2,e4,ac),::Array_obj< ::Dynamic>::__new(0)));
            		}
HXLINE(  22)		return this->_bool((this->nextIndex < this->iterator->length),null());
            	}


 ::src::compiler::object::Object IteratorObject_obj::next(){
            	HX_STACKFRAME(&_hx_pos_335e7f8f9fe851c2_26_next)
HXLINE(  27)		if (this->hasMember(HX_("__next__",f3,a5,93,1a))) {
HXLINE(  27)			return this->callMember(HX_("__next__",f3,a5,93,1a),::Array_obj< ::Dynamic>::__new(0));
            		}
HXLINE(  28)		::Array< ::Dynamic> _hx_tmp = this->iterator;
HXDLIN(  28)		return _hx_tmp->__get(this->nextIndex++).StaticCast<  ::src::compiler::object::Object >();
            	}



hx::ObjectPtr< IteratorObject_obj > IteratorObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< IteratorObject_obj > __this = new IteratorObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< IteratorObject_obj > IteratorObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	IteratorObject_obj *__this = (IteratorObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IteratorObject_obj), true, "src.compiler.object.builtin.IteratorObject"));
	*(void **)__this = IteratorObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

IteratorObject_obj::IteratorObject_obj()
{
}

void IteratorObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IteratorObject);
	HX_MARK_MEMBER_NAME(iterator,"iterator");
	HX_MARK_MEMBER_NAME(nextIndex,"nextIndex");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void IteratorObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(iterator,"iterator");
	HX_VISIT_MEMBER_NAME(nextIndex,"nextIndex");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val IteratorObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"nextIndex") ) { return hx::Val( nextIndex ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val IteratorObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { iterator=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"nextIndex") ) { nextIndex=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IteratorObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"));
	outFields->push(HX_HCSTRING("nextIndex","\x1f","\xb5","\x59","\x65"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo IteratorObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(IteratorObject_obj,iterator),HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93")},
	{hx::fsInt,(int)offsetof(IteratorObject_obj,nextIndex),HX_HCSTRING("nextIndex","\x1f","\xb5","\x59","\x65")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IteratorObject_obj_sStaticStorageInfo = 0;
#endif

static ::String IteratorObject_obj_sMemberFields[] = {
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("nextIndex","\x1f","\xb5","\x59","\x65"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	HX_HCSTRING("hasNext","\x6d","\xa5","\x46","\x18"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	::String(null()) };

static void IteratorObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IteratorObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IteratorObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IteratorObject_obj::__mClass,"__mClass");
};

#endif

hx::Class IteratorObject_obj::__mClass;

void IteratorObject_obj::__register()
{
	hx::Object *dummy = new IteratorObject_obj;
	IteratorObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.IteratorObject","\xe2","\xe5","\x1f","\x25");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IteratorObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IteratorObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IteratorObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IteratorObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IteratorObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IteratorObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
