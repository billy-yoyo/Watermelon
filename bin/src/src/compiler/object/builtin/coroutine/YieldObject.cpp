// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_coroutine_YieldObject
#include <src/compiler/object/builtin/coroutine/YieldObject.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_YieldSignal
#include <src/compiler/signals/YieldSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3835dd2ea6be7832_10_new,"src.compiler.object.builtin.coroutine.YieldObject","new",0xb86884d3,"src.compiler.object.builtin.coroutine.YieldObject.new","src/compiler/object/builtin/coroutine/YieldObject.hx",10,0x72c478e0)
HX_LOCAL_STACK_FRAME(_hx_pos_3835dd2ea6be7832_16_setup,"src.compiler.object.builtin.coroutine.YieldObject","setup",0xe830a5b0,"src.compiler.object.builtin.coroutine.YieldObject.setup","src/compiler/object/builtin/coroutine/YieldObject.hx",16,0x72c478e0)
HX_LOCAL_STACK_FRAME(_hx_pos_3835dd2ea6be7832_21_toString,"src.compiler.object.builtin.coroutine.YieldObject","toString",0xefd81b59,"src.compiler.object.builtin.coroutine.YieldObject.toString","src/compiler/object/builtin/coroutine/YieldObject.hx",21,0x72c478e0)
namespace src{
namespace compiler{
namespace object{
namespace builtin{
namespace coroutine{

void YieldObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_3835dd2ea6be7832_10_new)
HXDLIN(  10)		super::__construct(scope,type,members,value,args);
            	}

Dynamic YieldObject_obj::__CreateEmpty() { return new YieldObject_obj; }

void *YieldObject_obj::_hx_vtable = 0;

Dynamic YieldObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< YieldObject_obj > _hx_result = new YieldObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool YieldObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x15de4261) {
		if (inClassId<=(int)0x112a0bd5) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x112a0bd5;
		} else {
			return inClassId==(int)0x15de4261;
		}
	} else {
		return inClassId==(int)0x782c6273;
	}
}

void YieldObject_obj::setup( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_3835dd2ea6be7832_16_setup)
HXDLIN(  16)		this->yield = ( ( ::src::compiler::signals::YieldSignal)(value) );
            	}


::String YieldObject_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_3835dd2ea6be7832_21_toString)
HXDLIN(  21)		return this->yield->toString();
            	}



hx::ObjectPtr< YieldObject_obj > YieldObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< YieldObject_obj > __this = new YieldObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< YieldObject_obj > YieldObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	YieldObject_obj *__this = (YieldObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(YieldObject_obj), true, "src.compiler.object.builtin.coroutine.YieldObject"));
	*(void **)__this = YieldObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

YieldObject_obj::YieldObject_obj()
{
}

void YieldObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(YieldObject);
	HX_MARK_MEMBER_NAME(yield,"yield");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void YieldObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(yield,"yield");
	 ::src::compiler::object::builtin::ValuedObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val YieldObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"yield") ) { return hx::Val( yield ); }
		if (HX_FIELD_EQ(inName,"setup") ) { return hx::Val( setup_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val YieldObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"yield") ) { yield=inValue.Cast<  ::src::compiler::signals::YieldSignal >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void YieldObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("yield","\x4d","\x9a","\x30","\xf1"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo YieldObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::src::compiler::signals::YieldSignal*/ ,(int)offsetof(YieldObject_obj,yield),HX_HCSTRING("yield","\x4d","\x9a","\x30","\xf1")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *YieldObject_obj_sStaticStorageInfo = 0;
#endif

static ::String YieldObject_obj_sMemberFields[] = {
	HX_HCSTRING("yield","\x4d","\x9a","\x30","\xf1"),
	HX_HCSTRING("setup","\x7d","\xae","\x2f","\x7a"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void YieldObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(YieldObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void YieldObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(YieldObject_obj::__mClass,"__mClass");
};

#endif

hx::Class YieldObject_obj::__mClass;

void YieldObject_obj::__register()
{
	hx::Object *dummy = new YieldObject_obj;
	YieldObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.coroutine.YieldObject","\x61","\x1f","\x53","\x2e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = YieldObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(YieldObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< YieldObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = YieldObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = YieldObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = YieldObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
} // end namespace coroutine
