// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_compiler_Scope
#include <src/compiler/Scope.h>
#endif
#ifndef INCLUDED_src_compiler_commands_Command
#include <src/compiler/commands/Command.h>
#endif
#ifndef INCLUDED_src_compiler_commands_coroutine_CoroutineCodeCommand
#include <src/compiler/commands/coroutine/CoroutineCodeCommand.h>
#endif
#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_ObjectType
#include <src/compiler/object/ObjectType.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FunctionCode
#include <src/compiler/object/builtin/FunctionCode.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FunctionObject
#include <src/compiler/object/builtin/FunctionObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_ValuedObject
#include <src/compiler/object/builtin/ValuedObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_coroutine_CoroutineFunctionObject
#include <src/compiler/object/builtin/coroutine/CoroutineFunctionObject.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_coroutine_CoroutineLoop
#include <src/compiler/object/builtin/coroutine/CoroutineLoop.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_coroutine_CoroutineObject
#include <src/compiler/object/builtin/coroutine/CoroutineObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_59a23eea3296cb14_11_new,"src.compiler.object.builtin.coroutine.CoroutineFunctionObject","new",0x735ae8d6,"src.compiler.object.builtin.coroutine.CoroutineFunctionObject.new","src/compiler/object/builtin/coroutine/CoroutineFunctionObject.hx",11,0x7e800ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_59a23eea3296cb14_15_call,"src.compiler.object.builtin.coroutine.CoroutineFunctionObject","call",0x74e86768,"src.compiler.object.builtin.coroutine.CoroutineFunctionObject.call","src/compiler/object/builtin/coroutine/CoroutineFunctionObject.hx",15,0x7e800ebd)
namespace src{
namespace compiler{
namespace object{
namespace builtin{
namespace coroutine{

void CoroutineFunctionObject_obj::__construct( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args){
            	HX_STACKFRAME(&_hx_pos_59a23eea3296cb14_11_new)
HXDLIN(  11)		super::__construct(scope,type,members,value,args);
            	}

Dynamic CoroutineFunctionObject_obj::__CreateEmpty() { return new CoroutineFunctionObject_obj; }

void *CoroutineFunctionObject_obj::_hx_vtable = 0;

Dynamic CoroutineFunctionObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CoroutineFunctionObject_obj > _hx_result = new CoroutineFunctionObject_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool CoroutineFunctionObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5ede5058) {
		if (inClassId<=(int)0x15de4261) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x15de4261;
		} else {
			return inClassId==(int)0x5ede5058;
		}
	} else {
		return inClassId==(int)0x782c6273 || inClassId==(int)0x7d543174;
	}
}

 ::src::compiler::object::Object CoroutineFunctionObject_obj::call(::Array< ::Dynamic> arguments){
            	HX_GC_STACKFRAME(&_hx_pos_59a23eea3296cb14_15_call)
HXLINE(  16)		::String cscope = this->scope->nextCoroScopeName();
HXDLIN(  16)		 ::src::compiler::Scope cscope1 =  ::src::compiler::Scope_obj::__alloc( HX_CTX ,cscope,this->scope);
HXLINE(  17)		if (this->hasMember(HX_("__bound__",be,5f,06,75))) {
HXLINE(  17)			arguments->insert((int)0,this->getMember(HX_("__bound__",be,5f,06,75)));
            		}
HXLINE(  18)		this->setFunctionArguments(cscope1,arguments);
HXLINE(  20)		 ::src::compiler::object::builtin::coroutine::CoroutineObject source = this->scope->getClosestCoroutine();
HXLINE(  21)		 ::src::compiler::object::builtin::coroutine::CoroutineLoop loop = null();
HXLINE(  22)		if (hx::IsNotNull( source )) {
HXLINE(  23)			loop = source->getLoop();
            		}
HXLINE(  26)		 ::src::compiler::Scope coro = this->scope;
HXDLIN(  26)		 ::src::compiler::object::ObjectType coro1 = this->scope->getType(HX_("CoroutineType",92,ec,d1,42),null());
HXDLIN(  26)		 ::src::compiler::object::builtin::coroutine::CoroutineObject coro2 =  ::src::compiler::object::builtin::coroutine::CoroutineObject_obj::__alloc( HX_CTX ,coro,coro1,null(),loop,this->code->code,cscope1,null());
HXLINE(  27)		cscope1->coroutineObject = coro2;
HXLINE(  28)		return coro2;
            	}



hx::ObjectPtr< CoroutineFunctionObject_obj > CoroutineFunctionObject_obj::__new( ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	hx::ObjectPtr< CoroutineFunctionObject_obj > __this = new CoroutineFunctionObject_obj();
	__this->__construct(scope,type,members,value,args);
	return __this;
}

hx::ObjectPtr< CoroutineFunctionObject_obj > CoroutineFunctionObject_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::Scope scope, ::src::compiler::object::ObjectType type, ::haxe::ds::StringMap members, ::Dynamic value,::Array< ::Dynamic> args) {
	CoroutineFunctionObject_obj *__this = (CoroutineFunctionObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CoroutineFunctionObject_obj), true, "src.compiler.object.builtin.coroutine.CoroutineFunctionObject"));
	*(void **)__this = CoroutineFunctionObject_obj::_hx_vtable;
	__this->__construct(scope,type,members,value,args);
	return __this;
}

CoroutineFunctionObject_obj::CoroutineFunctionObject_obj()
{
}

hx::Val CoroutineFunctionObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"call") ) { return hx::Val( call_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CoroutineFunctionObject_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *CoroutineFunctionObject_obj_sStaticStorageInfo = 0;
#endif

static ::String CoroutineFunctionObject_obj_sMemberFields[] = {
	HX_HCSTRING("call","\x9e","\x18","\xba","\x41"),
	::String(null()) };

static void CoroutineFunctionObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CoroutineFunctionObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CoroutineFunctionObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CoroutineFunctionObject_obj::__mClass,"__mClass");
};

#endif

hx::Class CoroutineFunctionObject_obj::__mClass;

void CoroutineFunctionObject_obj::__register()
{
	hx::Object *dummy = new CoroutineFunctionObject_obj;
	CoroutineFunctionObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.coroutine.CoroutineFunctionObject","\xe4","\x85","\x1c","\x84");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CoroutineFunctionObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(CoroutineFunctionObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< CoroutineFunctionObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CoroutineFunctionObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CoroutineFunctionObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CoroutineFunctionObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
} // end namespace coroutine
