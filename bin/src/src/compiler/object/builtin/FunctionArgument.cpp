// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_object_builtin_FunctionArgument
#include <src/compiler/object/builtin/FunctionArgument.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dbe804855108f0c2_8_new,"src.compiler.object.builtin.FunctionArgument","new",0xd9bbed7c,"src.compiler.object.builtin.FunctionArgument.new","src/compiler/object/builtin/FunctionArgument.hx",8,0x1a3c8592)
HX_LOCAL_STACK_FRAME(_hx_pos_dbe804855108f0c2_25_getDefault,"src.compiler.object.builtin.FunctionArgument","getDefault",0x872f5d2f,"src.compiler.object.builtin.FunctionArgument.getDefault","src/compiler/object/builtin/FunctionArgument.hx",25,0x1a3c8592)
HX_LOCAL_STACK_FRAME(_hx_pos_dbe804855108f0c2_30_getName,"src.compiler.object.builtin.FunctionArgument","getName",0x86f4fd1d,"src.compiler.object.builtin.FunctionArgument.getName","src/compiler/object/builtin/FunctionArgument.hx",30,0x1a3c8592)
HX_LOCAL_STACK_FRAME(_hx_pos_dbe804855108f0c2_35_isKwd,"src.compiler.object.builtin.FunctionArgument","isKwd",0xdace5f8a,"src.compiler.object.builtin.FunctionArgument.isKwd","src/compiler/object/builtin/FunctionArgument.hx",35,0x1a3c8592)
HX_LOCAL_STACK_FRAME(_hx_pos_dbe804855108f0c2_40_isCollector,"src.compiler.object.builtin.FunctionArgument","isCollector",0x4e4a951f,"src.compiler.object.builtin.FunctionArgument.isCollector","src/compiler/object/builtin/FunctionArgument.hx",40,0x1a3c8592)
namespace src{
namespace compiler{
namespace object{
namespace builtin{

void FunctionArgument_obj::__construct(::String name,bool kwd,bool collector, ::src::compiler::object::Object _default){
            	HX_STACKFRAME(&_hx_pos_dbe804855108f0c2_8_new)
HXLINE(  14)		this->_default = null();
HXLINE(  17)		this->name = name;
HXLINE(  18)		this->kwd = kwd;
HXLINE(  19)		this->collector = collector;
HXLINE(  20)		this->_default = _default;
            	}

Dynamic FunctionArgument_obj::__CreateEmpty() { return new FunctionArgument_obj; }

void *FunctionArgument_obj::_hx_vtable = 0;

Dynamic FunctionArgument_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FunctionArgument_obj > _hx_result = new FunctionArgument_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool FunctionArgument_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x01db661a;
}

 ::src::compiler::object::Object FunctionArgument_obj::getDefault(){
            	HX_STACKFRAME(&_hx_pos_dbe804855108f0c2_25_getDefault)
HXDLIN(  25)		return this->_default;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FunctionArgument_obj,getDefault,return )

::String FunctionArgument_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_dbe804855108f0c2_30_getName)
HXDLIN(  30)		return this->name;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FunctionArgument_obj,getName,return )

bool FunctionArgument_obj::isKwd(){
            	HX_STACKFRAME(&_hx_pos_dbe804855108f0c2_35_isKwd)
HXDLIN(  35)		return this->kwd;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FunctionArgument_obj,isKwd,return )

bool FunctionArgument_obj::isCollector(){
            	HX_STACKFRAME(&_hx_pos_dbe804855108f0c2_40_isCollector)
HXDLIN(  40)		return this->collector;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FunctionArgument_obj,isCollector,return )


hx::ObjectPtr< FunctionArgument_obj > FunctionArgument_obj::__new(::String name,bool kwd,bool collector, ::src::compiler::object::Object _default) {
	hx::ObjectPtr< FunctionArgument_obj > __this = new FunctionArgument_obj();
	__this->__construct(name,kwd,collector,_default);
	return __this;
}

hx::ObjectPtr< FunctionArgument_obj > FunctionArgument_obj::__alloc(hx::Ctx *_hx_ctx,::String name,bool kwd,bool collector, ::src::compiler::object::Object _default) {
	FunctionArgument_obj *__this = (FunctionArgument_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FunctionArgument_obj), true, "src.compiler.object.builtin.FunctionArgument"));
	*(void **)__this = FunctionArgument_obj::_hx_vtable;
	__this->__construct(name,kwd,collector,_default);
	return __this;
}

FunctionArgument_obj::FunctionArgument_obj()
{
}

void FunctionArgument_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FunctionArgument);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(kwd,"kwd");
	HX_MARK_MEMBER_NAME(collector,"collector");
	HX_MARK_MEMBER_NAME(_default,"_default");
	HX_MARK_END_CLASS();
}

void FunctionArgument_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(kwd,"kwd");
	HX_VISIT_MEMBER_NAME(collector,"collector");
	HX_VISIT_MEMBER_NAME(_default,"_default");
}

hx::Val FunctionArgument_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"kwd") ) { return hx::Val( kwd ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return hx::Val( name ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"isKwd") ) { return hx::Val( isKwd_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_default") ) { return hx::Val( _default ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"collector") ) { return hx::Val( collector ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getDefault") ) { return hx::Val( getDefault_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"isCollector") ) { return hx::Val( isCollector_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FunctionArgument_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"kwd") ) { kwd=inValue.Cast< bool >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_default") ) { _default=inValue.Cast<  ::src::compiler::object::Object >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"collector") ) { collector=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FunctionArgument_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("name","\x4b","\x72","\xff","\x48"));
	outFields->push(HX_HCSTRING("kwd","\x38","\x99","\x51","\x00"));
	outFields->push(HX_HCSTRING("collector","\x4d","\x45","\x15","\x83"));
	outFields->push(HX_HCSTRING("_default","\x42","\x32","\x7c","\xd5"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FunctionArgument_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(FunctionArgument_obj,name),HX_HCSTRING("name","\x4b","\x72","\xff","\x48")},
	{hx::fsBool,(int)offsetof(FunctionArgument_obj,kwd),HX_HCSTRING("kwd","\x38","\x99","\x51","\x00")},
	{hx::fsBool,(int)offsetof(FunctionArgument_obj,collector),HX_HCSTRING("collector","\x4d","\x45","\x15","\x83")},
	{hx::fsObject /*::src::compiler::object::Object*/ ,(int)offsetof(FunctionArgument_obj,_default),HX_HCSTRING("_default","\x42","\x32","\x7c","\xd5")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FunctionArgument_obj_sStaticStorageInfo = 0;
#endif

static ::String FunctionArgument_obj_sMemberFields[] = {
	HX_HCSTRING("name","\x4b","\x72","\xff","\x48"),
	HX_HCSTRING("kwd","\x38","\x99","\x51","\x00"),
	HX_HCSTRING("collector","\x4d","\x45","\x15","\x83"),
	HX_HCSTRING("_default","\x42","\x32","\x7c","\xd5"),
	HX_HCSTRING("getDefault","\xcb","\x5e","\x25","\xeb"),
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	HX_HCSTRING("isKwd","\x6e","\xc3","\x4f","\xc1"),
	HX_HCSTRING("isCollector","\x03","\xfc","\x95","\x61"),
	::String(null()) };

static void FunctionArgument_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FunctionArgument_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FunctionArgument_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FunctionArgument_obj::__mClass,"__mClass");
};

#endif

hx::Class FunctionArgument_obj::__mClass;

void FunctionArgument_obj::__register()
{
	hx::Object *dummy = new FunctionArgument_obj;
	FunctionArgument_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.object.builtin.FunctionArgument","\x8a","\xbf","\xe8","\x28");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FunctionArgument_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FunctionArgument_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FunctionArgument_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FunctionArgument_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FunctionArgument_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FunctionArgument_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace object
} // end namespace builtin
