// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_compiler_object_Object
#include <src/compiler/object/Object.h>
#endif
#ifndef INCLUDED_src_compiler_signals_CustomErrorSignal
#include <src/compiler/signals/CustomErrorSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_99364ab563455ddb_13_new,"src.compiler.signals.CustomErrorSignal","new",0x93afe809,"src.compiler.signals.CustomErrorSignal.new","src/compiler/signals/CustomErrorSignal.hx",13,0x36fa99e8)
HX_LOCAL_STACK_FRAME(_hx_pos_99364ab563455ddb_20_getName,"src.compiler.signals.CustomErrorSignal","getName",0x12edc22a,"src.compiler.signals.CustomErrorSignal.getName","src/compiler/signals/CustomErrorSignal.hx",20,0x36fa99e8)
namespace src{
namespace compiler{
namespace signals{

void CustomErrorSignal_obj::__construct( ::src::compiler::object::Object obj){
            	HX_STACKFRAME(&_hx_pos_99364ab563455ddb_13_new)
HXLINE(  14)		super::__construct(HX_("",00,00,00,00));
HXLINE(  15)		this->source = obj;
            	}

Dynamic CustomErrorSignal_obj::__CreateEmpty() { return new CustomErrorSignal_obj; }

void *CustomErrorSignal_obj::_hx_vtable = 0;

Dynamic CustomErrorSignal_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CustomErrorSignal_obj > _hx_result = new CustomErrorSignal_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CustomErrorSignal_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f7d2c12) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1f7d2c12;
	} else {
		return inClassId==(int)0x489c5db3;
	}
}

::String CustomErrorSignal_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_99364ab563455ddb_20_getName)
HXDLIN(  20)		return HX_("CustomErrorSignal",ff,6f,83,36);
            	}



hx::ObjectPtr< CustomErrorSignal_obj > CustomErrorSignal_obj::__new( ::src::compiler::object::Object obj) {
	hx::ObjectPtr< CustomErrorSignal_obj > __this = new CustomErrorSignal_obj();
	__this->__construct(obj);
	return __this;
}

hx::ObjectPtr< CustomErrorSignal_obj > CustomErrorSignal_obj::__alloc(hx::Ctx *_hx_ctx, ::src::compiler::object::Object obj) {
	CustomErrorSignal_obj *__this = (CustomErrorSignal_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CustomErrorSignal_obj), true, "src.compiler.signals.CustomErrorSignal"));
	*(void **)__this = CustomErrorSignal_obj::_hx_vtable;
	__this->__construct(obj);
	return __this;
}

CustomErrorSignal_obj::CustomErrorSignal_obj()
{
}

void CustomErrorSignal_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CustomErrorSignal);
	HX_MARK_MEMBER_NAME(source,"source");
	 ::src::compiler::signals::ExitSignal_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CustomErrorSignal_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(source,"source");
	 ::src::compiler::signals::ExitSignal_obj::__Visit(HX_VISIT_ARG);
}

hx::Val CustomErrorSignal_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"source") ) { return hx::Val( source ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val CustomErrorSignal_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"source") ) { source=inValue.Cast<  ::src::compiler::object::Object >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CustomErrorSignal_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("source","\xdb","\xb0","\x31","\x32"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo CustomErrorSignal_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::src::compiler::object::Object*/ ,(int)offsetof(CustomErrorSignal_obj,source),HX_HCSTRING("source","\xdb","\xb0","\x31","\x32")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *CustomErrorSignal_obj_sStaticStorageInfo = 0;
#endif

static ::String CustomErrorSignal_obj_sMemberFields[] = {
	HX_HCSTRING("source","\xdb","\xb0","\x31","\x32"),
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	::String(null()) };

static void CustomErrorSignal_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CustomErrorSignal_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CustomErrorSignal_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CustomErrorSignal_obj::__mClass,"__mClass");
};

#endif

hx::Class CustomErrorSignal_obj::__mClass;

void CustomErrorSignal_obj::__register()
{
	hx::Object *dummy = new CustomErrorSignal_obj;
	CustomErrorSignal_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.signals.CustomErrorSignal","\x97","\x2f","\xaf","\x2a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CustomErrorSignal_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(CustomErrorSignal_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< CustomErrorSignal_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CustomErrorSignal_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CustomErrorSignal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CustomErrorSignal_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace signals
