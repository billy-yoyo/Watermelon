// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_LoopBreakSignal
#include <src/compiler/signals/LoopBreakSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_32446aa359c3efa7_10_new,"src.compiler.signals.LoopBreakSignal","new",0xc71ad06d,"src.compiler.signals.LoopBreakSignal.new","src/compiler/signals/LoopBreakSignal.hx",10,0x527fbfc4)
HX_LOCAL_STACK_FRAME(_hx_pos_32446aa359c3efa7_15_getName,"src.compiler.signals.LoopBreakSignal","getName",0xcdfeac8e,"src.compiler.signals.LoopBreakSignal.getName","src/compiler/signals/LoopBreakSignal.hx",15,0x527fbfc4)
namespace src{
namespace compiler{
namespace signals{

void LoopBreakSignal_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_32446aa359c3efa7_10_new)
HXDLIN(  10)		super::__construct(HX_("",00,00,00,00));
            	}

Dynamic LoopBreakSignal_obj::__CreateEmpty() { return new LoopBreakSignal_obj; }

void *LoopBreakSignal_obj::_hx_vtable = 0;

Dynamic LoopBreakSignal_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< LoopBreakSignal_obj > _hx_result = new LoopBreakSignal_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LoopBreakSignal_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f7d2c12) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1f7d2c12;
	} else {
		return inClassId==(int)0x2980c0fb;
	}
}

::String LoopBreakSignal_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_32446aa359c3efa7_15_getName)
HXDLIN(  15)		return HX_("LoopBreakSignal",63,ec,80,b0);
            	}



LoopBreakSignal_obj::LoopBreakSignal_obj()
{
}

hx::Val LoopBreakSignal_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *LoopBreakSignal_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *LoopBreakSignal_obj_sStaticStorageInfo = 0;
#endif

static ::String LoopBreakSignal_obj_sMemberFields[] = {
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	::String(null()) };

static void LoopBreakSignal_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LoopBreakSignal_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LoopBreakSignal_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LoopBreakSignal_obj::__mClass,"__mClass");
};

#endif

hx::Class LoopBreakSignal_obj::__mClass;

void LoopBreakSignal_obj::__register()
{
	hx::Object *dummy = new LoopBreakSignal_obj;
	LoopBreakSignal_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.signals.LoopBreakSignal","\xfb","\x15","\x1d","\xe6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = LoopBreakSignal_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(LoopBreakSignal_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< LoopBreakSignal_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LoopBreakSignal_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LoopBreakSignal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LoopBreakSignal_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace signals
