// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_compiler_signals_CoroutineEmptyReadSignal
#include <src/compiler/signals/CoroutineEmptyReadSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_756e2ec8d6561660_7_new,"src.compiler.signals.CoroutineEmptyReadSignal","new",0x4653164d,"src.compiler.signals.CoroutineEmptyReadSignal.new","src/compiler/signals/CoroutineEmptyReadSignal.hx",7,0x12cc0182)
HX_LOCAL_STACK_FRAME(_hx_pos_756e2ec8d6561660_11_getName,"src.compiler.signals.CoroutineEmptyReadSignal","getName",0xe8ff626e,"src.compiler.signals.CoroutineEmptyReadSignal.getName","src/compiler/signals/CoroutineEmptyReadSignal.hx",11,0x12cc0182)
namespace src{
namespace compiler{
namespace signals{

void CoroutineEmptyReadSignal_obj::__construct(::String msg){
            	HX_STACKFRAME(&_hx_pos_756e2ec8d6561660_7_new)
HXDLIN(   7)		super::__construct(msg);
            	}

Dynamic CoroutineEmptyReadSignal_obj::__CreateEmpty() { return new CoroutineEmptyReadSignal_obj; }

void *CoroutineEmptyReadSignal_obj::_hx_vtable = 0;

Dynamic CoroutineEmptyReadSignal_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CoroutineEmptyReadSignal_obj > _hx_result = new CoroutineEmptyReadSignal_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CoroutineEmptyReadSignal_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0462ed27) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0462ed27;
	} else {
		return inClassId==(int)0x1f7d2c12;
	}
}

::String CoroutineEmptyReadSignal_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_756e2ec8d6561660_11_getName)
HXDLIN(  11)		return HX_("CoroutineEmptyReadSignal",73,08,37,02);
            	}



CoroutineEmptyReadSignal_obj::CoroutineEmptyReadSignal_obj()
{
}

hx::Val CoroutineEmptyReadSignal_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CoroutineEmptyReadSignal_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *CoroutineEmptyReadSignal_obj_sStaticStorageInfo = 0;
#endif

static ::String CoroutineEmptyReadSignal_obj_sMemberFields[] = {
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	::String(null()) };

static void CoroutineEmptyReadSignal_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CoroutineEmptyReadSignal_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CoroutineEmptyReadSignal_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CoroutineEmptyReadSignal_obj::__mClass,"__mClass");
};

#endif

hx::Class CoroutineEmptyReadSignal_obj::__mClass;

void CoroutineEmptyReadSignal_obj::__register()
{
	hx::Object *dummy = new CoroutineEmptyReadSignal_obj;
	CoroutineEmptyReadSignal_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.signals.CoroutineEmptyReadSignal","\xdb","\xeb","\x84","\x52");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CoroutineEmptyReadSignal_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(CoroutineEmptyReadSignal_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< CoroutineEmptyReadSignal_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CoroutineEmptyReadSignal_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CoroutineEmptyReadSignal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CoroutineEmptyReadSignal_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace signals
