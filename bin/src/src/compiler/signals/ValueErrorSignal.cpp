// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_compiler_signals_ExitSignal
#include <src/compiler/signals/ExitSignal.h>
#endif
#ifndef INCLUDED_src_compiler_signals_ValueErrorSignal
#include <src/compiler/signals/ValueErrorSignal.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bb27d81f17d6c476_7_new,"src.compiler.signals.ValueErrorSignal","new",0x815d8859,"src.compiler.signals.ValueErrorSignal.new","src/compiler/signals/ValueErrorSignal.hx",7,0xf8ed3df6)
HX_LOCAL_STACK_FRAME(_hx_pos_bb27d81f17d6c476_11_getName,"src.compiler.signals.ValueErrorSignal","getName",0x07f9ca7a,"src.compiler.signals.ValueErrorSignal.getName","src/compiler/signals/ValueErrorSignal.hx",11,0xf8ed3df6)
namespace src{
namespace compiler{
namespace signals{

void ValueErrorSignal_obj::__construct(::String msg){
            	HX_STACKFRAME(&_hx_pos_bb27d81f17d6c476_7_new)
HXDLIN(   7)		super::__construct(msg);
            	}

Dynamic ValueErrorSignal_obj::__CreateEmpty() { return new ValueErrorSignal_obj; }

void *ValueErrorSignal_obj::_hx_vtable = 0;

Dynamic ValueErrorSignal_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ValueErrorSignal_obj > _hx_result = new ValueErrorSignal_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ValueErrorSignal_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f7d2c12) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1f7d2c12;
	} else {
		return inClassId==(int)0x3e245ce7;
	}
}

::String ValueErrorSignal_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_bb27d81f17d6c476_11_getName)
HXDLIN(  11)		return HX_("ValueErrorSignal",7f,2c,4a,d7);
            	}



ValueErrorSignal_obj::ValueErrorSignal_obj()
{
}

hx::Val ValueErrorSignal_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ValueErrorSignal_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ValueErrorSignal_obj_sStaticStorageInfo = 0;
#endif

static ::String ValueErrorSignal_obj_sMemberFields[] = {
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	::String(null()) };

static void ValueErrorSignal_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ValueErrorSignal_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ValueErrorSignal_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ValueErrorSignal_obj::__mClass,"__mClass");
};

#endif

hx::Class ValueErrorSignal_obj::__mClass;

void ValueErrorSignal_obj::__register()
{
	hx::Object *dummy = new ValueErrorSignal_obj;
	ValueErrorSignal_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.compiler.signals.ValueErrorSignal","\xe7","\x67","\x52","\x8a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ValueErrorSignal_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ValueErrorSignal_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ValueErrorSignal_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ValueErrorSignal_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ValueErrorSignal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ValueErrorSignal_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace compiler
} // end namespace signals
