// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_ast_TokenPriority
#include <src/ast/TokenPriority.h>
#endif
namespace src{
namespace ast{

::src::ast::TokenPriority TokenPriority_obj::HIGH;

::src::ast::TokenPriority TokenPriority_obj::LOW;

::src::ast::TokenPriority TokenPriority_obj::MAXIMUM;

::src::ast::TokenPriority TokenPriority_obj::MEDIUM;

::src::ast::TokenPriority TokenPriority_obj::MINIMUM;

bool TokenPriority_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("HIGH",62,ff,ce,2f)) { outValue = TokenPriority_obj::HIGH; return true; }
	if (inName==HX_("LOW",74,f0,39,00)) { outValue = TokenPriority_obj::LOW; return true; }
	if (inName==HX_("MAXIMUM",c0,83,e5,5a)) { outValue = TokenPriority_obj::MAXIMUM; return true; }
	if (inName==HX_("MEDIUM",75,00,4b,b1)) { outValue = TokenPriority_obj::MEDIUM; return true; }
	if (inName==HX_("MINIMUM",ae,99,be,cb)) { outValue = TokenPriority_obj::MINIMUM; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(TokenPriority_obj)

int TokenPriority_obj::__FindIndex(::String inName)
{
	if (inName==HX_("HIGH",62,ff,ce,2f)) return 3;
	if (inName==HX_("LOW",74,f0,39,00)) return 1;
	if (inName==HX_("MAXIMUM",c0,83,e5,5a)) return 4;
	if (inName==HX_("MEDIUM",75,00,4b,b1)) return 2;
	if (inName==HX_("MINIMUM",ae,99,be,cb)) return 0;
	return super::__FindIndex(inName);
}

int TokenPriority_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("HIGH",62,ff,ce,2f)) return 0;
	if (inName==HX_("LOW",74,f0,39,00)) return 0;
	if (inName==HX_("MAXIMUM",c0,83,e5,5a)) return 0;
	if (inName==HX_("MEDIUM",75,00,4b,b1)) return 0;
	if (inName==HX_("MINIMUM",ae,99,be,cb)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val TokenPriority_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("HIGH",62,ff,ce,2f)) return HIGH;
	if (inName==HX_("LOW",74,f0,39,00)) return LOW;
	if (inName==HX_("MAXIMUM",c0,83,e5,5a)) return MAXIMUM;
	if (inName==HX_("MEDIUM",75,00,4b,b1)) return MEDIUM;
	if (inName==HX_("MINIMUM",ae,99,be,cb)) return MINIMUM;
	return super::__Field(inName,inCallProp);
}

static ::String TokenPriority_obj_sStaticFields[] = {
	HX_("MINIMUM",ae,99,be,cb),
	HX_("LOW",74,f0,39,00),
	HX_("MEDIUM",75,00,4b,b1),
	HX_("HIGH",62,ff,ce,2f),
	HX_("MAXIMUM",c0,83,e5,5a),
	::String(null())
};

static void TokenPriority_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TokenPriority_obj::HIGH,"HIGH");
	HX_MARK_MEMBER_NAME(TokenPriority_obj::LOW,"LOW");
	HX_MARK_MEMBER_NAME(TokenPriority_obj::MAXIMUM,"MAXIMUM");
	HX_MARK_MEMBER_NAME(TokenPriority_obj::MEDIUM,"MEDIUM");
	HX_MARK_MEMBER_NAME(TokenPriority_obj::MINIMUM,"MINIMUM");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TokenPriority_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TokenPriority_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(TokenPriority_obj::HIGH,"HIGH");
	HX_VISIT_MEMBER_NAME(TokenPriority_obj::LOW,"LOW");
	HX_VISIT_MEMBER_NAME(TokenPriority_obj::MAXIMUM,"MAXIMUM");
	HX_VISIT_MEMBER_NAME(TokenPriority_obj::MEDIUM,"MEDIUM");
	HX_VISIT_MEMBER_NAME(TokenPriority_obj::MINIMUM,"MINIMUM");
};
#endif

hx::Class TokenPriority_obj::__mClass;

Dynamic __Create_TokenPriority_obj() { return new TokenPriority_obj; }

void TokenPriority_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("src.ast.TokenPriority","\x27","\xb1","\x2f","\x19"), hx::TCanCast< TokenPriority_obj >,TokenPriority_obj_sStaticFields,0,
	&__Create_TokenPriority_obj, &__Create,
	&super::__SGetClass(), &CreateTokenPriority_obj, TokenPriority_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , TokenPriority_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &TokenPriority_obj::__GetStatic;
}

void TokenPriority_obj::__boot()
{
HIGH = hx::CreateEnum< TokenPriority_obj >(HX_HCSTRING("HIGH","\x62","\xff","\xce","\x2f"),3,0);
LOW = hx::CreateEnum< TokenPriority_obj >(HX_HCSTRING("LOW","\x74","\xf0","\x39","\x00"),1,0);
MAXIMUM = hx::CreateEnum< TokenPriority_obj >(HX_HCSTRING("MAXIMUM","\xc0","\x83","\xe5","\x5a"),4,0);
MEDIUM = hx::CreateEnum< TokenPriority_obj >(HX_HCSTRING("MEDIUM","\x75","\x00","\x4b","\xb1"),2,0);
MINIMUM = hx::CreateEnum< TokenPriority_obj >(HX_HCSTRING("MINIMUM","\xae","\x99","\xbe","\xcb"),0,0);
}


} // end namespace src
} // end namespace ast
