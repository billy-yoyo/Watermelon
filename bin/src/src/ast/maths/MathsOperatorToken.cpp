// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_src_ast_Token
#include <src/ast/Token.h>
#endif
#ifndef INCLUDED_src_ast_maths_MathsOperatorToken
#include <src/ast/maths/MathsOperatorToken.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a0ab34eeb602bca0_8_new,"src.ast.maths.MathsOperatorToken","new",0x59ce81f5,"src.ast.maths.MathsOperatorToken.new","src/ast/maths/MathsOperatorToken.hx",8,0xcfd27038)
HX_LOCAL_STACK_FRAME(_hx_pos_a0ab34eeb602bca0_24_getName,"src.ast.maths.MathsOperatorToken","getName",0x715dc216,"src.ast.maths.MathsOperatorToken.getName","src/ast/maths/MathsOperatorToken.hx",24,0xcfd27038)
HX_LOCAL_STACK_FRAME(_hx_pos_a0ab34eeb602bca0_14_match,"src.ast.maths.MathsOperatorToken","match",0xb5dd4a1a,"src.ast.maths.MathsOperatorToken.match","src/ast/maths/MathsOperatorToken.hx",14,0xcfd27038)
HX_LOCAL_STACK_FRAME(_hx_pos_a0ab34eeb602bca0_19_partialMatch,"src.ast.maths.MathsOperatorToken","partialMatch",0xda4101cf,"src.ast.maths.MathsOperatorToken.partialMatch","src/ast/maths/MathsOperatorToken.hx",19,0xcfd27038)
namespace src{
namespace ast{
namespace maths{

void MathsOperatorToken_obj::__construct(::String content){
            	HX_STACKFRAME(&_hx_pos_a0ab34eeb602bca0_8_new)
HXDLIN(   8)		super::__construct(content);
            	}

Dynamic MathsOperatorToken_obj::__CreateEmpty() { return new MathsOperatorToken_obj; }

void *MathsOperatorToken_obj::_hx_vtable = 0;

Dynamic MathsOperatorToken_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MathsOperatorToken_obj > _hx_result = new MathsOperatorToken_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MathsOperatorToken_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x07f4f913) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x07f4f913;
	} else {
		return inClassId==(int)0x7cd9a4bb;
	}
}

::String MathsOperatorToken_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_a0ab34eeb602bca0_24_getName)
HXDLIN(  24)		return HX_("MathsOperatorToken",2a,dc,94,41);
            	}


bool MathsOperatorToken_obj::match(::String s){
            	HX_STACKFRAME(&_hx_pos_a0ab34eeb602bca0_14_match)
HXDLIN(  14)		bool _hx_tmp;
HXDLIN(  14)		bool _hx_tmp1;
HXDLIN(  14)		bool _hx_tmp2;
HXDLIN(  14)		bool _hx_tmp3;
HXDLIN(  14)		bool _hx_tmp4;
HXDLIN(  14)		if ((s != HX_("*",2a,00,00,00))) {
HXDLIN(  14)			_hx_tmp4 = (s == HX_("+",2b,00,00,00));
            		}
            		else {
HXDLIN(  14)			_hx_tmp4 = true;
            		}
HXDLIN(  14)		if (!(_hx_tmp4)) {
HXDLIN(  14)			_hx_tmp3 = (s == HX_("-",2d,00,00,00));
            		}
            		else {
HXDLIN(  14)			_hx_tmp3 = true;
            		}
HXDLIN(  14)		if (!(_hx_tmp3)) {
HXDLIN(  14)			_hx_tmp2 = (s == HX_("/",2f,00,00,00));
            		}
            		else {
HXDLIN(  14)			_hx_tmp2 = true;
            		}
HXDLIN(  14)		if (!(_hx_tmp2)) {
HXDLIN(  14)			_hx_tmp1 = (s == HX_("**",c0,24,00,00));
            		}
            		else {
HXDLIN(  14)			_hx_tmp1 = true;
            		}
HXDLIN(  14)		if (!(_hx_tmp1)) {
HXDLIN(  14)			_hx_tmp = (s == HX_("//",20,29,00,00));
            		}
            		else {
HXDLIN(  14)			_hx_tmp = true;
            		}
HXDLIN(  14)		if (!(_hx_tmp)) {
HXDLIN(  14)			return (s == HX_("%",25,00,00,00));
            		}
            		else {
HXDLIN(  14)			return true;
            		}
HXDLIN(  14)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MathsOperatorToken_obj,match,return )

bool MathsOperatorToken_obj::partialMatch(::String s){
            	HX_STACKFRAME(&_hx_pos_a0ab34eeb602bca0_19_partialMatch)
HXDLIN(  19)		return ::src::ast::maths::MathsOperatorToken_obj::match(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MathsOperatorToken_obj,partialMatch,return )


hx::ObjectPtr< MathsOperatorToken_obj > MathsOperatorToken_obj::__new(::String content) {
	hx::ObjectPtr< MathsOperatorToken_obj > __this = new MathsOperatorToken_obj();
	__this->__construct(content);
	return __this;
}

hx::ObjectPtr< MathsOperatorToken_obj > MathsOperatorToken_obj::__alloc(hx::Ctx *_hx_ctx,::String content) {
	MathsOperatorToken_obj *__this = (MathsOperatorToken_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MathsOperatorToken_obj), true, "src.ast.maths.MathsOperatorToken"));
	*(void **)__this = MathsOperatorToken_obj::_hx_vtable;
	__this->__construct(content);
	return __this;
}

MathsOperatorToken_obj::MathsOperatorToken_obj()
{
}

hx::Val MathsOperatorToken_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MathsOperatorToken_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"match") ) { outValue = match_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"partialMatch") ) { outValue = partialMatch_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MathsOperatorToken_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *MathsOperatorToken_obj_sStaticStorageInfo = 0;
#endif

static ::String MathsOperatorToken_obj_sMemberFields[] = {
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	::String(null()) };

static void MathsOperatorToken_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MathsOperatorToken_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MathsOperatorToken_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MathsOperatorToken_obj::__mClass,"__mClass");
};

#endif

hx::Class MathsOperatorToken_obj::__mClass;

static ::String MathsOperatorToken_obj_sStaticFields[] = {
	HX_HCSTRING("match","\x45","\x49","\x23","\x03"),
	HX_HCSTRING("partialMatch","\x04","\x0e","\xc2","\xca"),
	::String(null())
};

void MathsOperatorToken_obj::__register()
{
	hx::Object *dummy = new MathsOperatorToken_obj;
	MathsOperatorToken_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.ast.maths.MathsOperatorToken","\x83","\x63","\xa7","\x42");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MathsOperatorToken_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MathsOperatorToken_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MathsOperatorToken_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MathsOperatorToken_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MathsOperatorToken_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MathsOperatorToken_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MathsOperatorToken_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MathsOperatorToken_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace ast
} // end namespace maths
