// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_src_ast_Token
#include <src/ast/Token.h>
#endif
#ifndef INCLUDED_src_ast_maths_IntegerToken
#include <src/ast/maths/IntegerToken.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5c6d44e47afc81c1_9_new,"src.ast.maths.IntegerToken","new",0x545bba06,"src.ast.maths.IntegerToken.new","src/ast/maths/IntegerToken.hx",9,0x05dec187)
HX_LOCAL_STACK_FRAME(_hx_pos_5c6d44e47afc81c1_25_getName,"src.ast.maths.IntegerToken","getName",0x70b6d6a7,"src.ast.maths.IntegerToken.getName","src/ast/maths/IntegerToken.hx",25,0x05dec187)
HX_LOCAL_STACK_FRAME(_hx_pos_5c6d44e47afc81c1_15_match,"src.ast.maths.IntegerToken","match",0x5835686b,"src.ast.maths.IntegerToken.match","src/ast/maths/IntegerToken.hx",15,0x05dec187)
HX_LOCAL_STACK_FRAME(_hx_pos_5c6d44e47afc81c1_20_partialMatch,"src.ast.maths.IntegerToken","partialMatch",0xb53ebf9e,"src.ast.maths.IntegerToken.partialMatch","src/ast/maths/IntegerToken.hx",20,0x05dec187)
HX_LOCAL_STACK_FRAME(_hx_pos_5c6d44e47afc81c1_11_boot,"src.ast.maths.IntegerToken","boot",0x74000bcc,"src.ast.maths.IntegerToken.boot","src/ast/maths/IntegerToken.hx",11,0x05dec187)
namespace src{
namespace ast{
namespace maths{

void IntegerToken_obj::__construct(::String content){
            	HX_STACKFRAME(&_hx_pos_5c6d44e47afc81c1_9_new)
HXDLIN(   9)		super::__construct(content);
            	}

Dynamic IntegerToken_obj::__CreateEmpty() { return new IntegerToken_obj; }

void *IntegerToken_obj::_hx_vtable = 0;

Dynamic IntegerToken_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntegerToken_obj > _hx_result = new IntegerToken_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool IntegerToken_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4ced7f88) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x4ced7f88;
	} else {
		return inClassId==(int)0x7cd9a4bb;
	}
}

::String IntegerToken_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_5c6d44e47afc81c1_25_getName)
HXDLIN(  25)		return HX_("IntegerToken",7b,f0,70,21);
            	}


 ::EReg IntegerToken_obj::regex;

bool IntegerToken_obj::match(::String s){
            	HX_STACKFRAME(&_hx_pos_5c6d44e47afc81c1_15_match)
HXDLIN(  15)		return ::src::ast::maths::IntegerToken_obj::regex->match(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntegerToken_obj,match,return )

bool IntegerToken_obj::partialMatch(::String s){
            	HX_STACKFRAME(&_hx_pos_5c6d44e47afc81c1_20_partialMatch)
HXDLIN(  20)		return ::src::ast::maths::IntegerToken_obj::match(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntegerToken_obj,partialMatch,return )


hx::ObjectPtr< IntegerToken_obj > IntegerToken_obj::__new(::String content) {
	hx::ObjectPtr< IntegerToken_obj > __this = new IntegerToken_obj();
	__this->__construct(content);
	return __this;
}

hx::ObjectPtr< IntegerToken_obj > IntegerToken_obj::__alloc(hx::Ctx *_hx_ctx,::String content) {
	IntegerToken_obj *__this = (IntegerToken_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IntegerToken_obj), true, "src.ast.maths.IntegerToken"));
	*(void **)__this = IntegerToken_obj::_hx_vtable;
	__this->__construct(content);
	return __this;
}

IntegerToken_obj::IntegerToken_obj()
{
}

hx::Val IntegerToken_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool IntegerToken_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"regex") ) { outValue = ( regex ); return true; }
		if (HX_FIELD_EQ(inName,"match") ) { outValue = match_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"partialMatch") ) { outValue = partialMatch_dyn(); return true; }
	}
	return false;
}

bool IntegerToken_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"regex") ) { regex=ioValue.Cast<  ::EReg >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *IntegerToken_obj_sMemberStorageInfo = 0;
static hx::StaticInfo IntegerToken_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::EReg*/ ,(void *) &IntegerToken_obj::regex,HX_HCSTRING("regex","\xc7","\x2e","\xbf","\xe6")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String IntegerToken_obj_sMemberFields[] = {
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	::String(null()) };

static void IntegerToken_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntegerToken_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(IntegerToken_obj::regex,"regex");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntegerToken_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntegerToken_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(IntegerToken_obj::regex,"regex");
};

#endif

hx::Class IntegerToken_obj::__mClass;

static ::String IntegerToken_obj_sStaticFields[] = {
	HX_HCSTRING("regex","\xc7","\x2e","\xbf","\xe6"),
	HX_HCSTRING("match","\x45","\x49","\x23","\x03"),
	HX_HCSTRING("partialMatch","\x04","\x0e","\xc2","\xca"),
	::String(null())
};

void IntegerToken_obj::__register()
{
	hx::Object *dummy = new IntegerToken_obj;
	IntegerToken_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("src.ast.maths.IntegerToken","\x14","\xff","\xb0","\xeb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &IntegerToken_obj::__GetStatic;
	__mClass->mSetStaticField = &IntegerToken_obj::__SetStatic;
	__mClass->mMarkFunc = IntegerToken_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(IntegerToken_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntegerToken_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntegerToken_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntegerToken_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntegerToken_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntegerToken_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void IntegerToken_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_5c6d44e47afc81c1_11_boot)
HXDLIN(  11)		regex =  ::EReg_obj::__alloc( HX_CTX ,HX_("^([0-9]+)$",34,2b,85,bf),HX_("",00,00,00,00));
            	}
}

} // end namespace src
} // end namespace ast
} // end namespace maths
